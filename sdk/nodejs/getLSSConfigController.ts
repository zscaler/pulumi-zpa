// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * * [Official documentation](https://help.zscaler.com/zpa/about-log-streaming-service)
 * * [API documentation](https://help.zscaler.com/zpa/configuring-log-streaming-service-configurations-using-api)
 *
 * Use the **zpa_lss_config_controller** data source to get information about a Log Streaming (LSS) configuration resource created in the Zscaler Private Access.
 */
export function getLSSConfigController(args?: GetLSSConfigControllerArgs, opts?: pulumi.InvokeOptions): Promise<GetLSSConfigControllerResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getLSSConfigController:getLSSConfigController", {
        "configs": args.configs,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getLSSConfigController.
 */
export interface GetLSSConfigControllerArgs {
    configs?: inputs.GetLSSConfigControllerConfig[];
    id?: string;
}

/**
 * A collection of values returned by getLSSConfigController.
 */
export interface GetLSSConfigControllerResult {
    readonly configs: outputs.GetLSSConfigControllerConfig[];
    readonly connectorGroups: outputs.GetLSSConfigControllerConnectorGroup[];
    readonly id?: string;
    readonly policyRules: outputs.GetLSSConfigControllerPolicyRule[];
}
/**
 * * [Official documentation](https://help.zscaler.com/zpa/about-log-streaming-service)
 * * [API documentation](https://help.zscaler.com/zpa/configuring-log-streaming-service-configurations-using-api)
 *
 * Use the **zpa_lss_config_controller** data source to get information about a Log Streaming (LSS) configuration resource created in the Zscaler Private Access.
 */
export function getLSSConfigControllerOutput(args?: GetLSSConfigControllerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLSSConfigControllerResult> {
    return pulumi.output(args).apply((a: any) => getLSSConfigController(a, opts))
}

/**
 * A collection of arguments for invoking getLSSConfigController.
 */
export interface GetLSSConfigControllerOutputArgs {
    configs?: pulumi.Input<pulumi.Input<inputs.GetLSSConfigControllerConfigArgs>[]>;
    id?: pulumi.Input<string>;
}
