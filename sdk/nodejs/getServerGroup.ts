// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@bdzscaler/pulumi-zpa";
 *
 * // ZPA Server Group Data Source
 * const example = zpa.getServerGroup({
 *     name: "server_group_name",
 * });
 * ```
 */
export function getServerGroup(args?: GetServerGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetServerGroupResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getServerGroup:getServerGroup", {
        "id": args.id,
        "microtenantId": args.microtenantId,
        "microtenantName": args.microtenantName,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getServerGroup.
 */
export interface GetServerGroupArgs {
    id?: string;
    microtenantId?: string;
    microtenantName?: string;
    name?: string;
}

/**
 * A collection of values returned by getServerGroup.
 */
export interface GetServerGroupResult {
    readonly appConnectorGroups: outputs.GetServerGroupAppConnectorGroup[];
    readonly applications: outputs.GetServerGroupApplication[];
    readonly configSpace: string;
    readonly creationTime: string;
    readonly description: string;
    readonly dynamicDiscovery: boolean;
    readonly enabled: boolean;
    readonly id?: string;
    readonly ipAnchored: boolean;
    readonly microtenantId?: string;
    readonly microtenantName?: string;
    readonly modifiedTime: string;
    readonly modifiedby: string;
    readonly name?: string;
    readonly servers: outputs.GetServerGroupServer[];
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@bdzscaler/pulumi-zpa";
 *
 * // ZPA Server Group Data Source
 * const example = zpa.getServerGroup({
 *     name: "server_group_name",
 * });
 * ```
 */
export function getServerGroupOutput(args?: GetServerGroupOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetServerGroupResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("zpa:index/getServerGroup:getServerGroup", {
        "id": args.id,
        "microtenantId": args.microtenantId,
        "microtenantName": args.microtenantName,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getServerGroup.
 */
export interface GetServerGroupOutputArgs {
    id?: pulumi.Input<string>;
    microtenantId?: pulumi.Input<string>;
    microtenantName?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
