// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * * [Official documentation](https://help.zscaler.com/zpa/about-privileged-credential-pools)
 * * [API documentation](https://help.zscaler.com/zpa/configuring-privileged-credentials-using-api)
 *
 * The **zpa_pra_credential_pool** data source to get information about a privileged remote access credential pool created in the Zscaler Private Access cloud.
 *
 * **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
 *
 * ## Example Usage
 *
 * # Retrieves PRA Credential Pool By Name
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@bdzscaler/pulumi-zpa";
 *
 * const _this = zpa.getCredentialPool({
 *     name: "PRACredentialPool01",
 * });
 * ```
 *
 * # Retrieves PRA Credential Pool By ID
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@bdzscaler/pulumi-zpa";
 *
 * const _this = zpa.getCredentialPool({
 *     id: "5458",
 * });
 * ```
 */
/** @deprecated zpa.index/getpracredentialpool.getPraCredentialPool has been deprecated in favor of zpa.index/getcredentialpool.getCredentialPool */
export function getPraCredentialPool(args?: GetPraCredentialPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetPraCredentialPoolResult> {
    pulumi.log.warn("getPraCredentialPool is deprecated: zpa.index/getpracredentialpool.getPraCredentialPool has been deprecated in favor of zpa.index/getcredentialpool.getCredentialPool")
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getPraCredentialPool:getPraCredentialPool", {
        "credentials": args.credentials,
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getPraCredentialPool.
 */
export interface GetPraCredentialPoolArgs {
    credentials?: inputs.GetPraCredentialPoolCredential[];
    id?: string;
    /**
     * - (String) The name of the privileged credential.
     */
    name?: string;
}

/**
 * A collection of values returned by getPraCredentialPool.
 */
export interface GetPraCredentialPoolResult {
    readonly creationTime: string;
    readonly credentialMappingCount: string;
    readonly credentialType: string;
    readonly credentials: outputs.GetPraCredentialPoolCredential[];
    readonly id?: string;
    readonly microtenantId: string;
    readonly microtenantName: string;
    readonly modifiedBy: string;
    readonly modifiedTime: string;
    /**
     * - (String) The name of the privileged credential.
     */
    readonly name?: string;
}
/**
 * * [Official documentation](https://help.zscaler.com/zpa/about-privileged-credential-pools)
 * * [API documentation](https://help.zscaler.com/zpa/configuring-privileged-credentials-using-api)
 *
 * The **zpa_pra_credential_pool** data source to get information about a privileged remote access credential pool created in the Zscaler Private Access cloud.
 *
 * **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
 *
 * ## Example Usage
 *
 * # Retrieves PRA Credential Pool By Name
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@bdzscaler/pulumi-zpa";
 *
 * const _this = zpa.getCredentialPool({
 *     name: "PRACredentialPool01",
 * });
 * ```
 *
 * # Retrieves PRA Credential Pool By ID
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@bdzscaler/pulumi-zpa";
 *
 * const _this = zpa.getCredentialPool({
 *     id: "5458",
 * });
 * ```
 */
/** @deprecated zpa.index/getpracredentialpool.getPraCredentialPool has been deprecated in favor of zpa.index/getcredentialpool.getCredentialPool */
export function getPraCredentialPoolOutput(args?: GetPraCredentialPoolOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPraCredentialPoolResult> {
    pulumi.log.warn("getPraCredentialPool is deprecated: zpa.index/getpracredentialpool.getPraCredentialPool has been deprecated in favor of zpa.index/getcredentialpool.getCredentialPool")
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("zpa:index/getPraCredentialPool:getPraCredentialPool", {
        "credentials": args.credentials,
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getPraCredentialPool.
 */
export interface GetPraCredentialPoolOutputArgs {
    credentials?: pulumi.Input<pulumi.Input<inputs.GetPraCredentialPoolCredentialArgs>[]>;
    id?: pulumi.Input<string>;
    /**
     * - (String) The name of the privileged credential.
     */
    name?: pulumi.Input<string>;
}
