// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ApplicationSegmentBrowserAccessClientlessApp {
    /**
     * If you want ZPA to forward unauthenticated HTTP preflight OPTIONS requests from the browser to the app.. Supported values: `true` and `false`
     */
    allowOptions?: pulumi.Input<boolean>;
    /**
     * Port for the BA app.
     */
    applicationPort: pulumi.Input<string>;
    /**
     * Protocol for the BA app. Supported values: `HTTP` and `HTTPS`
     */
    applicationProtocol: pulumi.Input<string>;
    /**
     * ID of the BA certificate. Refer to the data source documentation for `zpa.BrowserCertificate`
     */
    certificateId: pulumi.Input<string>;
    /**
     * (Optional)
     */
    cname?: pulumi.Input<string>;
    /**
     * (Optional) Description of the application.
     */
    description?: pulumi.Input<string>;
    /**
     * Domain name or IP address of the BA app.
     */
    domain?: pulumi.Input<string>;
    /**
     * (Optional) - Whether this app is enabled or not.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * (Optional)
     */
    hidden?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    /**
     * (Optional)
     */
    localDomain?: pulumi.Input<string>;
    /**
     * Name of BA app.
     */
    name: pulumi.Input<string>;
    /**
     * (Optional)
     */
    path?: pulumi.Input<string>;
    /**
     * (Optional)
     */
    trustUntrustedCert?: pulumi.Input<boolean>;
}

export interface ApplicationSegmentBrowserAccessServerGroup {
    ids?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApplicationSegmentBrowserAccessTcpPortRange {
    from?: pulumi.Input<string>;
    to?: pulumi.Input<string>;
}

export interface ApplicationSegmentBrowserAccessUdpPortRange {
    from?: pulumi.Input<string>;
    to?: pulumi.Input<string>;
}

export interface ApplicationSegmentInspectionCommonAppsDto {
    appsConfigs?: pulumi.Input<pulumi.Input<inputs.ApplicationSegmentInspectionCommonAppsDtoAppsConfig>[]>;
}

export interface ApplicationSegmentInspectionCommonAppsDtoAppsConfig {
    /**
     * Indicates the type of application as inspection. Supported value: `INSPECT`
     */
    appTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Port for the Inspection Application Segment.
     */
    applicationPort?: pulumi.Input<string>;
    /**
     * Protocol for the Inspection Application Segment.. Supported values: `HTTP` and `HTTPS`
     */
    applicationProtocol?: pulumi.Input<string>;
    /**
     * ID of the signing certificate. This field is required if the ``applicationProtocol`` is set to `HTTPS`. The ``certificateId`` is **NOT** supported if the applicationProtocol is set to `HTTP`.
     */
    certificateId?: pulumi.Input<string>;
    /**
     * (Optional) Description of the application.
     */
    description?: pulumi.Input<string>;
    /**
     * Domain name of the Inspection Application Segment.
     */
    domain?: pulumi.Input<string>;
    /**
     * Whether this application is enabled or not
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Name of the Inspection Application Segment.
     */
    name?: pulumi.Input<string>;
    trustUntrustedCert?: pulumi.Input<boolean>;
}

export interface ApplicationSegmentInspectionServerGroup {
    ids?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApplicationSegmentInspectionTcpPortRange {
    from?: pulumi.Input<string>;
    to?: pulumi.Input<string>;
}

export interface ApplicationSegmentInspectionUdpPortRange {
    from?: pulumi.Input<string>;
    to?: pulumi.Input<string>;
}

export interface ApplicationSegmentPRACommonAppsDto {
    appsConfigs?: pulumi.Input<pulumi.Input<inputs.ApplicationSegmentPRACommonAppsDtoAppsConfig>[]>;
}

export interface ApplicationSegmentPRACommonAppsDtoAppsConfig {
    appId?: pulumi.Input<string>;
    /**
     * Indicates the type of application as Privileged Remote Access. Supported value: `SECURE_REMOTE_ACCESS`
     */
    appTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Port for the Privileged Remote Access
     */
    applicationPort?: pulumi.Input<string>;
    /**
     * Protocol for the Privileged Remote Access. Supported values: `RDP` and `SSH`
     */
    applicationProtocol?: pulumi.Input<string>;
    /**
     * Parameter required when `applicationProtocol` is of type `RDP`
     */
    connectionSecurity?: pulumi.Input<string>;
    /**
     * (Optional) Description of the application.
     */
    description?: pulumi.Input<string>;
    /**
     * Domain name of the Privileged Remote Access
     */
    domain?: pulumi.Input<string>;
    /**
     * Whether this application is enabled or not
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Name of the Privileged Remote Access
     */
    name?: pulumi.Input<string>;
}

export interface ApplicationSegmentPRAServerGroup {
    ids?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApplicationSegmentPRATcpPortRange {
    from?: pulumi.Input<string>;
    to?: pulumi.Input<string>;
}

export interface ApplicationSegmentPRAUdpPortRange {
    from?: pulumi.Input<string>;
    to?: pulumi.Input<string>;
}

export interface ApplicationSegmentServerGroup {
    ids?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApplicationSegmentTcpPortRange {
    from?: pulumi.Input<string>;
    to?: pulumi.Input<string>;
}

export interface ApplicationSegmentUdpPortRange {
    from?: pulumi.Input<string>;
    to?: pulumi.Input<string>;
}

export interface BrowserAccessClientlessApp {
    /**
     * If you want ZPA to forward unauthenticated HTTP preflight OPTIONS requests from the browser to the app.. Supported values: `true` and `false`
     */
    allowOptions?: pulumi.Input<boolean>;
    /**
     * Port for the BA app.
     */
    applicationPort: pulumi.Input<string>;
    /**
     * Protocol for the BA app. Supported values: `HTTP` and `HTTPS`
     */
    applicationProtocol: pulumi.Input<string>;
    /**
     * ID of the BA certificate. Refer to the data source documentation for `zpa.BrowserCertificate`
     */
    certificateId: pulumi.Input<string>;
    /**
     * (Optional)
     */
    cname?: pulumi.Input<string>;
    /**
     * (Optional) Description of the application.
     */
    description?: pulumi.Input<string>;
    /**
     * Domain name or IP address of the BA app.
     */
    domain?: pulumi.Input<string>;
    /**
     * (Optional) - Whether this app is enabled or not.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * (Optional)
     */
    hidden?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    /**
     * (Optional)
     */
    localDomain?: pulumi.Input<string>;
    /**
     * Name of BA app.
     */
    name: pulumi.Input<string>;
    /**
     * (Optional)
     */
    path?: pulumi.Input<string>;
    /**
     * (Optional)
     */
    trustUntrustedCert?: pulumi.Input<boolean>;
}

export interface BrowserAccessServerGroup {
    ids?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BrowserAccessTcpPortRange {
    from?: pulumi.Input<string>;
    to?: pulumi.Input<string>;
}

export interface BrowserAccessUdpPortRange {
    from?: pulumi.Input<string>;
    to?: pulumi.Input<string>;
}

export interface CloudBrowserIsolationExternalProfileSecurityControl {
    allowPrinting?: pulumi.Input<boolean>;
    copyPaste?: pulumi.Input<string>;
    documentViewer?: pulumi.Input<boolean>;
    localRender?: pulumi.Input<boolean>;
    restrictKeystrokes?: pulumi.Input<boolean>;
    uploadDownload?: pulumi.Input<string>;
}

export interface CloudBrowserIsolationExternalProfileUserExperience {
    browserInBrowser?: pulumi.Input<boolean>;
    sessionPersistence?: pulumi.Input<boolean>;
}

export interface GetApplicationSegmentBrowserAccessTcpPortRange {
    from?: string;
    to?: string;
}

export interface GetApplicationSegmentBrowserAccessTcpPortRangeArgs {
    from?: pulumi.Input<string>;
    to?: pulumi.Input<string>;
}

export interface GetApplicationSegmentBrowserAccessUdpPortRange {
    from?: string;
    to?: string;
}

export interface GetApplicationSegmentBrowserAccessUdpPortRangeArgs {
    from?: pulumi.Input<string>;
    to?: pulumi.Input<string>;
}

export interface GetApplicationSegmentInspectionTcpPortRange {
    from?: string;
    to?: string;
}

export interface GetApplicationSegmentInspectionTcpPortRangeArgs {
    from?: pulumi.Input<string>;
    to?: pulumi.Input<string>;
}

export interface GetApplicationSegmentInspectionUdpPortRange {
    from?: string;
    to?: string;
}

export interface GetApplicationSegmentInspectionUdpPortRangeArgs {
    from?: pulumi.Input<string>;
    to?: pulumi.Input<string>;
}

export interface GetApplicationSegmentPRATcpPortRange {
    from?: string;
    to?: string;
}

export interface GetApplicationSegmentPRATcpPortRangeArgs {
    from?: pulumi.Input<string>;
    to?: pulumi.Input<string>;
}

export interface GetApplicationSegmentPRAUdpPortRange {
    from?: string;
    to?: string;
}

export interface GetApplicationSegmentPRAUdpPortRangeArgs {
    from?: pulumi.Input<string>;
    to?: pulumi.Input<string>;
}

export interface GetApplicationSegmentTcpPortRange {
    from?: string;
    to?: string;
}

export interface GetApplicationSegmentTcpPortRangeArgs {
    from?: pulumi.Input<string>;
    to?: pulumi.Input<string>;
}

export interface GetApplicationSegmentUdpPortRange {
    from?: string;
    to?: string;
}

export interface GetApplicationSegmentUdpPortRangeArgs {
    from?: pulumi.Input<string>;
    to?: pulumi.Input<string>;
}

export interface GetLSSConfigControllerConfig {
    /**
     * (string)
     */
    auditMessage?: string;
    /**
     * (string)
     */
    description?: string;
    /**
     * (bool)
     */
    enabled?: boolean;
    /**
     * (string)
     */
    filters?: string[];
    /**
     * (string)
     */
    format?: string;
    /**
     * This field defines the name of the log streaming resource.
     */
    id?: string;
    /**
     * (string)
     */
    lssHost?: string;
    /**
     * (string)
     */
    lssPort?: string;
    /**
     * This field defines the name of the log streaming resource.
     */
    name?: string;
    /**
     * (string)
     */
    sourceLogType?: string;
    useTls?: boolean;
}

export interface GetLSSConfigControllerConfigArgs {
    /**
     * (string)
     */
    auditMessage?: pulumi.Input<string>;
    /**
     * (string)
     */
    description?: pulumi.Input<string>;
    /**
     * (bool)
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * (string)
     */
    filters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (string)
     */
    format?: pulumi.Input<string>;
    /**
     * This field defines the name of the log streaming resource.
     */
    id?: pulumi.Input<string>;
    /**
     * (string)
     */
    lssHost?: pulumi.Input<string>;
    /**
     * (string)
     */
    lssPort?: pulumi.Input<string>;
    /**
     * This field defines the name of the log streaming resource.
     */
    name?: pulumi.Input<string>;
    /**
     * (string)
     */
    sourceLogType?: pulumi.Input<string>;
    useTls?: pulumi.Input<boolean>;
}

export interface InspectionCustomControlsAssociatedInspectionProfileName {
    ids?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface InspectionCustomControlsRule {
    conditions?: pulumi.Input<inputs.InspectionCustomControlsRuleConditions>;
    /**
     * Name of the rules. If rules.type is set to REQUEST_HEADERS, REQUEST_COOKIES, or RESPONSE_HEADERS, the rules.name field is required.
     */
    names?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Type value for the rules.
     */
    type?: pulumi.Input<string>;
}

export interface InspectionCustomControlsRuleConditions {
    /**
     * Signifies the key for the object type
     */
    lhs?: pulumi.Input<string>;
    /**
     * Denotes the operation type.
     */
    op?: pulumi.Input<string>;
    /**
     * Denotes the value for the given object type. Its value depends on the key.
     */
    rhs?: pulumi.Input<string>;
}

export interface InspectionProfileControlsInfo {
    /**
     * (string) Control types. Supported Values: `WEBSOCKET_PREDEFINED`, `WEBSOCKET_CUSTOM`, `CUSTOM`, `PREDEFINED`, `ZSCALER`
     */
    controlType?: pulumi.Input<string>;
}

export interface InspectionProfileCustomControl {
    /**
     * The action of the predefined control. Supported values: `PASS`, `BLOCK` and `REDIRECT`
     */
    action?: pulumi.Input<string>;
    /**
     * Value for the predefined controls action. This field is only required if the action is set to REDIRECT. This field is only required if the action is set to `REDIRECT`.
     */
    actionValue?: pulumi.Input<string>;
    /**
     * ID of the predefined control
     */
    id: pulumi.Input<string>;
}

export interface InspectionProfilePredefinedControl {
    /**
     * The action of the predefined control. Supported values: `PASS`, `BLOCK` and `REDIRECT`
     */
    action?: pulumi.Input<string>;
    /**
     * Value for the predefined controls action. This field is only required if the action is set to REDIRECT. This field is only required if the action is set to `REDIRECT`.
     */
    actionValue?: pulumi.Input<string>;
    /**
     * (string) Control types. Supported Values: `WEBSOCKET_PREDEFINED`, `WEBSOCKET_CUSTOM`, `CUSTOM`, `PREDEFINED`, `ZSCALER`
     */
    controlType?: pulumi.Input<string>;
    /**
     * ID of the predefined control
     */
    id?: pulumi.Input<string>;
    /**
     * The protocol type of the predefined control
     */
    protocolType?: pulumi.Input<string>;
}

export interface LSSConfigControllerConfig {
    auditMessage?: pulumi.Input<string>;
    /**
     * Description of the LSS configuration
     */
    description?: pulumi.Input<string>;
    /**
     * Whether this LSS configuration is enabled or not. Supported values: true, false
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Filter for the LSS configuration. Format given by the following API to get status codes: /mgmtconfig/v2/admin/lssConfig/statusCodes
     */
    filters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Format of the log type. Format given by the following API to get formats: /mgmtconfig/v2/admin/lssConfig/logType/formats
     */
    format: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    /**
     * Host of the LSS configuration
     */
    lssHost: pulumi.Input<string>;
    /**
     * Port of the LSS configuration
     */
    lssPort: pulumi.Input<string>;
    /**
     * Name of the LSS configuration
     */
    name: pulumi.Input<string>;
    /**
     * Log type of the LSS configuration
     */
    sourceLogType: pulumi.Input<string>;
    useTls?: pulumi.Input<boolean>;
}

export interface LSSConfigControllerConnectorGroup {
    ids?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LSSConfigControllerPolicyRuleResource {
    /**
     * This is for providing the rule action.
     */
    action?: pulumi.Input<string>;
    /**
     * This field defines the description of the server.
     */
    actionId?: pulumi.Input<string>;
    bypassDefaultRule?: pulumi.Input<boolean>;
    /**
     * This is for proviidng the set of conditions for the policy.
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.LSSConfigControllerPolicyRuleResourceCondition>[]>;
    /**
     * This is for providing a customer message for the user.
     */
    customMsg?: pulumi.Input<string>;
    /**
     * This is for providing a customer message for the user.
     */
    defaultRule?: pulumi.Input<boolean>;
    /**
     * This is the description of the access policy.
     */
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    lssDefaultRule?: pulumi.Input<boolean>;
    microtenantId?: pulumi.Input<string>;
    /**
     * This is the name of the policy.
     */
    name: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    policySetId?: pulumi.Input<string>;
    policyType?: pulumi.Input<string>;
    priority?: pulumi.Input<string>;
    reauthDefaultRule?: pulumi.Input<boolean>;
    reauthIdleTimeout?: pulumi.Input<string>;
    reauthTimeout?: pulumi.Input<string>;
    /**
     * @deprecated The `ruleOrder` field is now deprecated for all zpa access policy resources in favor of the resource `zpa.PolicyAccessReorderRule`
     */
    ruleOrder?: pulumi.Input<string>;
    zpnCbiProfileId?: pulumi.Input<string>;
    zpnInspectionProfileId?: pulumi.Input<string>;
    zpnIsolationProfileId?: pulumi.Input<string>;
}

export interface LSSConfigControllerPolicyRuleResourceCondition {
    negated?: pulumi.Input<boolean>;
    /**
     * This signifies the various policy criteria.
     */
    operands?: pulumi.Input<pulumi.Input<inputs.LSSConfigControllerPolicyRuleResourceConditionOperand>[]>;
    operator: pulumi.Input<string>;
}

export interface LSSConfigControllerPolicyRuleResourceConditionOperand {
    entryValues?: pulumi.Input<pulumi.Input<inputs.LSSConfigControllerPolicyRuleResourceConditionOperandEntryValue>[]>;
    /**
     * This is for specifying the policy critiera.
     */
    objectType: pulumi.Input<string>;
    /**
     * This denotes a list of values for the given object type. The value depend upon the key. If rhs is defined this list will be ignored
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LSSConfigControllerPolicyRuleResourceConditionOperandEntryValue {
    lhs?: pulumi.Input<string>;
    rhs?: pulumi.Input<string>;
}

export interface MicrotenantUser {
    displayName?: pulumi.Input<string>;
    microtenantId?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}

export interface PolicyAccessForwardingRuleCondition {
    id?: pulumi.Input<string>;
    microtenantId?: pulumi.Input<string>;
    negated?: pulumi.Input<boolean>;
    /**
     * This signifies the various policy criteria.
     */
    operands?: pulumi.Input<pulumi.Input<inputs.PolicyAccessForwardingRuleConditionOperand>[]>;
    operator: pulumi.Input<string>;
}

export interface PolicyAccessForwardingRuleConditionOperand {
    id?: pulumi.Input<string>;
    idpId?: pulumi.Input<string>;
    /**
     * This signifies the key for the object type. String ID example: id
     */
    lhs: pulumi.Input<string>;
    /**
     * This denotes the value for the given object type. Its value depends upon the key.
     */
    microtenantId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * This is for specifying the policy critiera.
     */
    objectType: pulumi.Input<string>;
    /**
     * This denotes the value for the given object type. Its value depends upon the key.
     */
    rhs?: pulumi.Input<string>;
    /**
     * This denotes a list of values for the given object type. The value depend upon the key. If rhs is defined this list will be ignored
     */
    rhsLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PolicyAccessInspectionRuleCondition {
    id?: pulumi.Input<string>;
    microtenantId?: pulumi.Input<string>;
    negated?: pulumi.Input<boolean>;
    /**
     * This signifies the various policy criteria.
     */
    operands?: pulumi.Input<pulumi.Input<inputs.PolicyAccessInspectionRuleConditionOperand>[]>;
    operator: pulumi.Input<string>;
}

export interface PolicyAccessInspectionRuleConditionOperand {
    id?: pulumi.Input<string>;
    idpId?: pulumi.Input<string>;
    /**
     * This signifies the key for the object type. String ID example: id
     */
    lhs: pulumi.Input<string>;
    /**
     * This denotes the value for the given object type. Its value depends upon the key.
     */
    microtenantId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * This is for specifying the policy critiera.
     */
    objectType: pulumi.Input<string>;
    /**
     * This denotes the value for the given object type. Its value depends upon the key.
     */
    rhs?: pulumi.Input<string>;
    /**
     * This denotes a list of values for the given object type. The value depend upon the key. If rhs is defined this list will be ignored
     */
    rhsLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PolicyAccessIsolationRuleCondition {
    id?: pulumi.Input<string>;
    microtenantId?: pulumi.Input<string>;
    negated?: pulumi.Input<boolean>;
    /**
     * This signifies the various policy criteria.
     */
    operands?: pulumi.Input<pulumi.Input<inputs.PolicyAccessIsolationRuleConditionOperand>[]>;
    operator: pulumi.Input<string>;
}

export interface PolicyAccessIsolationRuleConditionOperand {
    id?: pulumi.Input<string>;
    idpId?: pulumi.Input<string>;
    /**
     * This signifies the key for the object type. String ID example: id
     */
    lhs: pulumi.Input<string>;
    /**
     * This denotes the value for the given object type. Its value depends upon the key.
     */
    microtenantId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * This is for specifying the policy critiera.
     */
    objectType: pulumi.Input<string>;
    /**
     * This denotes the value for the given object type. Its value depends upon the key.
     */
    rhs?: pulumi.Input<string>;
    /**
     * This denotes a list of values for the given object type. The value depend upon the key. If rhs is defined this list will be ignored
     */
    rhsLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PolicyAccessReorderRuleRule {
    /**
     * (Required) - The ID of the rule to which the order number will be applied.
     */
    id: pulumi.Input<string>;
    /**
     * (Required) - The order number that should be applied to the respective rule ID.
     */
    order: pulumi.Input<string>;
}

export interface PolicyAccessRuleAppConnectorGroup {
    /**
     * (Optional) The ID of a server group resource
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PolicyAccessRuleAppServerGroup {
    /**
     * (Optional) The ID of a server group resource
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PolicyAccessRuleCondition {
    /**
     * (Optional) The ID of a server group resource
     */
    id?: pulumi.Input<string>;
    /**
     * (Optional) The ID of the microtenant the resource is to be associated with.
     */
    microtenantId?: pulumi.Input<string>;
    /**
     * (Optional) Supported values: ``true`` or ``false``
     */
    negated?: pulumi.Input<boolean>;
    /**
     * (Optional) - Operands block must be repeated if multiple per `objectType` conditions are to be added to the rule.
     */
    operands?: pulumi.Input<pulumi.Input<inputs.PolicyAccessRuleConditionOperand>[]>;
    /**
     * (Optional) Supported values: ``AND``, and ``OR``
     */
    operator: pulumi.Input<string>;
}

export interface PolicyAccessRuleConditionOperand {
    /**
     * (Optional) The ID of a server group resource
     */
    id?: pulumi.Input<string>;
    /**
     * (Optional)
     */
    idpId?: pulumi.Input<string>;
    /**
     * (Optional) LHS must always carry the string value ``id`` or the attribute ID of the resource being associated with the rule.
     */
    lhs: pulumi.Input<string>;
    /**
     * (Optional) The ID of the microtenant the resource is to be associated with.
     */
    microtenantId?: pulumi.Input<string>;
    /**
     * (Optional)
     */
    name?: pulumi.Input<string>;
    /**
     * (Optional) This is for specifying the policy critiera. Supported values: `APP`, `APP_GROUP`, `SAML`, `IDP`, `CLIENT_TYPE`, `TRUSTED_NETWORK`, `POSTURE`, `SCIM`, `SCIM_GROUP`, and `CLOUD_CONNECTOR_GROUP`. `TRUSTED_NETWORK`, `CLIENT_TYPE`, `PLATFORM`, `COUNTRY_CODE`.
     */
    objectType: pulumi.Input<string>;
    /**
     * (Optional) RHS is either the ID attribute of a resource or fixed string value. Refer to the chart below for further details.
     */
    rhs?: pulumi.Input<string>;
    /**
     * This denotes a list of values for the given object type. The value depend upon the key. If rhs is defined this list will be ignored
     */
    rhsLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PolicyAccessTimeOutRuleCondition {
    id?: pulumi.Input<string>;
    microtenantId?: pulumi.Input<string>;
    negated?: pulumi.Input<boolean>;
    /**
     * This signifies the various policy criteria.
     */
    operands?: pulumi.Input<pulumi.Input<inputs.PolicyAccessTimeOutRuleConditionOperand>[]>;
    operator: pulumi.Input<string>;
}

export interface PolicyAccessTimeOutRuleConditionOperand {
    id?: pulumi.Input<string>;
    idpId?: pulumi.Input<string>;
    /**
     * This signifies the key for the object type. String ID example: id
     */
    lhs: pulumi.Input<string>;
    /**
     * This denotes the value for the given object type. Its value depends upon the key.
     */
    microtenantId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * This is for specifying the policy critiera.
     */
    objectType: pulumi.Input<string>;
    /**
     * This denotes the value for the given object type. Its value depends upon the key.
     */
    rhs?: pulumi.Input<string>;
    /**
     * This denotes a list of values for the given object type. The value depend upon the key. If rhs is defined this list will be ignored
     */
    rhsLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SegmentGroupApplication {
    id?: pulumi.Input<string>;
}

export interface ServerGroupAppConnectorGroup {
    ids?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ServerGroupApplication {
    ids?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ServerGroupServer {
    ids?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ServiceEdgeGroupServiceEdge {
    ids?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ServiceEdgeGroupTrustedNetwork {
    ids?: pulumi.Input<pulumi.Input<string>[]>;
}
