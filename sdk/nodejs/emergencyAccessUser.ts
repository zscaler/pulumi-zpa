// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * * [Official documentation](https://help.zscaler.com/zpa/configuring-emergency-access)
 * * [API documentation](https://help.zscaler.com/zpa/configuring-emergency-access-users-using-api)
 *
 * The **zpa_emergency_access_user** Create emergency access users with permissions limited to privileged approvals in the specified IdP that is enabled for emergency access.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@bdzscaler/pulumi-zpa";
 *
 * const _this = new zpa.EmergencyAccessUser("this", {
 *     emailId: "usertest@example.com",
 *     firstName: "User",
 *     lastName: "Test",
 *     userId: "usertest",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * The `zpa_emergency_access_user` do not support resource import.
 */
export class EmergencyAccessUser extends pulumi.CustomResource {
    /**
     * Get an existing EmergencyAccessUser resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EmergencyAccessUserState, opts?: pulumi.CustomResourceOptions): EmergencyAccessUser {
        return new EmergencyAccessUser(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zpa:index/emergencyAccessUser:EmergencyAccessUser';

    /**
     * Returns true if the given object is an instance of EmergencyAccessUser.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EmergencyAccessUser {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EmergencyAccessUser.__pulumiType;
    }

    /**
     * The email address of the emergency access user, as provided by the admin
     */
    public readonly emailId!: pulumi.Output<string | undefined>;
    /**
     * The first name of the emergency access user
     */
    public readonly firstName!: pulumi.Output<string>;
    /**
     * The last name of the emergency access user, as provided by the admin
     */
    public readonly lastName!: pulumi.Output<string>;
    /**
     * The unique identifier of the emergency access user
     */
    public readonly userId!: pulumi.Output<string>;

    /**
     * Create a EmergencyAccessUser resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: EmergencyAccessUserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EmergencyAccessUserArgs | EmergencyAccessUserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EmergencyAccessUserState | undefined;
            resourceInputs["emailId"] = state ? state.emailId : undefined;
            resourceInputs["firstName"] = state ? state.firstName : undefined;
            resourceInputs["lastName"] = state ? state.lastName : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
        } else {
            const args = argsOrState as EmergencyAccessUserArgs | undefined;
            resourceInputs["emailId"] = args ? args.emailId : undefined;
            resourceInputs["firstName"] = args ? args.firstName : undefined;
            resourceInputs["lastName"] = args ? args.lastName : undefined;
            resourceInputs["userId"] = args ? args.userId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EmergencyAccessUser.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EmergencyAccessUser resources.
 */
export interface EmergencyAccessUserState {
    /**
     * The email address of the emergency access user, as provided by the admin
     */
    emailId?: pulumi.Input<string>;
    /**
     * The first name of the emergency access user
     */
    firstName?: pulumi.Input<string>;
    /**
     * The last name of the emergency access user, as provided by the admin
     */
    lastName?: pulumi.Input<string>;
    /**
     * The unique identifier of the emergency access user
     */
    userId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EmergencyAccessUser resource.
 */
export interface EmergencyAccessUserArgs {
    /**
     * The email address of the emergency access user, as provided by the admin
     */
    emailId?: pulumi.Input<string>;
    /**
     * The first name of the emergency access user
     */
    firstName?: pulumi.Input<string>;
    /**
     * The last name of the emergency access user, as provided by the admin
     */
    lastName?: pulumi.Input<string>;
    /**
     * The unique identifier of the emergency access user
     */
    userId?: pulumi.Input<string>;
}
