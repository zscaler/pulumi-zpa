{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "applicationSegment.ts",
        "applicationSegmentBrowserAccess.ts",
        "applicationSegmentInspection.ts",
        "applicationSegmentPRA.ts",
        "applicationServer.ts",
        "assistantSchedule.ts",
        "browserAccess.ts",
        "browserCertificate.ts",
        "cloudBrowserIsolationBanner.ts",
        "cloudBrowserIsolationCertificate.ts",
        "cloudBrowserIsolationExternalProfile.ts",
        "config/index.ts",
        "config/vars.ts",
        "connectorGroup.ts",
        "getAppConnectorController.ts",
        "getAppConnectorGroup.ts",
        "getApplicationSegment.ts",
        "getApplicationSegmentBrowserAccess.ts",
        "getApplicationSegmentInspection.ts",
        "getApplicationSegmentPRA.ts",
        "getApplicationServer.ts",
        "getAssistantSchedule.ts",
        "getBaCertificate.ts",
        "getCloudBrowserIsolationBanner.ts",
        "getCloudBrowserIsolationCertificate.ts",
        "getCloudBrowserIsolationExternalProfile.ts",
        "getCloudBrowserIsolationRegion.ts",
        "getCloudBrowserIsolationZPAProfile.ts",
        "getCloudConnectorGroup.ts",
        "getCustomerVersionProfile.ts",
        "getEnrollmentCert.ts",
        "getIdPController.ts",
        "getInspectionAllPredefinedControls.ts",
        "getInspectionCustomControls.ts",
        "getInspectionPredefinedControls.ts",
        "getInspectionProfile.ts",
        "getIsolationProfile.ts",
        "getLSSClientTypes.ts",
        "getLSSConfigController.ts",
        "getLSSLogTypeFormats.ts",
        "getLSSStatusCodes.ts",
        "getMachineGroup.ts",
        "getMicrotenant.ts",
        "getPolicyClientType.ts",
        "getPolicyPlatform.ts",
        "getPolicyType.ts",
        "getPostureProfile.ts",
        "getProvisioningKey.ts",
        "getSAMLAttribute.ts",
        "getSCIMAttributeHeader.ts",
        "getSCIMGroups.ts",
        "getSegmentGroup.ts",
        "getServerGroup.ts",
        "getServiceEdgeController.ts",
        "getServiceEdgeGroup.ts",
        "getTrustedNetwork.ts",
        "index.ts",
        "inspectionCustomControls.ts",
        "inspectionProfile.ts",
        "lssconfigController.ts",
        "microtenant.ts",
        "policyAccessForwardingRule.ts",
        "policyAccessInspectionRule.ts",
        "policyAccessIsolationRule.ts",
        "policyAccessReorderRule.ts",
        "policyAccessRule.ts",
        "policyAccessTimeOutRule.ts",
        "provider.ts",
        "provisioningKey.ts",
        "segmentGroup.ts",
        "serverGroup.ts",
        "serviceEdgeGroup.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "utilities.ts"
    ]
}
