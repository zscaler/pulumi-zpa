// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * * [Official documentation](https://help.zscaler.com/zpa/about-log-streaming-service)
 * * [API documentation](https://help.zscaler.com/zpa/configuring-log-streaming-service-configurations-using-api)
 *
 * Use the **zpa_lss_config_client_types** data source to get information about all LSS client types in the Zscaler Private Access cloud. This data source is required when the defining a policy rule resource for an object type as `CLIENT_TYPE` parameter in the LSS Config Controller resource is set. To learn more see the To learn more see the [Getting Details of All LSS Status Codes](https://help.zscaler.com/zpa/log-streaming-service-configuration-use-cases#GettingLSSClientTypes)
 *
 * > **NOTE** By Default the ZPA provider will return all client types
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const example = zpa.getLSSClientTypes({});
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Read-Only
 *
 * The following arguments are supported:
 *
 * * `"zpnClientTypeEdgeConnector" = "Cloud Connector"`
 * * `"zpnClientTypeExporter" = "Web Browser`
 * * `"zpnClientTypeIpAnchoring" = "ZIA Service Edge"`
 * * `"zpnClientTypeMachineTunnel" = "Machine Tunnel"`
 * * `"zpnClientTypeSlogger" = "ZPA LSS"`
 * * `"zpnClientTypeZapp" = "Client Connector"`
 *
 * To learn more see the [Getting Details of All LSS Status Codes](https://help.zscaler.com/zpa/log-streaming-service-configuration-use-cases#GettingLSSClientTypes)
 */
export function getLSSClientTypes(opts?: pulumi.InvokeOptions): Promise<GetLSSClientTypesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getLSSClientTypes:getLSSClientTypes", {
    }, opts);
}

/**
 * A collection of values returned by getLSSClientTypes.
 */
export interface GetLSSClientTypesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly zpnClientTypeEdgeConnector: string;
    readonly zpnClientTypeExporter: string;
    readonly zpnClientTypeIpAnchoring: string;
    readonly zpnClientTypeMachineTunnel: string;
    readonly zpnClientTypeSlogger: string;
    readonly zpnClientTypeZapp: string;
}
/**
 * * [Official documentation](https://help.zscaler.com/zpa/about-log-streaming-service)
 * * [API documentation](https://help.zscaler.com/zpa/configuring-log-streaming-service-configurations-using-api)
 *
 * Use the **zpa_lss_config_client_types** data source to get information about all LSS client types in the Zscaler Private Access cloud. This data source is required when the defining a policy rule resource for an object type as `CLIENT_TYPE` parameter in the LSS Config Controller resource is set. To learn more see the To learn more see the [Getting Details of All LSS Status Codes](https://help.zscaler.com/zpa/log-streaming-service-configuration-use-cases#GettingLSSClientTypes)
 *
 * > **NOTE** By Default the ZPA provider will return all client types
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const example = zpa.getLSSClientTypes({});
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Read-Only
 *
 * The following arguments are supported:
 *
 * * `"zpnClientTypeEdgeConnector" = "Cloud Connector"`
 * * `"zpnClientTypeExporter" = "Web Browser`
 * * `"zpnClientTypeIpAnchoring" = "ZIA Service Edge"`
 * * `"zpnClientTypeMachineTunnel" = "Machine Tunnel"`
 * * `"zpnClientTypeSlogger" = "ZPA LSS"`
 * * `"zpnClientTypeZapp" = "Client Connector"`
 *
 * To learn more see the [Getting Details of All LSS Status Codes](https://help.zscaler.com/zpa/log-streaming-service-configuration-use-cases#GettingLSSClientTypes)
 */
export function getLSSClientTypesOutput(opts?: pulumi.InvokeOptions): pulumi.Output<GetLSSClientTypesResult> {
    return pulumi.output(getLSSClientTypes(opts))
}
