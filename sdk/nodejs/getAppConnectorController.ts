// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * * [Official documentation](https://help.zscaler.com/zpa/about-connectors)
 * * [API documentation](https://help.zscaler.com/zpa/managing-app-connectors-using-api)
 *
 * Use the **zpa_app_connector_controller** data source to get information about a app connector created in the Zscaler Private Access cloud. This data source can then be referenced in an App Connector Group.
 *
 * **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@bdzscaler/pulumi-zpa";
 *
 * // ZPA App Connector Data Source
 * const example = zpa.getAppConnectorController({
 *     name: "AWS-VPC100-App-Connector",
 * });
 * ```
 */
export function getAppConnectorController(args?: GetAppConnectorControllerArgs, opts?: pulumi.InvokeOptions): Promise<GetAppConnectorControllerResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getAppConnectorController:getAppConnectorController", {
        "microtenantId": args.microtenantId,
        "microtenantName": args.microtenantName,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getAppConnectorController.
 */
export interface GetAppConnectorControllerArgs {
    microtenantId?: string;
    microtenantName?: string;
    name?: string;
}

/**
 * A collection of values returned by getAppConnectorController.
 */
export interface GetAppConnectorControllerResult {
    readonly appConnectorGroupId: string;
    readonly appConnectorGroupName: string;
    readonly applicationStartTime: string;
    readonly assistantVersions: outputs.GetAppConnectorControllerAssistantVersion[];
    readonly controlChannelStatus: string;
    readonly creationTime: string;
    readonly ctrlBrokerName: string;
    readonly currentVersion: string;
    readonly description: string;
    readonly enabled: boolean;
    readonly enrollmentCert: {[key: string]: string};
    readonly expectedUpgradeTime: string;
    readonly expectedVersion: string;
    readonly fingerprint: string;
    readonly id: string;
    readonly ipAcl: string;
    readonly issuedCertId: string;
    readonly lastBrokerConnectTime: string;
    readonly lastBrokerConnectTimeDuration: string;
    readonly lastBrokerDisconnectTime: string;
    readonly lastBrokerDisconnectTimeDuration: string;
    readonly lastUpgradeTime: string;
    readonly latitude: string;
    readonly location: string;
    readonly longitude: string;
    readonly microtenantId?: string;
    readonly microtenantName?: string;
    readonly modifiedBy: string;
    readonly modifiedTime: string;
    readonly name?: string;
    readonly platform: string;
    readonly platformDetail: string;
    readonly previousVersion: string;
    readonly privateIp: string;
    readonly provisioningKeyId: string;
    readonly provisioningKeyName: string;
    readonly publicIp: string;
    readonly runtimeOs: string;
    readonly sargeVersion: string;
    readonly upgradeAttempt: string;
    readonly upgradeStatus: string;
    readonly zpnSubModuleUpgradeLists: outputs.GetAppConnectorControllerZpnSubModuleUpgradeList[];
}
/**
 * * [Official documentation](https://help.zscaler.com/zpa/about-connectors)
 * * [API documentation](https://help.zscaler.com/zpa/managing-app-connectors-using-api)
 *
 * Use the **zpa_app_connector_controller** data source to get information about a app connector created in the Zscaler Private Access cloud. This data source can then be referenced in an App Connector Group.
 *
 * **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@bdzscaler/pulumi-zpa";
 *
 * // ZPA App Connector Data Source
 * const example = zpa.getAppConnectorController({
 *     name: "AWS-VPC100-App-Connector",
 * });
 * ```
 */
export function getAppConnectorControllerOutput(args?: GetAppConnectorControllerOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAppConnectorControllerResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("zpa:index/getAppConnectorController:getAppConnectorController", {
        "microtenantId": args.microtenantId,
        "microtenantName": args.microtenantName,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getAppConnectorController.
 */
export interface GetAppConnectorControllerOutputArgs {
    microtenantId?: pulumi.Input<string>;
    microtenantName?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
