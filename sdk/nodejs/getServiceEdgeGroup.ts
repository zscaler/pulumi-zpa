// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use the **zpa_service_edge_group** data source to get information about a service edge group in the Zscaler Private Access cloud. This data source can then be referenced in an App Connector Group. This data source can then be referenced in the following resources:
 *
 * * Create a server group
 * * Provisioning Key
 * * Access policy rule
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const foo = zpa.getServiceEdgeGroup({
 *     name: "DataCenter",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const foo = zpa.getServiceEdgeGroup({
 *     id: "123456789",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getServiceEdgeGroup(args?: GetServiceEdgeGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceEdgeGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getServiceEdgeGroup:getServiceEdgeGroup", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getServiceEdgeGroup.
 */
export interface GetServiceEdgeGroupArgs {
    /**
     * The ID of the service edge group to be exported.
     */
    id?: string;
    /**
     * The name of the service edge group to be exported.
     */
    name?: string;
}

/**
 * A collection of values returned by getServiceEdgeGroup.
 */
export interface GetServiceEdgeGroupResult {
    /**
     * (string) Whether Double Encryption is enabled or disabled for the app.
     */
    readonly cityCountry: string;
    /**
     * (string)
     */
    readonly countryCode: string;
    /**
     * (string)
     */
    readonly creationTime: string;
    /**
     * (string) Description of the Service Edge Group.
     */
    readonly description: string;
    /**
     * (bool) Whether this App Connector Group is enabled or not. Default value: `true`. Supported values: `true`, `false`
     */
    readonly enabled: boolean;
    /**
     * (string)
     */
    readonly geoLocationId: string;
    /**
     * (string)
     */
    readonly id: string;
    /**
     * (string)
     */
    readonly isPublic: string;
    /**
     * (string)
     */
    readonly latitude: string;
    /**
     * (string)
     */
    readonly location: string;
    /**
     * (string)
     */
    readonly longitude: string;
    /**
     * (string)
     */
    readonly modifiedTime: string;
    readonly modifiedby: string;
    /**
     * (string)
     */
    readonly name: string;
    /**
     * (bool) Whether the default version profile of the App Connector Group is applied or overridden. Default: `false` Supported values: `true`, `false`
     */
    readonly overrideVersionProfile: boolean;
    /**
     * (string)
     */
    readonly serviceEdges: outputs.GetServiceEdgeGroupServiceEdge[];
    /**
     * (string)
     */
    readonly trustedNetworks: outputs.GetServiceEdgeGroupTrustedNetwork[];
    /**
     * (string) App Connectors in this group will attempt to update to a newer version of the software during this specified day
     */
    readonly upgradeDay: string;
    /**
     * (string) App Connectors in this group will attempt to update to a newer version of the software during this specified time. Default value: `66600`. Integer in seconds (i.e., `-66600`). The integer should be greater than or equal to `0` and less than `86400`, in `15` minute intervals
     */
    readonly upgradeTimeInSecs: string;
    /**
     * (String) ID of the version profile.
     * Exported values are:
     */
    readonly versionProfileId: string;
    /**
     * (String)
     * Exported values are:
     */
    readonly versionProfileName: string;
    /**
     * (string)
     * Exported values are:
     */
    readonly versionProfileVisibilityScope: string;
}
/**
 * Use the **zpa_service_edge_group** data source to get information about a service edge group in the Zscaler Private Access cloud. This data source can then be referenced in an App Connector Group. This data source can then be referenced in the following resources:
 *
 * * Create a server group
 * * Provisioning Key
 * * Access policy rule
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const foo = zpa.getServiceEdgeGroup({
 *     name: "DataCenter",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const foo = zpa.getServiceEdgeGroup({
 *     id: "123456789",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getServiceEdgeGroupOutput(args?: GetServiceEdgeGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceEdgeGroupResult> {
    return pulumi.output(args).apply((a: any) => getServiceEdgeGroup(a, opts))
}

/**
 * A collection of arguments for invoking getServiceEdgeGroup.
 */
export interface GetServiceEdgeGroupOutputArgs {
    /**
     * The ID of the service edge group to be exported.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the service edge group to be exported.
     */
    name?: pulumi.Input<string>;
}
