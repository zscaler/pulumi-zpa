// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/** @deprecated zpa.index/getpraconsolecontroller.getPraConsoleController has been deprecated in favor of zpa.index/getpraconsole.getPRAConsole */
export function getPraConsoleController(args?: GetPraConsoleControllerArgs, opts?: pulumi.InvokeOptions): Promise<GetPraConsoleControllerResult> {
    pulumi.log.warn("getPraConsoleController is deprecated: zpa.index/getpraconsolecontroller.getPraConsoleController has been deprecated in favor of zpa.index/getpraconsole.getPRAConsole")
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getPraConsoleController:getPraConsoleController", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getPraConsoleController.
 */
export interface GetPraConsoleControllerArgs {
    id?: string;
}

/**
 * A collection of values returned by getPraConsoleController.
 */
export interface GetPraConsoleControllerResult {
    readonly creationTime: string;
    readonly description: string;
    readonly enabled: boolean;
    readonly iconText: string;
    readonly id?: string;
    readonly microtenantId: string;
    readonly microtenantName: string;
    readonly modifiedBy: string;
    readonly modifiedTime: string;
    readonly name: string;
    readonly praApplications: outputs.GetPraConsoleControllerPraApplication[];
    readonly praPortals: outputs.GetPraConsoleControllerPraPortal[];
}
/** @deprecated zpa.index/getpraconsolecontroller.getPraConsoleController has been deprecated in favor of zpa.index/getpraconsole.getPRAConsole */
export function getPraConsoleControllerOutput(args?: GetPraConsoleControllerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPraConsoleControllerResult> {
    return pulumi.output(args).apply((a: any) => getPraConsoleController(a, opts))
}

/**
 * A collection of arguments for invoking getPraConsoleController.
 */
export interface GetPraConsoleControllerOutputArgs {
    id?: pulumi.Input<string>;
}
