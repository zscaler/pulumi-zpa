// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The **zpa_service_edge_group** resource creates a service edge group in the Zscaler Private Access cloud. This resource can then be referenced in a service edge connector.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@bdzscaler/pulumi-zpa";
 *
 * // ZPA Service Edge Group resource - Trusted Network
 * const serviceEdgeGroupSjc = new zpa.ServiceEdgeGroup("serviceEdgeGroupSjc", {
 *     description: "Service Edge Group in San Jose",
 *     enabled: true,
 *     isPublic: true,
 *     upgradeDay: "SUNDAY",
 *     upgradeTimeInSecs: "66600",
 *     latitude: "37.3382082",
 *     longitude: "-121.8863286",
 *     location: "San Jose, CA, USA",
 *     versionProfileName: "New Release",
 *     trustedNetworks: [{
 *         ids: [data.zpa_trusted_network.example.id],
 *     }],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@bdzscaler/pulumi-zpa";
 *
 * // ZPA Service Edge Group resource - No Trusted Network
 * const serviceEdgeGroupNyc = new zpa.ServiceEdgeGroup("serviceEdgeGroupNyc", {
 *     description: "Service Edge Group in New York",
 *     enabled: true,
 *     isPublic: true,
 *     latitude: "40.7128",
 *     location: "New York, NY, USA",
 *     longitude: "-73.935242",
 *     upgradeDay: "SUNDAY",
 *     upgradeTimeInSecs: "66600",
 *     versionProfileName: "New Release",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZPA configurations into Terraform-compliant HashiCorp Configuration Language.
 *
 * Visit
 *
 * Service Edge Group can be imported; use `<SERVER EDGE GROUP ID>` or `<SERVER EDGE GROUP NAME>` as the import ID.
 *
 * For example:
 *
 * ```sh
 * $ pulumi import zpa:index/serviceEdgeGroup:ServiceEdgeGroup example <service_edge_group_id>
 * ```
 *
 * or
 *
 * ```sh
 * $ pulumi import zpa:index/serviceEdgeGroup:ServiceEdgeGroup example <service_edge_group_name>
 * ```
 */
export class ServiceEdgeGroup extends pulumi.CustomResource {
    /**
     * Get an existing ServiceEdgeGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceEdgeGroupState, opts?: pulumi.CustomResourceOptions): ServiceEdgeGroup {
        return new ServiceEdgeGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zpa:index/serviceEdgeGroup:ServiceEdgeGroup';

    /**
     * Returns true if the given object is an instance of ServiceEdgeGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceEdgeGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceEdgeGroup.__pulumiType;
    }

    /**
     * This field controls dynamic discovery of the servers.
     */
    public readonly cityCountry!: pulumi.Output<string>;
    /**
     * This field is an array of app-connector-id only.
     */
    public readonly countryCode!: pulumi.Output<string>;
    /**
     * Description of the Service Edge Group.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Whether this Service Edge Group is enabled or not. Default value: `true` Supported values: `true`, `false`
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * Enable or disable public access for the Service Edge Group. Default value: `false` Supported values: `true`, `false`
     */
    public readonly isPublic!: pulumi.Output<boolean | undefined>;
    /**
     * Latitude for the Service Edge Group. Integer or decimal with values in the range of `-90` to `90`
     */
    public readonly latitude!: pulumi.Output<string>;
    /**
     * Location for the Service Edge Group.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Longitude for the Service Edge Group. Integer or decimal with values in the range of `-180` to `180`
     */
    public readonly longitude!: pulumi.Output<string>;
    /**
     * The ID of the microtenant the resource is to be associated with.
     *
     * ⚠️ **WARNING:**: The attribute ``microtenantId`` is optional and requires the microtenant license and feature flag enabled for the respective tenant. The provider also supports the microtenant ID configuration via the environment variable `ZPA_MICROTENANT_ID` which is the recommended method.
     */
    public readonly microtenantId!: pulumi.Output<string>;
    /**
     * Name of the Service Edge Group.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Whether the default version profile of the App Connector Group is applied or overridden. Default: `false` Supported values: `true`, `false`
     */
    public readonly overrideVersionProfile!: pulumi.Output<boolean | undefined>;
    public readonly serviceEdges!: pulumi.Output<outputs.ServiceEdgeGroupServiceEdge[]>;
    /**
     * Trusted networks for this Service Edge Group. List of trusted network objects
     */
    public readonly trustedNetworks!: pulumi.Output<outputs.ServiceEdgeGroupTrustedNetwork[]>;
    /**
     * Service Edges in this group will attempt to update to a newer version of the software during this specified day. Default value: `SUNDAY` List of valid days (i.e., Sunday, Monday)
     */
    public readonly upgradeDay!: pulumi.Output<string | undefined>;
    /**
     * Service Edges in this group will attempt to update to a newer version of the software during this specified time. Default value: `66600` Integer in seconds (i..e, 66600). The integer must be greater than or equal to 0 and less than `86400`, in `15` minute intervals
     */
    public readonly upgradeTimeInSecs!: pulumi.Output<string | undefined>;
    /**
     * ID of the version profile. To learn more, see Version Profile Use Cases. Supported values are:
     */
    public readonly versionProfileId!: pulumi.Output<string>;
    /**
     * ID of the version profile.
     */
    public readonly versionProfileName!: pulumi.Output<string>;
    /**
     * ID of the version profile.
     */
    public /*out*/ readonly versionProfileVisibilityScope!: pulumi.Output<string>;

    /**
     * Create a ServiceEdgeGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceEdgeGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceEdgeGroupArgs | ServiceEdgeGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceEdgeGroupState | undefined;
            resourceInputs["cityCountry"] = state ? state.cityCountry : undefined;
            resourceInputs["countryCode"] = state ? state.countryCode : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["isPublic"] = state ? state.isPublic : undefined;
            resourceInputs["latitude"] = state ? state.latitude : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["longitude"] = state ? state.longitude : undefined;
            resourceInputs["microtenantId"] = state ? state.microtenantId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["overrideVersionProfile"] = state ? state.overrideVersionProfile : undefined;
            resourceInputs["serviceEdges"] = state ? state.serviceEdges : undefined;
            resourceInputs["trustedNetworks"] = state ? state.trustedNetworks : undefined;
            resourceInputs["upgradeDay"] = state ? state.upgradeDay : undefined;
            resourceInputs["upgradeTimeInSecs"] = state ? state.upgradeTimeInSecs : undefined;
            resourceInputs["versionProfileId"] = state ? state.versionProfileId : undefined;
            resourceInputs["versionProfileName"] = state ? state.versionProfileName : undefined;
            resourceInputs["versionProfileVisibilityScope"] = state ? state.versionProfileVisibilityScope : undefined;
        } else {
            const args = argsOrState as ServiceEdgeGroupArgs | undefined;
            if ((!args || args.latitude === undefined) && !opts.urn) {
                throw new Error("Missing required property 'latitude'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.longitude === undefined) && !opts.urn) {
                throw new Error("Missing required property 'longitude'");
            }
            resourceInputs["cityCountry"] = args ? args.cityCountry : undefined;
            resourceInputs["countryCode"] = args ? args.countryCode : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["isPublic"] = args ? args.isPublic : undefined;
            resourceInputs["latitude"] = args ? args.latitude : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["longitude"] = args ? args.longitude : undefined;
            resourceInputs["microtenantId"] = args ? args.microtenantId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["overrideVersionProfile"] = args ? args.overrideVersionProfile : undefined;
            resourceInputs["serviceEdges"] = args ? args.serviceEdges : undefined;
            resourceInputs["trustedNetworks"] = args ? args.trustedNetworks : undefined;
            resourceInputs["upgradeDay"] = args ? args.upgradeDay : undefined;
            resourceInputs["upgradeTimeInSecs"] = args ? args.upgradeTimeInSecs : undefined;
            resourceInputs["versionProfileId"] = args ? args.versionProfileId : undefined;
            resourceInputs["versionProfileName"] = args ? args.versionProfileName : undefined;
            resourceInputs["versionProfileVisibilityScope"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceEdgeGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceEdgeGroup resources.
 */
export interface ServiceEdgeGroupState {
    /**
     * This field controls dynamic discovery of the servers.
     */
    cityCountry?: pulumi.Input<string>;
    /**
     * This field is an array of app-connector-id only.
     */
    countryCode?: pulumi.Input<string>;
    /**
     * Description of the Service Edge Group.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether this Service Edge Group is enabled or not. Default value: `true` Supported values: `true`, `false`
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable public access for the Service Edge Group. Default value: `false` Supported values: `true`, `false`
     */
    isPublic?: pulumi.Input<boolean>;
    /**
     * Latitude for the Service Edge Group. Integer or decimal with values in the range of `-90` to `90`
     */
    latitude?: pulumi.Input<string>;
    /**
     * Location for the Service Edge Group.
     */
    location?: pulumi.Input<string>;
    /**
     * Longitude for the Service Edge Group. Integer or decimal with values in the range of `-180` to `180`
     */
    longitude?: pulumi.Input<string>;
    /**
     * The ID of the microtenant the resource is to be associated with.
     *
     * ⚠️ **WARNING:**: The attribute ``microtenantId`` is optional and requires the microtenant license and feature flag enabled for the respective tenant. The provider also supports the microtenant ID configuration via the environment variable `ZPA_MICROTENANT_ID` which is the recommended method.
     */
    microtenantId?: pulumi.Input<string>;
    /**
     * Name of the Service Edge Group.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether the default version profile of the App Connector Group is applied or overridden. Default: `false` Supported values: `true`, `false`
     */
    overrideVersionProfile?: pulumi.Input<boolean>;
    serviceEdges?: pulumi.Input<pulumi.Input<inputs.ServiceEdgeGroupServiceEdge>[]>;
    /**
     * Trusted networks for this Service Edge Group. List of trusted network objects
     */
    trustedNetworks?: pulumi.Input<pulumi.Input<inputs.ServiceEdgeGroupTrustedNetwork>[]>;
    /**
     * Service Edges in this group will attempt to update to a newer version of the software during this specified day. Default value: `SUNDAY` List of valid days (i.e., Sunday, Monday)
     */
    upgradeDay?: pulumi.Input<string>;
    /**
     * Service Edges in this group will attempt to update to a newer version of the software during this specified time. Default value: `66600` Integer in seconds (i..e, 66600). The integer must be greater than or equal to 0 and less than `86400`, in `15` minute intervals
     */
    upgradeTimeInSecs?: pulumi.Input<string>;
    /**
     * ID of the version profile. To learn more, see Version Profile Use Cases. Supported values are:
     */
    versionProfileId?: pulumi.Input<string>;
    /**
     * ID of the version profile.
     */
    versionProfileName?: pulumi.Input<string>;
    /**
     * ID of the version profile.
     */
    versionProfileVisibilityScope?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServiceEdgeGroup resource.
 */
export interface ServiceEdgeGroupArgs {
    /**
     * This field controls dynamic discovery of the servers.
     */
    cityCountry?: pulumi.Input<string>;
    /**
     * This field is an array of app-connector-id only.
     */
    countryCode?: pulumi.Input<string>;
    /**
     * Description of the Service Edge Group.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether this Service Edge Group is enabled or not. Default value: `true` Supported values: `true`, `false`
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable public access for the Service Edge Group. Default value: `false` Supported values: `true`, `false`
     */
    isPublic?: pulumi.Input<boolean>;
    /**
     * Latitude for the Service Edge Group. Integer or decimal with values in the range of `-90` to `90`
     */
    latitude: pulumi.Input<string>;
    /**
     * Location for the Service Edge Group.
     */
    location: pulumi.Input<string>;
    /**
     * Longitude for the Service Edge Group. Integer or decimal with values in the range of `-180` to `180`
     */
    longitude: pulumi.Input<string>;
    /**
     * The ID of the microtenant the resource is to be associated with.
     *
     * ⚠️ **WARNING:**: The attribute ``microtenantId`` is optional and requires the microtenant license and feature flag enabled for the respective tenant. The provider also supports the microtenant ID configuration via the environment variable `ZPA_MICROTENANT_ID` which is the recommended method.
     */
    microtenantId?: pulumi.Input<string>;
    /**
     * Name of the Service Edge Group.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether the default version profile of the App Connector Group is applied or overridden. Default: `false` Supported values: `true`, `false`
     */
    overrideVersionProfile?: pulumi.Input<boolean>;
    serviceEdges?: pulumi.Input<pulumi.Input<inputs.ServiceEdgeGroupServiceEdge>[]>;
    /**
     * Trusted networks for this Service Edge Group. List of trusted network objects
     */
    trustedNetworks?: pulumi.Input<pulumi.Input<inputs.ServiceEdgeGroupTrustedNetwork>[]>;
    /**
     * Service Edges in this group will attempt to update to a newer version of the software during this specified day. Default value: `SUNDAY` List of valid days (i.e., Sunday, Monday)
     */
    upgradeDay?: pulumi.Input<string>;
    /**
     * Service Edges in this group will attempt to update to a newer version of the software during this specified time. Default value: `66600` Integer in seconds (i..e, 66600). The integer must be greater than or equal to 0 and less than `86400`, in `15` minute intervals
     */
    upgradeTimeInSecs?: pulumi.Input<string>;
    /**
     * ID of the version profile. To learn more, see Version Profile Use Cases. Supported values are:
     */
    versionProfileId?: pulumi.Input<string>;
    /**
     * ID of the version profile.
     */
    versionProfileName?: pulumi.Input<string>;
}
