// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const example = zpa.getProvisioningKey({
 *     associationType: "CONNECTOR_GRP",
 *     name: "Provisioning_Key",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const example = zpa.getProvisioningKey({
 *     associationType: "SERVICE_EDGE_GRP",
 *     name: "Provisioning_Key",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getProvisioningKey(args: GetProvisioningKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetProvisioningKeyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getProvisioningKey:getProvisioningKey", {
        "associationType": args.associationType,
        "id": args.id,
        "microtenantId": args.microtenantId,
        "microtenantName": args.microtenantName,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getProvisioningKey.
 */
export interface GetProvisioningKeyArgs {
    /**
     * Specifies the provisioning key type for App Connectors or ZPA Private Service Edges. The supported values are `CONNECTOR_GRP` and `SERVICE_EDGE_GRP`
     */
    associationType: string;
    /**
     * The ID of the provisioning key to be exported.
     */
    id?: string;
    /**
     * (string) The ID of the microtenant the resource is to be associated with.
     */
    microtenantId?: string;
    /**
     * (string) The name of the microtenant the resource is to be associated with.
     */
    microtenantName?: string;
    /**
     * Name of the provisioning key.
     */
    name?: string;
}

/**
 * A collection of values returned by getProvisioningKey.
 */
export interface GetProvisioningKeyResult {
    readonly appConnectorGroupId: string;
    readonly appConnectorGroupName: string;
    readonly associationType: string;
    /**
     * (string)
     */
    readonly creationTime: string;
    /**
     * (bool)
     */
    readonly enabled: boolean;
    /**
     * (string)
     */
    readonly enrollmentCertId: string;
    /**
     * (string) Applicable only for GET calls, ignored in PUT/POST calls.
     */
    readonly enrollmentCertName: string;
    /**
     * (string)
     */
    readonly expirationInEpochSec: string;
    readonly id?: string;
    /**
     * (string)
     */
    readonly ipAcls: string[];
    /**
     * (string)
     */
    readonly maxUsage: string;
    /**
     * (string) The ID of the microtenant the resource is to be associated with.
     */
    readonly microtenantId?: string;
    /**
     * (string) The name of the microtenant the resource is to be associated with.
     */
    readonly microtenantName?: string;
    /**
     * (string)
     */
    readonly modifiedTime: string;
    readonly modifiedby: string;
    readonly name?: string;
    /**
     * (string) Ignored in PUT/POST calls.
     */
    readonly provisioningKey: string;
    /**
     * (string)
     */
    readonly uiConfig: string;
    /**
     * (string)
     */
    readonly usageCount: string;
    /**
     * (string)
     */
    readonly zcomponentId: string;
    /**
     * (string) Applicable only for GET calls, ignored in PUT/POST calls.
     */
    readonly zcomponentName: string;
}
/**
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const example = zpa.getProvisioningKey({
 *     associationType: "CONNECTOR_GRP",
 *     name: "Provisioning_Key",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const example = zpa.getProvisioningKey({
 *     associationType: "SERVICE_EDGE_GRP",
 *     name: "Provisioning_Key",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getProvisioningKeyOutput(args: GetProvisioningKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProvisioningKeyResult> {
    return pulumi.output(args).apply((a: any) => getProvisioningKey(a, opts))
}

/**
 * A collection of arguments for invoking getProvisioningKey.
 */
export interface GetProvisioningKeyOutputArgs {
    /**
     * Specifies the provisioning key type for App Connectors or ZPA Private Service Edges. The supported values are `CONNECTOR_GRP` and `SERVICE_EDGE_GRP`
     */
    associationType: pulumi.Input<string>;
    /**
     * The ID of the provisioning key to be exported.
     */
    id?: pulumi.Input<string>;
    /**
     * (string) The ID of the microtenant the resource is to be associated with.
     */
    microtenantId?: pulumi.Input<string>;
    /**
     * (string) The name of the microtenant the resource is to be associated with.
     */
    microtenantName?: pulumi.Input<string>;
    /**
     * Name of the provisioning key.
     */
    name?: pulumi.Input<string>;
}
