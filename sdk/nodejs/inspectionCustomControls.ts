// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * * [Official documentation](https://help.zscaler.com/zpa/about-custom-controls)
 * * [API documentation](https://help.zscaler.com/zpa/configuring-appprotection-controls-using-api)
 *
 * The **zpa_inspection_custom_controls** resource creates an inspection custom control. This resource can then be referenced in an inspection profile resource.
 *
 * ## Example - Inspection Custom Control - PASS Action
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@bdzscaler/pulumi-zpa";
 *
 * const _this = new zpa.InspectionCustomControls("this", {
 *     name: "Example",
 *     description: "Example",
 *     defaultAction: "PASS",
 *     paranoiaLevel: "1",
 *     severity: "CRITICAL",
 *     type: "RESPONSE",
 *     rules: [
 *         {
 *             names: ["this"],
 *             type: "RESPONSE_HEADERS",
 *             conditions: [{
 *                 lhs: "SIZE",
 *                 op: "GE",
 *                 rhs: "1000",
 *             }],
 *         },
 *         {
 *             type: "RESPONSE_BODY",
 *             conditions: [{
 *                 lhs: "SIZE",
 *                 op: "GE",
 *                 rhs: "1000",
 *             }],
 *         },
 *     ],
 * });
 * ```
 *
 * ## Example - Inspection Custom Control - BLOCK Action
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@bdzscaler/pulumi-zpa";
 *
 * const _this = new zpa.InspectionCustomControls("this", {
 *     name: "Example",
 *     description: "Example",
 *     defaultAction: "BLOCK",
 *     paranoiaLevel: "1",
 *     severity: "CRITICAL",
 *     type: "RESPONSE",
 *     rules: [
 *         {
 *             names: ["this"],
 *             type: "RESPONSE_HEADERS",
 *             conditions: [{
 *                 lhs: "SIZE",
 *                 op: "GE",
 *                 rhs: "1000",
 *             }],
 *         },
 *         {
 *             type: "RESPONSE_BODY",
 *             conditions: [{
 *                 lhs: "SIZE",
 *                 op: "GE",
 *                 rhs: "1000",
 *             }],
 *         },
 *     ],
 * });
 * ```
 *
 * ## Example - Inspection Custom Control - REDIRECT Action
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@bdzscaler/pulumi-zpa";
 *
 * const _this = new zpa.InspectionCustomControls("this", {
 *     name: "Example",
 *     description: "Example",
 *     defaultAction: "REDIRECT",
 *     defaultActionValue: "https://test.com",
 *     paranoiaLevel: "1",
 *     severity: "CRITICAL",
 *     type: "RESPONSE",
 *     rules: [
 *         {
 *             names: ["this"],
 *             type: "RESPONSE_HEADERS",
 *             conditions: [{
 *                 lhs: "SIZE",
 *                 op: "GE",
 *                 rhs: "1000",
 *             }],
 *         },
 *         {
 *             type: "RESPONSE_BODY",
 *             conditions: [{
 *                 lhs: "SIZE",
 *                 op: "GE",
 *                 rhs: "1000",
 *             }],
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZPA configurations into Terraform-compliant HashiCorp Configuration Language.
 *
 * Visit
 */
export class InspectionCustomControls extends pulumi.CustomResource {
    /**
     * Get an existing InspectionCustomControls resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InspectionCustomControlsState, opts?: pulumi.CustomResourceOptions): InspectionCustomControls {
        return new InspectionCustomControls(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zpa:index/inspectionCustomControls:InspectionCustomControls';

    /**
     * Returns true if the given object is an instance of InspectionCustomControls.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InspectionCustomControls {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InspectionCustomControls.__pulumiType;
    }

    public readonly controlType!: pulumi.Output<string>;
    /**
     * The performed action
     */
    public readonly defaultAction!: pulumi.Output<string | undefined>;
    /**
     * This is used to provide the redirect URL if the default action is set to REDIRECT
     */
    public readonly defaultActionValue!: pulumi.Output<string>;
    /**
     * Description of the custom control
     */
    public readonly description!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    /**
     * OWASP Predefined Paranoia Level. Range: [1-4], inclusive
     */
    public readonly paranoiaLevel!: pulumi.Output<string>;
    public readonly protocolType!: pulumi.Output<string>;
    /**
     * Rules of the custom controls applied as conditions (JSON)
     */
    public readonly rules!: pulumi.Output<outputs.InspectionCustomControlsRule[]>;
    /**
     * Severity of the control number
     */
    public readonly severity!: pulumi.Output<string>;
    /**
     * Rules to be applied to the request or response type
     */
    public readonly type!: pulumi.Output<string>;
    public readonly version!: pulumi.Output<string>;

    /**
     * Create a InspectionCustomControls resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InspectionCustomControlsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InspectionCustomControlsArgs | InspectionCustomControlsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InspectionCustomControlsState | undefined;
            resourceInputs["controlType"] = state ? state.controlType : undefined;
            resourceInputs["defaultAction"] = state ? state.defaultAction : undefined;
            resourceInputs["defaultActionValue"] = state ? state.defaultActionValue : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["paranoiaLevel"] = state ? state.paranoiaLevel : undefined;
            resourceInputs["protocolType"] = state ? state.protocolType : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
            resourceInputs["severity"] = state ? state.severity : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as InspectionCustomControlsArgs | undefined;
            if ((!args || args.severity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'severity'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["controlType"] = args ? args.controlType : undefined;
            resourceInputs["defaultAction"] = args ? args.defaultAction : undefined;
            resourceInputs["defaultActionValue"] = args ? args.defaultActionValue : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["paranoiaLevel"] = args ? args.paranoiaLevel : undefined;
            resourceInputs["protocolType"] = args ? args.protocolType : undefined;
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["severity"] = args ? args.severity : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InspectionCustomControls.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering InspectionCustomControls resources.
 */
export interface InspectionCustomControlsState {
    controlType?: pulumi.Input<string>;
    /**
     * The performed action
     */
    defaultAction?: pulumi.Input<string>;
    /**
     * This is used to provide the redirect URL if the default action is set to REDIRECT
     */
    defaultActionValue?: pulumi.Input<string>;
    /**
     * Description of the custom control
     */
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * OWASP Predefined Paranoia Level. Range: [1-4], inclusive
     */
    paranoiaLevel?: pulumi.Input<string>;
    protocolType?: pulumi.Input<string>;
    /**
     * Rules of the custom controls applied as conditions (JSON)
     */
    rules?: pulumi.Input<pulumi.Input<inputs.InspectionCustomControlsRule>[]>;
    /**
     * Severity of the control number
     */
    severity?: pulumi.Input<string>;
    /**
     * Rules to be applied to the request or response type
     */
    type?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a InspectionCustomControls resource.
 */
export interface InspectionCustomControlsArgs {
    controlType?: pulumi.Input<string>;
    /**
     * The performed action
     */
    defaultAction?: pulumi.Input<string>;
    /**
     * This is used to provide the redirect URL if the default action is set to REDIRECT
     */
    defaultActionValue?: pulumi.Input<string>;
    /**
     * Description of the custom control
     */
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * OWASP Predefined Paranoia Level. Range: [1-4], inclusive
     */
    paranoiaLevel?: pulumi.Input<string>;
    protocolType?: pulumi.Input<string>;
    /**
     * Rules of the custom controls applied as conditions (JSON)
     */
    rules?: pulumi.Input<pulumi.Input<inputs.InspectionCustomControlsRule>[]>;
    /**
     * Severity of the control number
     */
    severity: pulumi.Input<string>;
    /**
     * Rules to be applied to the request or response type
     */
    type: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}
