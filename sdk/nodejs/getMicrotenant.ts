// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * * [Official documentation](https://help.zscaler.com/zpa/about-microtenants)
 * * [API documentation](https://help.zscaler.com/zpa/configuring-microtenants-using-api)
 *
 * The **zpa_microtenant_controller** data source to get information about a machine group created in the Zscaler Private Access cloud. This data source allows administrators to retrieve a specific microtenant ID, which can be passed to other supported resources via the `microtenantId` attribute.
 *
 * ⚠️ **WARNING:**: This feature is in limited availability and requires additional license. To learn more, contact Zscaler Support or your local account team.
 *
 * **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const _this = zpa.getMicrotenant({
 *     name: "Microtenant_A",
 * });
 * ```
 */
export function getMicrotenant(args?: GetMicrotenantArgs, opts?: pulumi.InvokeOptions): Promise<GetMicrotenantResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getMicrotenant:getMicrotenant", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getMicrotenant.
 */
export interface GetMicrotenantArgs {
    id?: string;
    /**
     * - (Required) Name of the microtenant controller.
     */
    name?: string;
}

/**
 * A collection of values returned by getMicrotenant.
 */
export interface GetMicrotenantResult {
    readonly creationTime: string;
    readonly criteriaAttribute: string;
    readonly criteriaAttributeValues: string[];
    readonly description: string;
    readonly enabled: boolean;
    readonly id?: string;
    readonly modifiedBy: string;
    readonly modifiedTime: string;
    /**
     * - (Required) Name of the microtenant controller.
     */
    readonly name?: string;
    readonly operator: string;
    readonly priority: string;
    readonly privilegedApprovalsEnabled: boolean;
    readonly roles: outputs.GetMicrotenantRole[];
    readonly users: outputs.GetMicrotenantUser[];
}
/**
 * * [Official documentation](https://help.zscaler.com/zpa/about-microtenants)
 * * [API documentation](https://help.zscaler.com/zpa/configuring-microtenants-using-api)
 *
 * The **zpa_microtenant_controller** data source to get information about a machine group created in the Zscaler Private Access cloud. This data source allows administrators to retrieve a specific microtenant ID, which can be passed to other supported resources via the `microtenantId` attribute.
 *
 * ⚠️ **WARNING:**: This feature is in limited availability and requires additional license. To learn more, contact Zscaler Support or your local account team.
 *
 * **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const _this = zpa.getMicrotenant({
 *     name: "Microtenant_A",
 * });
 * ```
 */
export function getMicrotenantOutput(args?: GetMicrotenantOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMicrotenantResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("zpa:index/getMicrotenant:getMicrotenant", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getMicrotenant.
 */
export interface GetMicrotenantOutputArgs {
    id?: pulumi.Input<string>;
    /**
     * - (Required) Name of the microtenant controller.
     */
    name?: pulumi.Input<string>;
}
