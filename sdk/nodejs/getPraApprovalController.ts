// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/** @deprecated zpa.index/getpraapprovalcontroller.getPraApprovalController has been deprecated in favor of zpa.index/getpraapproval.getPRAApproval */
export function getPraApprovalController(args?: GetPraApprovalControllerArgs, opts?: pulumi.InvokeOptions): Promise<GetPraApprovalControllerResult> {
    pulumi.log.warn("getPraApprovalController is deprecated: zpa.index/getpraapprovalcontroller.getPraApprovalController has been deprecated in favor of zpa.index/getpraapproval.getPRAApproval")
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getPraApprovalController:getPraApprovalController", {
        "emailIds": args.emailIds,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getPraApprovalController.
 */
export interface GetPraApprovalControllerArgs {
    emailIds?: string[];
    id?: string;
}

/**
 * A collection of values returned by getPraApprovalController.
 */
export interface GetPraApprovalControllerResult {
    readonly applications: outputs.GetPraApprovalControllerApplication[];
    readonly creationTime: string;
    readonly emailIds?: string[];
    readonly endTime: string;
    readonly id?: string;
    readonly microtenantId: string;
    readonly modifiedBy: string;
    readonly modifiedTime: string;
    readonly startTime: string;
    readonly status: string;
    readonly workingHours: outputs.GetPraApprovalControllerWorkingHour[];
}
/** @deprecated zpa.index/getpraapprovalcontroller.getPraApprovalController has been deprecated in favor of zpa.index/getpraapproval.getPRAApproval */
export function getPraApprovalControllerOutput(args?: GetPraApprovalControllerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPraApprovalControllerResult> {
    return pulumi.output(args).apply((a: any) => getPraApprovalController(a, opts))
}

/**
 * A collection of arguments for invoking getPraApprovalController.
 */
export interface GetPraApprovalControllerOutputArgs {
    emailIds?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
}
