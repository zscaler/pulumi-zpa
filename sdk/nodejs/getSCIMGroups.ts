// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * * [Official documentation](https://help.zscaler.com/zpa/about-scim-groups)
 * * [API documentation](https://help.zscaler.com/zpa/obtaining-scim-group-details-using-api)
 *
 * Use the **zpa_scim_groups** data source to get information about a SCIM Group from an Identity Provider (IdP). This data source can then be referenced in an Access Policy, Timeout policy, Forwarding Policy, Inspection Policy or Isolation Policy.
 *
 * **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const engineering = zpa.getSCIMGroups({
 *     idpName: "idp_name",
 *     name: "Engineering",
 * });
 * ```
 */
export function getSCIMGroups(args?: GetSCIMGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetSCIMGroupsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getSCIMGroups:getSCIMGroups", {
        "id": args.id,
        "idpId": args.idpId,
        "idpName": args.idpName,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getSCIMGroups.
 */
export interface GetSCIMGroupsArgs {
    id?: string;
    idpId?: number;
    idpName?: string;
    name?: string;
}

/**
 * A collection of values returned by getSCIMGroups.
 */
export interface GetSCIMGroupsResult {
    readonly creationTime: number;
    readonly id?: string;
    readonly idpGroupId: string;
    readonly idpId?: number;
    readonly idpName?: string;
    readonly modifiedTime: number;
    readonly name?: string;
}
/**
 * * [Official documentation](https://help.zscaler.com/zpa/about-scim-groups)
 * * [API documentation](https://help.zscaler.com/zpa/obtaining-scim-group-details-using-api)
 *
 * Use the **zpa_scim_groups** data source to get information about a SCIM Group from an Identity Provider (IdP). This data source can then be referenced in an Access Policy, Timeout policy, Forwarding Policy, Inspection Policy or Isolation Policy.
 *
 * **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@pulumi/zpa";
 *
 * const engineering = zpa.getSCIMGroups({
 *     idpName: "idp_name",
 *     name: "Engineering",
 * });
 * ```
 */
export function getSCIMGroupsOutput(args?: GetSCIMGroupsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSCIMGroupsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("zpa:index/getSCIMGroups:getSCIMGroups", {
        "id": args.id,
        "idpId": args.idpId,
        "idpName": args.idpName,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getSCIMGroups.
 */
export interface GetSCIMGroupsOutputArgs {
    id?: pulumi.Input<string>;
    idpId?: pulumi.Input<number>;
    idpName?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
