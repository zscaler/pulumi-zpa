// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * * [Official documentation](https://help.zscaler.com/zpa/about-privileged-credential-pools)
 * * [API documentation](https://help.zscaler.com/zpa/configuring-privileged-credentials-using-api)
 *
 * The **zpa_pra_credential_pool** resource creates a privileged remote access credential pool in the Zscaler Private Access cloud. This resource can then be referenced in an privileged access policy resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zpa from "@bdzscaler/pulumi-zpa";
 *
 * const thisPRACredential = new zpa.PRACredential("this", {
 *     name: "John Doe",
 *     description: "Created with Terraform",
 *     credentialType: "PASSWORD",
 *     userDomain: "acme.com",
 *     password: "",
 * });
 * // Creates Credential Pool of Type "USERNAME_PASSWORD"
 * const _this = new zpa.PraCredentialPool("this", {
 *     name: "PRACredentialPool01",
 *     credentialType: "USERNAME_PASSWORD",
 *     credentials: [{
 *         ids: [thisPRACredential.id],
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZPA configurations into Terraform-compliant HashiCorp Configuration Language.
 *
 * Visit
 *
 * **zpa_pra_credential_pool** can be imported by using `<POOL ID>` or `<POOL NAME>` as the import ID.
 *
 * For example:
 *
 * ```sh
 * $ pulumi import zpa:index/praCredentialPool:PraCredentialPool this <pool_id>
 * ```
 *
 * or
 *
 * ```sh
 * $ pulumi import zpa:index/praCredentialPool:PraCredentialPool this <pool_name>
 * ```
 */
export class PraCredentialPool extends pulumi.CustomResource {
    /**
     * Get an existing PraCredentialPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PraCredentialPoolState, opts?: pulumi.CustomResourceOptions): PraCredentialPool {
        return new PraCredentialPool(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zpa:index/praCredentialPool:PraCredentialPool';

    /**
     * Returns true if the given object is an instance of PraCredentialPool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PraCredentialPool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PraCredentialPool.__pulumiType;
    }

    /**
     * The protocol type that was designated for that particular privileged credential. The protocol type options are SSH, RDP,
     * and VNC. Each protocol type has its own credential requirements.
     */
    public readonly credentialType!: pulumi.Output<string | undefined>;
    /**
     * List of PRA Credentials
     */
    public readonly credentials!: pulumi.Output<outputs.PraCredentialPoolCredential[]>;
    /**
     * The unique identifier of the Microtenant for the ZPA tenant. If you are within the Default Microtenant, pass
     * microtenantId as 0 when making requests to retrieve data from the Default Microtenant.
     */
    public readonly microtenantId!: pulumi.Output<string>;
    /**
     * The name of the privileged credential
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a PraCredentialPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PraCredentialPoolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PraCredentialPoolArgs | PraCredentialPoolState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PraCredentialPoolState | undefined;
            resourceInputs["credentialType"] = state ? state.credentialType : undefined;
            resourceInputs["credentials"] = state ? state.credentials : undefined;
            resourceInputs["microtenantId"] = state ? state.microtenantId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as PraCredentialPoolArgs | undefined;
            resourceInputs["credentialType"] = args ? args.credentialType : undefined;
            resourceInputs["credentials"] = args ? args.credentials : undefined;
            resourceInputs["microtenantId"] = args ? args.microtenantId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PraCredentialPool.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PraCredentialPool resources.
 */
export interface PraCredentialPoolState {
    /**
     * The protocol type that was designated for that particular privileged credential. The protocol type options are SSH, RDP,
     * and VNC. Each protocol type has its own credential requirements.
     */
    credentialType?: pulumi.Input<string>;
    /**
     * List of PRA Credentials
     */
    credentials?: pulumi.Input<pulumi.Input<inputs.PraCredentialPoolCredential>[]>;
    /**
     * The unique identifier of the Microtenant for the ZPA tenant. If you are within the Default Microtenant, pass
     * microtenantId as 0 when making requests to retrieve data from the Default Microtenant.
     */
    microtenantId?: pulumi.Input<string>;
    /**
     * The name of the privileged credential
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PraCredentialPool resource.
 */
export interface PraCredentialPoolArgs {
    /**
     * The protocol type that was designated for that particular privileged credential. The protocol type options are SSH, RDP,
     * and VNC. Each protocol type has its own credential requirements.
     */
    credentialType?: pulumi.Input<string>;
    /**
     * List of PRA Credentials
     */
    credentials?: pulumi.Input<pulumi.Input<inputs.PraCredentialPoolCredential>[]>;
    /**
     * The unique identifier of the Microtenant for the ZPA tenant. If you are within the Default Microtenant, pass
     * microtenantId as 0 when making requests to retrieve data from the Default Microtenant.
     */
    microtenantId?: pulumi.Input<string>;
    /**
     * The name of the privileged credential
     */
    name?: pulumi.Input<string>;
}
