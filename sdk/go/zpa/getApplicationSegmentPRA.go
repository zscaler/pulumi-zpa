// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// * [Official documentation](https://help.zscaler.com/zpa/about-privileged-remote-access-applications)
// * [API documentation](https://help.zscaler.com/zpa/configuring-application-segments-using-api)
//
// Use the **zpa_application_segment_pra** data source to get information about an application segment for Privileged Remote Access in the Zscaler Private Access cloud. This resource can then be referenced in an access policy rule, access policy timeout rule, access policy client forwarding rule and inspection policy. This resource supports Privileged Remote Access for both `RDP` and `SSH`.
//
// **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// ZPA Application Segment Data Source
//			_, err := zpa.LookupApplicationSegmentPRA(ctx, &zpa.LookupApplicationSegmentPRAArgs{
//				Name: pulumi.StringRef("PRA_Example"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// ZPA Application Segment Data Source
//			_, err := zpa.LookupApplicationSegmentPRA(ctx, &zpa.LookupApplicationSegmentPRAArgs{
//				Id: pulumi.StringRef("123456789"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupApplicationSegmentPRA(ctx *pulumi.Context, args *LookupApplicationSegmentPRAArgs, opts ...pulumi.InvokeOption) (*LookupApplicationSegmentPRAResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupApplicationSegmentPRAResult
	err := ctx.Invoke("zpa:index/getApplicationSegmentPRA:getApplicationSegmentPRA", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApplicationSegmentPRA.
type LookupApplicationSegmentPRAArgs struct {
	Id              *string                                `pulumi:"id"`
	MicrotenantId   *string                                `pulumi:"microtenantId"`
	MicrotenantName *string                                `pulumi:"microtenantName"`
	Name            *string                                `pulumi:"name"`
	TcpPortRange    []GetApplicationSegmentPRATcpPortRange `pulumi:"tcpPortRange"`
	UdpPortRange    []GetApplicationSegmentPRAUdpPortRange `pulumi:"udpPortRange"`
}

// A collection of values returned by getApplicationSegmentPRA.
type LookupApplicationSegmentPRAResult struct {
	BypassType           string                                 `pulumi:"bypassType"`
	ConfigSpace          string                                 `pulumi:"configSpace"`
	Description          string                                 `pulumi:"description"`
	DomainNames          []string                               `pulumi:"domainNames"`
	DoubleEncrypt        bool                                   `pulumi:"doubleEncrypt"`
	Enabled              bool                                   `pulumi:"enabled"`
	HealthCheckType      string                                 `pulumi:"healthCheckType"`
	HealthReporting      string                                 `pulumi:"healthReporting"`
	Id                   *string                                `pulumi:"id"`
	IpAnchored           bool                                   `pulumi:"ipAnchored"`
	IsCnameEnabled       bool                                   `pulumi:"isCnameEnabled"`
	MicrotenantId        *string                                `pulumi:"microtenantId"`
	MicrotenantName      *string                                `pulumi:"microtenantName"`
	Name                 *string                                `pulumi:"name"`
	PassiveHealthEnabled bool                                   `pulumi:"passiveHealthEnabled"`
	SegmentGroupId       string                                 `pulumi:"segmentGroupId"`
	SegmentGroupName     string                                 `pulumi:"segmentGroupName"`
	ServerGroups         []GetApplicationSegmentPRAServerGroup  `pulumi:"serverGroups"`
	SraApps              []GetApplicationSegmentPRASraApp       `pulumi:"sraApps"`
	TcpPortRange         []GetApplicationSegmentPRATcpPortRange `pulumi:"tcpPortRange"`
	TcpPortRanges        []string                               `pulumi:"tcpPortRanges"`
	UdpPortRange         []GetApplicationSegmentPRAUdpPortRange `pulumi:"udpPortRange"`
	UdpPortRanges        []string                               `pulumi:"udpPortRanges"`
}

func LookupApplicationSegmentPRAOutput(ctx *pulumi.Context, args LookupApplicationSegmentPRAOutputArgs, opts ...pulumi.InvokeOption) LookupApplicationSegmentPRAResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupApplicationSegmentPRAResultOutput, error) {
			args := v.(LookupApplicationSegmentPRAArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("zpa:index/getApplicationSegmentPRA:getApplicationSegmentPRA", args, LookupApplicationSegmentPRAResultOutput{}, options).(LookupApplicationSegmentPRAResultOutput), nil
		}).(LookupApplicationSegmentPRAResultOutput)
}

// A collection of arguments for invoking getApplicationSegmentPRA.
type LookupApplicationSegmentPRAOutputArgs struct {
	Id              pulumi.StringPtrInput                          `pulumi:"id"`
	MicrotenantId   pulumi.StringPtrInput                          `pulumi:"microtenantId"`
	MicrotenantName pulumi.StringPtrInput                          `pulumi:"microtenantName"`
	Name            pulumi.StringPtrInput                          `pulumi:"name"`
	TcpPortRange    GetApplicationSegmentPRATcpPortRangeArrayInput `pulumi:"tcpPortRange"`
	UdpPortRange    GetApplicationSegmentPRAUdpPortRangeArrayInput `pulumi:"udpPortRange"`
}

func (LookupApplicationSegmentPRAOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationSegmentPRAArgs)(nil)).Elem()
}

// A collection of values returned by getApplicationSegmentPRA.
type LookupApplicationSegmentPRAResultOutput struct{ *pulumi.OutputState }

func (LookupApplicationSegmentPRAResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationSegmentPRAResult)(nil)).Elem()
}

func (o LookupApplicationSegmentPRAResultOutput) ToLookupApplicationSegmentPRAResultOutput() LookupApplicationSegmentPRAResultOutput {
	return o
}

func (o LookupApplicationSegmentPRAResultOutput) ToLookupApplicationSegmentPRAResultOutputWithContext(ctx context.Context) LookupApplicationSegmentPRAResultOutput {
	return o
}

func (o LookupApplicationSegmentPRAResultOutput) BypassType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationSegmentPRAResult) string { return v.BypassType }).(pulumi.StringOutput)
}

func (o LookupApplicationSegmentPRAResultOutput) ConfigSpace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationSegmentPRAResult) string { return v.ConfigSpace }).(pulumi.StringOutput)
}

func (o LookupApplicationSegmentPRAResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationSegmentPRAResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupApplicationSegmentPRAResultOutput) DomainNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupApplicationSegmentPRAResult) []string { return v.DomainNames }).(pulumi.StringArrayOutput)
}

func (o LookupApplicationSegmentPRAResultOutput) DoubleEncrypt() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupApplicationSegmentPRAResult) bool { return v.DoubleEncrypt }).(pulumi.BoolOutput)
}

func (o LookupApplicationSegmentPRAResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupApplicationSegmentPRAResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o LookupApplicationSegmentPRAResultOutput) HealthCheckType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationSegmentPRAResult) string { return v.HealthCheckType }).(pulumi.StringOutput)
}

func (o LookupApplicationSegmentPRAResultOutput) HealthReporting() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationSegmentPRAResult) string { return v.HealthReporting }).(pulumi.StringOutput)
}

func (o LookupApplicationSegmentPRAResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationSegmentPRAResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupApplicationSegmentPRAResultOutput) IpAnchored() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupApplicationSegmentPRAResult) bool { return v.IpAnchored }).(pulumi.BoolOutput)
}

func (o LookupApplicationSegmentPRAResultOutput) IsCnameEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupApplicationSegmentPRAResult) bool { return v.IsCnameEnabled }).(pulumi.BoolOutput)
}

func (o LookupApplicationSegmentPRAResultOutput) MicrotenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationSegmentPRAResult) *string { return v.MicrotenantId }).(pulumi.StringPtrOutput)
}

func (o LookupApplicationSegmentPRAResultOutput) MicrotenantName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationSegmentPRAResult) *string { return v.MicrotenantName }).(pulumi.StringPtrOutput)
}

func (o LookupApplicationSegmentPRAResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationSegmentPRAResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupApplicationSegmentPRAResultOutput) PassiveHealthEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupApplicationSegmentPRAResult) bool { return v.PassiveHealthEnabled }).(pulumi.BoolOutput)
}

func (o LookupApplicationSegmentPRAResultOutput) SegmentGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationSegmentPRAResult) string { return v.SegmentGroupId }).(pulumi.StringOutput)
}

func (o LookupApplicationSegmentPRAResultOutput) SegmentGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationSegmentPRAResult) string { return v.SegmentGroupName }).(pulumi.StringOutput)
}

func (o LookupApplicationSegmentPRAResultOutput) ServerGroups() GetApplicationSegmentPRAServerGroupArrayOutput {
	return o.ApplyT(func(v LookupApplicationSegmentPRAResult) []GetApplicationSegmentPRAServerGroup { return v.ServerGroups }).(GetApplicationSegmentPRAServerGroupArrayOutput)
}

func (o LookupApplicationSegmentPRAResultOutput) SraApps() GetApplicationSegmentPRASraAppArrayOutput {
	return o.ApplyT(func(v LookupApplicationSegmentPRAResult) []GetApplicationSegmentPRASraApp { return v.SraApps }).(GetApplicationSegmentPRASraAppArrayOutput)
}

func (o LookupApplicationSegmentPRAResultOutput) TcpPortRange() GetApplicationSegmentPRATcpPortRangeArrayOutput {
	return o.ApplyT(func(v LookupApplicationSegmentPRAResult) []GetApplicationSegmentPRATcpPortRange {
		return v.TcpPortRange
	}).(GetApplicationSegmentPRATcpPortRangeArrayOutput)
}

func (o LookupApplicationSegmentPRAResultOutput) TcpPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupApplicationSegmentPRAResult) []string { return v.TcpPortRanges }).(pulumi.StringArrayOutput)
}

func (o LookupApplicationSegmentPRAResultOutput) UdpPortRange() GetApplicationSegmentPRAUdpPortRangeArrayOutput {
	return o.ApplyT(func(v LookupApplicationSegmentPRAResult) []GetApplicationSegmentPRAUdpPortRange {
		return v.UdpPortRange
	}).(GetApplicationSegmentPRAUdpPortRangeArrayOutput)
}

func (o LookupApplicationSegmentPRAResultOutput) UdpPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupApplicationSegmentPRAResult) []string { return v.UdpPortRanges }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApplicationSegmentPRAResultOutput{})
}
