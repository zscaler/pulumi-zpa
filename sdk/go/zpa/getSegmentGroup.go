// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zpa.LookupSegmentGroup(ctx, &zpa.LookupSegmentGroupArgs{
//				Name: pulumi.StringRef("segment_group_name"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSegmentGroup(ctx *pulumi.Context, args *LookupSegmentGroupArgs, opts ...pulumi.InvokeOption) (*LookupSegmentGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSegmentGroupResult
	err := ctx.Invoke("zpa:index/getSegmentGroup:getSegmentGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSegmentGroup.
type LookupSegmentGroupArgs struct {
	Id              *string `pulumi:"id"`
	MicrotenantId   *string `pulumi:"microtenantId"`
	MicrotenantName *string `pulumi:"microtenantName"`
	Name            *string `pulumi:"name"`
}

// A collection of values returned by getSegmentGroup.
type LookupSegmentGroupResult struct {
	Applications    []GetSegmentGroupApplication `pulumi:"applications"`
	ConfigSpace     string                       `pulumi:"configSpace"`
	CreationTime    string                       `pulumi:"creationTime"`
	Description     string                       `pulumi:"description"`
	Enabled         bool                         `pulumi:"enabled"`
	Id              *string                      `pulumi:"id"`
	MicrotenantId   *string                      `pulumi:"microtenantId"`
	MicrotenantName *string                      `pulumi:"microtenantName"`
	ModifiedBy      string                       `pulumi:"modifiedBy"`
	ModifiedTime    string                       `pulumi:"modifiedTime"`
	Name            *string                      `pulumi:"name"`
}

func LookupSegmentGroupOutput(ctx *pulumi.Context, args LookupSegmentGroupOutputArgs, opts ...pulumi.InvokeOption) LookupSegmentGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSegmentGroupResultOutput, error) {
			args := v.(LookupSegmentGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("zpa:index/getSegmentGroup:getSegmentGroup", args, LookupSegmentGroupResultOutput{}, options).(LookupSegmentGroupResultOutput), nil
		}).(LookupSegmentGroupResultOutput)
}

// A collection of arguments for invoking getSegmentGroup.
type LookupSegmentGroupOutputArgs struct {
	Id              pulumi.StringPtrInput `pulumi:"id"`
	MicrotenantId   pulumi.StringPtrInput `pulumi:"microtenantId"`
	MicrotenantName pulumi.StringPtrInput `pulumi:"microtenantName"`
	Name            pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupSegmentGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSegmentGroupArgs)(nil)).Elem()
}

// A collection of values returned by getSegmentGroup.
type LookupSegmentGroupResultOutput struct{ *pulumi.OutputState }

func (LookupSegmentGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSegmentGroupResult)(nil)).Elem()
}

func (o LookupSegmentGroupResultOutput) ToLookupSegmentGroupResultOutput() LookupSegmentGroupResultOutput {
	return o
}

func (o LookupSegmentGroupResultOutput) ToLookupSegmentGroupResultOutputWithContext(ctx context.Context) LookupSegmentGroupResultOutput {
	return o
}

func (o LookupSegmentGroupResultOutput) Applications() GetSegmentGroupApplicationArrayOutput {
	return o.ApplyT(func(v LookupSegmentGroupResult) []GetSegmentGroupApplication { return v.Applications }).(GetSegmentGroupApplicationArrayOutput)
}

func (o LookupSegmentGroupResultOutput) ConfigSpace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSegmentGroupResult) string { return v.ConfigSpace }).(pulumi.StringOutput)
}

func (o LookupSegmentGroupResultOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSegmentGroupResult) string { return v.CreationTime }).(pulumi.StringOutput)
}

func (o LookupSegmentGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSegmentGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupSegmentGroupResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSegmentGroupResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o LookupSegmentGroupResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSegmentGroupResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupSegmentGroupResultOutput) MicrotenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSegmentGroupResult) *string { return v.MicrotenantId }).(pulumi.StringPtrOutput)
}

func (o LookupSegmentGroupResultOutput) MicrotenantName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSegmentGroupResult) *string { return v.MicrotenantName }).(pulumi.StringPtrOutput)
}

func (o LookupSegmentGroupResultOutput) ModifiedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSegmentGroupResult) string { return v.ModifiedBy }).(pulumi.StringOutput)
}

func (o LookupSegmentGroupResultOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSegmentGroupResult) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o LookupSegmentGroupResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSegmentGroupResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSegmentGroupResultOutput{})
}
