// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// Deprecated: zpa.index/policyforwardingrulev2.PolicyForwardingRuleV2 has been deprecated in favor of zpa.index/policyaccessforwardingrulev2.PolicyAccessForwardingRuleV2
type PolicyForwardingRuleV2 struct {
	pulumi.CustomResourceState

	// This is for providing the rule action.
	Action pulumi.StringPtrOutput `pulumi:"action"`
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyForwardingRuleV2ConditionArrayOutput `pulumi:"conditions"`
	// This is the description of the access policy.
	Description   pulumi.StringPtrOutput `pulumi:"description"`
	MicrotenantId pulumi.StringOutput    `pulumi:"microtenantId"`
	// This is the name of the policy.
	Name        pulumi.StringOutput `pulumi:"name"`
	PolicySetId pulumi.StringOutput `pulumi:"policySetId"`
}

// NewPolicyForwardingRuleV2 registers a new resource with the given unique name, arguments, and options.
func NewPolicyForwardingRuleV2(ctx *pulumi.Context,
	name string, args *PolicyForwardingRuleV2Args, opts ...pulumi.ResourceOption) (*PolicyForwardingRuleV2, error) {
	if args == nil {
		args = &PolicyForwardingRuleV2Args{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PolicyForwardingRuleV2
	err := ctx.RegisterResource("zpa:index/policyForwardingRuleV2:PolicyForwardingRuleV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyForwardingRuleV2 gets an existing PolicyForwardingRuleV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyForwardingRuleV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyForwardingRuleV2State, opts ...pulumi.ResourceOption) (*PolicyForwardingRuleV2, error) {
	var resource PolicyForwardingRuleV2
	err := ctx.ReadResource("zpa:index/policyForwardingRuleV2:PolicyForwardingRuleV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyForwardingRuleV2 resources.
type policyForwardingRuleV2State struct {
	// This is for providing the rule action.
	Action *string `pulumi:"action"`
	// This is for proviidng the set of conditions for the policy.
	Conditions []PolicyForwardingRuleV2Condition `pulumi:"conditions"`
	// This is the description of the access policy.
	Description   *string `pulumi:"description"`
	MicrotenantId *string `pulumi:"microtenantId"`
	// This is the name of the policy.
	Name        *string `pulumi:"name"`
	PolicySetId *string `pulumi:"policySetId"`
}

type PolicyForwardingRuleV2State struct {
	// This is for providing the rule action.
	Action pulumi.StringPtrInput
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyForwardingRuleV2ConditionArrayInput
	// This is the description of the access policy.
	Description   pulumi.StringPtrInput
	MicrotenantId pulumi.StringPtrInput
	// This is the name of the policy.
	Name        pulumi.StringPtrInput
	PolicySetId pulumi.StringPtrInput
}

func (PolicyForwardingRuleV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*policyForwardingRuleV2State)(nil)).Elem()
}

type policyForwardingRuleV2Args struct {
	// This is for providing the rule action.
	Action *string `pulumi:"action"`
	// This is for proviidng the set of conditions for the policy.
	Conditions []PolicyForwardingRuleV2Condition `pulumi:"conditions"`
	// This is the description of the access policy.
	Description   *string `pulumi:"description"`
	MicrotenantId *string `pulumi:"microtenantId"`
	// This is the name of the policy.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a PolicyForwardingRuleV2 resource.
type PolicyForwardingRuleV2Args struct {
	// This is for providing the rule action.
	Action pulumi.StringPtrInput
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyForwardingRuleV2ConditionArrayInput
	// This is the description of the access policy.
	Description   pulumi.StringPtrInput
	MicrotenantId pulumi.StringPtrInput
	// This is the name of the policy.
	Name pulumi.StringPtrInput
}

func (PolicyForwardingRuleV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*policyForwardingRuleV2Args)(nil)).Elem()
}

type PolicyForwardingRuleV2Input interface {
	pulumi.Input

	ToPolicyForwardingRuleV2Output() PolicyForwardingRuleV2Output
	ToPolicyForwardingRuleV2OutputWithContext(ctx context.Context) PolicyForwardingRuleV2Output
}

func (*PolicyForwardingRuleV2) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyForwardingRuleV2)(nil)).Elem()
}

func (i *PolicyForwardingRuleV2) ToPolicyForwardingRuleV2Output() PolicyForwardingRuleV2Output {
	return i.ToPolicyForwardingRuleV2OutputWithContext(context.Background())
}

func (i *PolicyForwardingRuleV2) ToPolicyForwardingRuleV2OutputWithContext(ctx context.Context) PolicyForwardingRuleV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyForwardingRuleV2Output)
}

// PolicyForwardingRuleV2ArrayInput is an input type that accepts PolicyForwardingRuleV2Array and PolicyForwardingRuleV2ArrayOutput values.
// You can construct a concrete instance of `PolicyForwardingRuleV2ArrayInput` via:
//
//	PolicyForwardingRuleV2Array{ PolicyForwardingRuleV2Args{...} }
type PolicyForwardingRuleV2ArrayInput interface {
	pulumi.Input

	ToPolicyForwardingRuleV2ArrayOutput() PolicyForwardingRuleV2ArrayOutput
	ToPolicyForwardingRuleV2ArrayOutputWithContext(context.Context) PolicyForwardingRuleV2ArrayOutput
}

type PolicyForwardingRuleV2Array []PolicyForwardingRuleV2Input

func (PolicyForwardingRuleV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyForwardingRuleV2)(nil)).Elem()
}

func (i PolicyForwardingRuleV2Array) ToPolicyForwardingRuleV2ArrayOutput() PolicyForwardingRuleV2ArrayOutput {
	return i.ToPolicyForwardingRuleV2ArrayOutputWithContext(context.Background())
}

func (i PolicyForwardingRuleV2Array) ToPolicyForwardingRuleV2ArrayOutputWithContext(ctx context.Context) PolicyForwardingRuleV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyForwardingRuleV2ArrayOutput)
}

// PolicyForwardingRuleV2MapInput is an input type that accepts PolicyForwardingRuleV2Map and PolicyForwardingRuleV2MapOutput values.
// You can construct a concrete instance of `PolicyForwardingRuleV2MapInput` via:
//
//	PolicyForwardingRuleV2Map{ "key": PolicyForwardingRuleV2Args{...} }
type PolicyForwardingRuleV2MapInput interface {
	pulumi.Input

	ToPolicyForwardingRuleV2MapOutput() PolicyForwardingRuleV2MapOutput
	ToPolicyForwardingRuleV2MapOutputWithContext(context.Context) PolicyForwardingRuleV2MapOutput
}

type PolicyForwardingRuleV2Map map[string]PolicyForwardingRuleV2Input

func (PolicyForwardingRuleV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyForwardingRuleV2)(nil)).Elem()
}

func (i PolicyForwardingRuleV2Map) ToPolicyForwardingRuleV2MapOutput() PolicyForwardingRuleV2MapOutput {
	return i.ToPolicyForwardingRuleV2MapOutputWithContext(context.Background())
}

func (i PolicyForwardingRuleV2Map) ToPolicyForwardingRuleV2MapOutputWithContext(ctx context.Context) PolicyForwardingRuleV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyForwardingRuleV2MapOutput)
}

type PolicyForwardingRuleV2Output struct{ *pulumi.OutputState }

func (PolicyForwardingRuleV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyForwardingRuleV2)(nil)).Elem()
}

func (o PolicyForwardingRuleV2Output) ToPolicyForwardingRuleV2Output() PolicyForwardingRuleV2Output {
	return o
}

func (o PolicyForwardingRuleV2Output) ToPolicyForwardingRuleV2OutputWithContext(ctx context.Context) PolicyForwardingRuleV2Output {
	return o
}

// This is for providing the rule action.
func (o PolicyForwardingRuleV2Output) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyForwardingRuleV2) pulumi.StringPtrOutput { return v.Action }).(pulumi.StringPtrOutput)
}

// This is for proviidng the set of conditions for the policy.
func (o PolicyForwardingRuleV2Output) Conditions() PolicyForwardingRuleV2ConditionArrayOutput {
	return o.ApplyT(func(v *PolicyForwardingRuleV2) PolicyForwardingRuleV2ConditionArrayOutput { return v.Conditions }).(PolicyForwardingRuleV2ConditionArrayOutput)
}

// This is the description of the access policy.
func (o PolicyForwardingRuleV2Output) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyForwardingRuleV2) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyForwardingRuleV2Output) MicrotenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyForwardingRuleV2) pulumi.StringOutput { return v.MicrotenantId }).(pulumi.StringOutput)
}

// This is the name of the policy.
func (o PolicyForwardingRuleV2Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyForwardingRuleV2) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o PolicyForwardingRuleV2Output) PolicySetId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyForwardingRuleV2) pulumi.StringOutput { return v.PolicySetId }).(pulumi.StringOutput)
}

type PolicyForwardingRuleV2ArrayOutput struct{ *pulumi.OutputState }

func (PolicyForwardingRuleV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyForwardingRuleV2)(nil)).Elem()
}

func (o PolicyForwardingRuleV2ArrayOutput) ToPolicyForwardingRuleV2ArrayOutput() PolicyForwardingRuleV2ArrayOutput {
	return o
}

func (o PolicyForwardingRuleV2ArrayOutput) ToPolicyForwardingRuleV2ArrayOutputWithContext(ctx context.Context) PolicyForwardingRuleV2ArrayOutput {
	return o
}

func (o PolicyForwardingRuleV2ArrayOutput) Index(i pulumi.IntInput) PolicyForwardingRuleV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PolicyForwardingRuleV2 {
		return vs[0].([]*PolicyForwardingRuleV2)[vs[1].(int)]
	}).(PolicyForwardingRuleV2Output)
}

type PolicyForwardingRuleV2MapOutput struct{ *pulumi.OutputState }

func (PolicyForwardingRuleV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyForwardingRuleV2)(nil)).Elem()
}

func (o PolicyForwardingRuleV2MapOutput) ToPolicyForwardingRuleV2MapOutput() PolicyForwardingRuleV2MapOutput {
	return o
}

func (o PolicyForwardingRuleV2MapOutput) ToPolicyForwardingRuleV2MapOutputWithContext(ctx context.Context) PolicyForwardingRuleV2MapOutput {
	return o
}

func (o PolicyForwardingRuleV2MapOutput) MapIndex(k pulumi.StringInput) PolicyForwardingRuleV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PolicyForwardingRuleV2 {
		return vs[0].(map[string]*PolicyForwardingRuleV2)[vs[1].(string)]
	}).(PolicyForwardingRuleV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyForwardingRuleV2Input)(nil)).Elem(), &PolicyForwardingRuleV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyForwardingRuleV2ArrayInput)(nil)).Elem(), PolicyForwardingRuleV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyForwardingRuleV2MapInput)(nil)).Elem(), PolicyForwardingRuleV2Map{})
	pulumi.RegisterOutputType(PolicyForwardingRuleV2Output{})
	pulumi.RegisterOutputType(PolicyForwardingRuleV2ArrayOutput{})
	pulumi.RegisterOutputType(PolicyForwardingRuleV2MapOutput{})
}
