// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// * [Official documentation](https://help.zscaler.com/isolation/about-custom-root-certificates-cloud-browser-isolation)
//
// The **zpa_cloud_browser_isolation_certificate** resource creates a Cloud Browser Isolation certificate. This resource can then be used when creating a CBI External Profile `CloudBrowserIsolationExternalProfile`.`
type CloudBrowserIsolationCertificate struct {
	pulumi.CustomResourceState

	Name pulumi.StringOutput    `pulumi:"name"`
	Pem  pulumi.StringPtrOutput `pulumi:"pem"`
}

// NewCloudBrowserIsolationCertificate registers a new resource with the given unique name, arguments, and options.
func NewCloudBrowserIsolationCertificate(ctx *pulumi.Context,
	name string, args *CloudBrowserIsolationCertificateArgs, opts ...pulumi.ResourceOption) (*CloudBrowserIsolationCertificate, error) {
	if args == nil {
		args = &CloudBrowserIsolationCertificateArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CloudBrowserIsolationCertificate
	err := ctx.RegisterResource("zpa:index/cloudBrowserIsolationCertificate:CloudBrowserIsolationCertificate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudBrowserIsolationCertificate gets an existing CloudBrowserIsolationCertificate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudBrowserIsolationCertificate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudBrowserIsolationCertificateState, opts ...pulumi.ResourceOption) (*CloudBrowserIsolationCertificate, error) {
	var resource CloudBrowserIsolationCertificate
	err := ctx.ReadResource("zpa:index/cloudBrowserIsolationCertificate:CloudBrowserIsolationCertificate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudBrowserIsolationCertificate resources.
type cloudBrowserIsolationCertificateState struct {
	Name *string `pulumi:"name"`
	Pem  *string `pulumi:"pem"`
}

type CloudBrowserIsolationCertificateState struct {
	Name pulumi.StringPtrInput
	Pem  pulumi.StringPtrInput
}

func (CloudBrowserIsolationCertificateState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudBrowserIsolationCertificateState)(nil)).Elem()
}

type cloudBrowserIsolationCertificateArgs struct {
	Name *string `pulumi:"name"`
	Pem  *string `pulumi:"pem"`
}

// The set of arguments for constructing a CloudBrowserIsolationCertificate resource.
type CloudBrowserIsolationCertificateArgs struct {
	Name pulumi.StringPtrInput
	Pem  pulumi.StringPtrInput
}

func (CloudBrowserIsolationCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudBrowserIsolationCertificateArgs)(nil)).Elem()
}

type CloudBrowserIsolationCertificateInput interface {
	pulumi.Input

	ToCloudBrowserIsolationCertificateOutput() CloudBrowserIsolationCertificateOutput
	ToCloudBrowserIsolationCertificateOutputWithContext(ctx context.Context) CloudBrowserIsolationCertificateOutput
}

func (*CloudBrowserIsolationCertificate) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBrowserIsolationCertificate)(nil)).Elem()
}

func (i *CloudBrowserIsolationCertificate) ToCloudBrowserIsolationCertificateOutput() CloudBrowserIsolationCertificateOutput {
	return i.ToCloudBrowserIsolationCertificateOutputWithContext(context.Background())
}

func (i *CloudBrowserIsolationCertificate) ToCloudBrowserIsolationCertificateOutputWithContext(ctx context.Context) CloudBrowserIsolationCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBrowserIsolationCertificateOutput)
}

// CloudBrowserIsolationCertificateArrayInput is an input type that accepts CloudBrowserIsolationCertificateArray and CloudBrowserIsolationCertificateArrayOutput values.
// You can construct a concrete instance of `CloudBrowserIsolationCertificateArrayInput` via:
//
//	CloudBrowserIsolationCertificateArray{ CloudBrowserIsolationCertificateArgs{...} }
type CloudBrowserIsolationCertificateArrayInput interface {
	pulumi.Input

	ToCloudBrowserIsolationCertificateArrayOutput() CloudBrowserIsolationCertificateArrayOutput
	ToCloudBrowserIsolationCertificateArrayOutputWithContext(context.Context) CloudBrowserIsolationCertificateArrayOutput
}

type CloudBrowserIsolationCertificateArray []CloudBrowserIsolationCertificateInput

func (CloudBrowserIsolationCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudBrowserIsolationCertificate)(nil)).Elem()
}

func (i CloudBrowserIsolationCertificateArray) ToCloudBrowserIsolationCertificateArrayOutput() CloudBrowserIsolationCertificateArrayOutput {
	return i.ToCloudBrowserIsolationCertificateArrayOutputWithContext(context.Background())
}

func (i CloudBrowserIsolationCertificateArray) ToCloudBrowserIsolationCertificateArrayOutputWithContext(ctx context.Context) CloudBrowserIsolationCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBrowserIsolationCertificateArrayOutput)
}

// CloudBrowserIsolationCertificateMapInput is an input type that accepts CloudBrowserIsolationCertificateMap and CloudBrowserIsolationCertificateMapOutput values.
// You can construct a concrete instance of `CloudBrowserIsolationCertificateMapInput` via:
//
//	CloudBrowserIsolationCertificateMap{ "key": CloudBrowserIsolationCertificateArgs{...} }
type CloudBrowserIsolationCertificateMapInput interface {
	pulumi.Input

	ToCloudBrowserIsolationCertificateMapOutput() CloudBrowserIsolationCertificateMapOutput
	ToCloudBrowserIsolationCertificateMapOutputWithContext(context.Context) CloudBrowserIsolationCertificateMapOutput
}

type CloudBrowserIsolationCertificateMap map[string]CloudBrowserIsolationCertificateInput

func (CloudBrowserIsolationCertificateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudBrowserIsolationCertificate)(nil)).Elem()
}

func (i CloudBrowserIsolationCertificateMap) ToCloudBrowserIsolationCertificateMapOutput() CloudBrowserIsolationCertificateMapOutput {
	return i.ToCloudBrowserIsolationCertificateMapOutputWithContext(context.Background())
}

func (i CloudBrowserIsolationCertificateMap) ToCloudBrowserIsolationCertificateMapOutputWithContext(ctx context.Context) CloudBrowserIsolationCertificateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBrowserIsolationCertificateMapOutput)
}

type CloudBrowserIsolationCertificateOutput struct{ *pulumi.OutputState }

func (CloudBrowserIsolationCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBrowserIsolationCertificate)(nil)).Elem()
}

func (o CloudBrowserIsolationCertificateOutput) ToCloudBrowserIsolationCertificateOutput() CloudBrowserIsolationCertificateOutput {
	return o
}

func (o CloudBrowserIsolationCertificateOutput) ToCloudBrowserIsolationCertificateOutputWithContext(ctx context.Context) CloudBrowserIsolationCertificateOutput {
	return o
}

func (o CloudBrowserIsolationCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudBrowserIsolationCertificate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o CloudBrowserIsolationCertificateOutput) Pem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBrowserIsolationCertificate) pulumi.StringPtrOutput { return v.Pem }).(pulumi.StringPtrOutput)
}

type CloudBrowserIsolationCertificateArrayOutput struct{ *pulumi.OutputState }

func (CloudBrowserIsolationCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudBrowserIsolationCertificate)(nil)).Elem()
}

func (o CloudBrowserIsolationCertificateArrayOutput) ToCloudBrowserIsolationCertificateArrayOutput() CloudBrowserIsolationCertificateArrayOutput {
	return o
}

func (o CloudBrowserIsolationCertificateArrayOutput) ToCloudBrowserIsolationCertificateArrayOutputWithContext(ctx context.Context) CloudBrowserIsolationCertificateArrayOutput {
	return o
}

func (o CloudBrowserIsolationCertificateArrayOutput) Index(i pulumi.IntInput) CloudBrowserIsolationCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CloudBrowserIsolationCertificate {
		return vs[0].([]*CloudBrowserIsolationCertificate)[vs[1].(int)]
	}).(CloudBrowserIsolationCertificateOutput)
}

type CloudBrowserIsolationCertificateMapOutput struct{ *pulumi.OutputState }

func (CloudBrowserIsolationCertificateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudBrowserIsolationCertificate)(nil)).Elem()
}

func (o CloudBrowserIsolationCertificateMapOutput) ToCloudBrowserIsolationCertificateMapOutput() CloudBrowserIsolationCertificateMapOutput {
	return o
}

func (o CloudBrowserIsolationCertificateMapOutput) ToCloudBrowserIsolationCertificateMapOutputWithContext(ctx context.Context) CloudBrowserIsolationCertificateMapOutput {
	return o
}

func (o CloudBrowserIsolationCertificateMapOutput) MapIndex(k pulumi.StringInput) CloudBrowserIsolationCertificateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CloudBrowserIsolationCertificate {
		return vs[0].(map[string]*CloudBrowserIsolationCertificate)[vs[1].(string)]
	}).(CloudBrowserIsolationCertificateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBrowserIsolationCertificateInput)(nil)).Elem(), &CloudBrowserIsolationCertificate{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBrowserIsolationCertificateArrayInput)(nil)).Elem(), CloudBrowserIsolationCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBrowserIsolationCertificateMapInput)(nil)).Elem(), CloudBrowserIsolationCertificateMap{})
	pulumi.RegisterOutputType(CloudBrowserIsolationCertificateOutput{})
	pulumi.RegisterOutputType(CloudBrowserIsolationCertificateArrayOutput{})
	pulumi.RegisterOutputType(CloudBrowserIsolationCertificateMapOutput{})
}
