// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// Use the **zpa_cloud_browser_isolation_banner** data source to get information about Cloud Browser Isolation banner. This data source information is required as part of the attribute `bannerId` when creating an Cloud Browser Isolation External Profile “CloudBrowserIsolationExternalProfile“
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zpa.LookupCloudBrowserIsolationBanner(ctx, &zpa.LookupCloudBrowserIsolationBannerArgs{
//				Name: pulumi.StringRef("Default"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func LookupCloudBrowserIsolationBanner(ctx *pulumi.Context, args *LookupCloudBrowserIsolationBannerArgs, opts ...pulumi.InvokeOption) (*LookupCloudBrowserIsolationBannerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCloudBrowserIsolationBannerResult
	err := ctx.Invoke("zpa:index/getCloudBrowserIsolationBanner:getCloudBrowserIsolationBanner", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudBrowserIsolationBanner.
type LookupCloudBrowserIsolationBannerArgs struct {
	// The id of the CBI banner to be exported.
	Id *string `pulumi:"id"`
	// The name of the CBI banner to be exported.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getCloudBrowserIsolationBanner.
type LookupCloudBrowserIsolationBannerResult struct {
	// (bool) - Show Welcome Notification
	Banner bool    `pulumi:"banner"`
	Id     *string `pulumi:"id"`
	// (bool) - Use the default banner
	IsDefault bool `pulumi:"isDefault"`
	// (string) - The Logo Image (.jpeg or .png; Maximum file size is 100KB.)
	Logo string  `pulumi:"logo"`
	Name *string `pulumi:"name"`
	// (string) The Banner Notification Text
	NotificationText string `pulumi:"notificationText"`
	// (string) The Banner Notification Title
	NotificationTitle string `pulumi:"notificationTitle"`
	// (string) - The Banner Primary Color code in hexadecimal way to represent the color of the banner in RGB format
	PrimaryColor string `pulumi:"primaryColor"`
	// (string) - The Banner Text Color code in hexadecimal way to represent the color of the text in RGB format
	TextColor string `pulumi:"textColor"`
}

func LookupCloudBrowserIsolationBannerOutput(ctx *pulumi.Context, args LookupCloudBrowserIsolationBannerOutputArgs, opts ...pulumi.InvokeOption) LookupCloudBrowserIsolationBannerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCloudBrowserIsolationBannerResult, error) {
			args := v.(LookupCloudBrowserIsolationBannerArgs)
			r, err := LookupCloudBrowserIsolationBanner(ctx, &args, opts...)
			var s LookupCloudBrowserIsolationBannerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCloudBrowserIsolationBannerResultOutput)
}

// A collection of arguments for invoking getCloudBrowserIsolationBanner.
type LookupCloudBrowserIsolationBannerOutputArgs struct {
	// The id of the CBI banner to be exported.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the CBI banner to be exported.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupCloudBrowserIsolationBannerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudBrowserIsolationBannerArgs)(nil)).Elem()
}

// A collection of values returned by getCloudBrowserIsolationBanner.
type LookupCloudBrowserIsolationBannerResultOutput struct{ *pulumi.OutputState }

func (LookupCloudBrowserIsolationBannerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudBrowserIsolationBannerResult)(nil)).Elem()
}

func (o LookupCloudBrowserIsolationBannerResultOutput) ToLookupCloudBrowserIsolationBannerResultOutput() LookupCloudBrowserIsolationBannerResultOutput {
	return o
}

func (o LookupCloudBrowserIsolationBannerResultOutput) ToLookupCloudBrowserIsolationBannerResultOutputWithContext(ctx context.Context) LookupCloudBrowserIsolationBannerResultOutput {
	return o
}

// (bool) - Show Welcome Notification
func (o LookupCloudBrowserIsolationBannerResultOutput) Banner() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCloudBrowserIsolationBannerResult) bool { return v.Banner }).(pulumi.BoolOutput)
}

func (o LookupCloudBrowserIsolationBannerResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCloudBrowserIsolationBannerResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (bool) - Use the default banner
func (o LookupCloudBrowserIsolationBannerResultOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCloudBrowserIsolationBannerResult) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// (string) - The Logo Image (.jpeg or .png; Maximum file size is 100KB.)
func (o LookupCloudBrowserIsolationBannerResultOutput) Logo() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudBrowserIsolationBannerResult) string { return v.Logo }).(pulumi.StringOutput)
}

func (o LookupCloudBrowserIsolationBannerResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCloudBrowserIsolationBannerResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (string) The Banner Notification Text
func (o LookupCloudBrowserIsolationBannerResultOutput) NotificationText() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudBrowserIsolationBannerResult) string { return v.NotificationText }).(pulumi.StringOutput)
}

// (string) The Banner Notification Title
func (o LookupCloudBrowserIsolationBannerResultOutput) NotificationTitle() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudBrowserIsolationBannerResult) string { return v.NotificationTitle }).(pulumi.StringOutput)
}

// (string) - The Banner Primary Color code in hexadecimal way to represent the color of the banner in RGB format
func (o LookupCloudBrowserIsolationBannerResultOutput) PrimaryColor() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudBrowserIsolationBannerResult) string { return v.PrimaryColor }).(pulumi.StringOutput)
}

// (string) - The Banner Text Color code in hexadecimal way to represent the color of the text in RGB format
func (o LookupCloudBrowserIsolationBannerResultOutput) TextColor() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudBrowserIsolationBannerResult) string { return v.TextColor }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudBrowserIsolationBannerResultOutput{})
}
