// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zpa.LookupApplicationServer(ctx, &zpa.LookupApplicationServerArgs{
//				Name: pulumi.StringRef("server.example.com"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zpa.LookupApplicationServer(ctx, &zpa.LookupApplicationServerArgs{
//				Id: pulumi.StringRef("1234567890"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func LookupApplicationServer(ctx *pulumi.Context, args *LookupApplicationServerArgs, opts ...pulumi.InvokeOption) (*LookupApplicationServerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupApplicationServerResult
	err := ctx.Invoke("zpa:index/getApplicationServer:getApplicationServer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApplicationServer.
type LookupApplicationServerArgs struct {
	Id              *string `pulumi:"id"`
	MicrotenantId   *string `pulumi:"microtenantId"`
	MicrotenantName *string `pulumi:"microtenantName"`
	Name            *string `pulumi:"name"`
}

// A collection of values returned by getApplicationServer.
type LookupApplicationServerResult struct {
	Address           string   `pulumi:"address"`
	AppServerGroupIds []string `pulumi:"appServerGroupIds"`
	ConfigSpace       string   `pulumi:"configSpace"`
	CreationTime      string   `pulumi:"creationTime"`
	Description       string   `pulumi:"description"`
	Enabled           bool     `pulumi:"enabled"`
	Id                *string  `pulumi:"id"`
	MicrotenantId     *string  `pulumi:"microtenantId"`
	MicrotenantName   *string  `pulumi:"microtenantName"`
	ModifiedTime      string   `pulumi:"modifiedTime"`
	Modifiedby        string   `pulumi:"modifiedby"`
	Name              *string  `pulumi:"name"`
}

func LookupApplicationServerOutput(ctx *pulumi.Context, args LookupApplicationServerOutputArgs, opts ...pulumi.InvokeOption) LookupApplicationServerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupApplicationServerResult, error) {
			args := v.(LookupApplicationServerArgs)
			r, err := LookupApplicationServer(ctx, &args, opts...)
			var s LookupApplicationServerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupApplicationServerResultOutput)
}

// A collection of arguments for invoking getApplicationServer.
type LookupApplicationServerOutputArgs struct {
	Id              pulumi.StringPtrInput `pulumi:"id"`
	MicrotenantId   pulumi.StringPtrInput `pulumi:"microtenantId"`
	MicrotenantName pulumi.StringPtrInput `pulumi:"microtenantName"`
	Name            pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupApplicationServerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationServerArgs)(nil)).Elem()
}

// A collection of values returned by getApplicationServer.
type LookupApplicationServerResultOutput struct{ *pulumi.OutputState }

func (LookupApplicationServerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationServerResult)(nil)).Elem()
}

func (o LookupApplicationServerResultOutput) ToLookupApplicationServerResultOutput() LookupApplicationServerResultOutput {
	return o
}

func (o LookupApplicationServerResultOutput) ToLookupApplicationServerResultOutputWithContext(ctx context.Context) LookupApplicationServerResultOutput {
	return o
}

func (o LookupApplicationServerResultOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationServerResult) string { return v.Address }).(pulumi.StringOutput)
}

func (o LookupApplicationServerResultOutput) AppServerGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupApplicationServerResult) []string { return v.AppServerGroupIds }).(pulumi.StringArrayOutput)
}

func (o LookupApplicationServerResultOutput) ConfigSpace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationServerResult) string { return v.ConfigSpace }).(pulumi.StringOutput)
}

func (o LookupApplicationServerResultOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationServerResult) string { return v.CreationTime }).(pulumi.StringOutput)
}

func (o LookupApplicationServerResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationServerResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupApplicationServerResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupApplicationServerResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o LookupApplicationServerResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationServerResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupApplicationServerResultOutput) MicrotenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationServerResult) *string { return v.MicrotenantId }).(pulumi.StringPtrOutput)
}

func (o LookupApplicationServerResultOutput) MicrotenantName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationServerResult) *string { return v.MicrotenantName }).(pulumi.StringPtrOutput)
}

func (o LookupApplicationServerResultOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationServerResult) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o LookupApplicationServerResultOutput) Modifiedby() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationServerResult) string { return v.Modifiedby }).(pulumi.StringOutput)
}

func (o LookupApplicationServerResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationServerResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApplicationServerResultOutput{})
}
