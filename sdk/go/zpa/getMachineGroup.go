// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// * [Official documentation](https://help.zscaler.com/zpa/about-machine-groups)
// * [API documentation](https://help.zscaler.com/zpa/obtaining-machine-group-details-using-api)
//
// Use the **zpa_machine_group** data source to get information about a machine group created in the Zscaler Private Access cloud. This data source can then be referenced in an Access Policy, Timeout policy, Forwarding Policy, Inspection Policy or Isolation Policy.
//
// **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// ZPA Machine Group Data Source by name
//			_, err := zpa.GetMachineGroup(ctx, &zpa.GetMachineGroupArgs{
//				Name: pulumi.StringRef("MGR01"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// ZPA Machine Group Data Source by id
//			_, err := zpa.GetMachineGroup(ctx, &zpa.GetMachineGroupArgs{
//				Id: pulumi.StringRef("1234567890"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetMachineGroup(ctx *pulumi.Context, args *GetMachineGroupArgs, opts ...pulumi.InvokeOption) (*GetMachineGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMachineGroupResult
	err := ctx.Invoke("zpa:index/getMachineGroup:getMachineGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMachineGroup.
type GetMachineGroupArgs struct {
	Id              *string `pulumi:"id"`
	MicrotenantId   *string `pulumi:"microtenantId"`
	MicrotenantName *string `pulumi:"microtenantName"`
	Name            *string `pulumi:"name"`
}

// A collection of values returned by getMachineGroup.
type GetMachineGroupResult struct {
	CreationTime    string                   `pulumi:"creationTime"`
	Description     string                   `pulumi:"description"`
	Enabled         bool                     `pulumi:"enabled"`
	Id              *string                  `pulumi:"id"`
	Machines        []GetMachineGroupMachine `pulumi:"machines"`
	MicrotenantId   *string                  `pulumi:"microtenantId"`
	MicrotenantName *string                  `pulumi:"microtenantName"`
	ModifiedBy      string                   `pulumi:"modifiedBy"`
	ModifiedTime    string                   `pulumi:"modifiedTime"`
	Name            *string                  `pulumi:"name"`
}

func GetMachineGroupOutput(ctx *pulumi.Context, args GetMachineGroupOutputArgs, opts ...pulumi.InvokeOption) GetMachineGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetMachineGroupResultOutput, error) {
			args := v.(GetMachineGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("zpa:index/getMachineGroup:getMachineGroup", args, GetMachineGroupResultOutput{}, options).(GetMachineGroupResultOutput), nil
		}).(GetMachineGroupResultOutput)
}

// A collection of arguments for invoking getMachineGroup.
type GetMachineGroupOutputArgs struct {
	Id              pulumi.StringPtrInput `pulumi:"id"`
	MicrotenantId   pulumi.StringPtrInput `pulumi:"microtenantId"`
	MicrotenantName pulumi.StringPtrInput `pulumi:"microtenantName"`
	Name            pulumi.StringPtrInput `pulumi:"name"`
}

func (GetMachineGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMachineGroupArgs)(nil)).Elem()
}

// A collection of values returned by getMachineGroup.
type GetMachineGroupResultOutput struct{ *pulumi.OutputState }

func (GetMachineGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMachineGroupResult)(nil)).Elem()
}

func (o GetMachineGroupResultOutput) ToGetMachineGroupResultOutput() GetMachineGroupResultOutput {
	return o
}

func (o GetMachineGroupResultOutput) ToGetMachineGroupResultOutputWithContext(ctx context.Context) GetMachineGroupResultOutput {
	return o
}

func (o GetMachineGroupResultOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupResult) string { return v.CreationTime }).(pulumi.StringOutput)
}

func (o GetMachineGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetMachineGroupResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMachineGroupResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetMachineGroupResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMachineGroupResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetMachineGroupResultOutput) Machines() GetMachineGroupMachineArrayOutput {
	return o.ApplyT(func(v GetMachineGroupResult) []GetMachineGroupMachine { return v.Machines }).(GetMachineGroupMachineArrayOutput)
}

func (o GetMachineGroupResultOutput) MicrotenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMachineGroupResult) *string { return v.MicrotenantId }).(pulumi.StringPtrOutput)
}

func (o GetMachineGroupResultOutput) MicrotenantName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMachineGroupResult) *string { return v.MicrotenantName }).(pulumi.StringPtrOutput)
}

func (o GetMachineGroupResultOutput) ModifiedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupResult) string { return v.ModifiedBy }).(pulumi.StringOutput)
}

func (o GetMachineGroupResultOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupResult) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o GetMachineGroupResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMachineGroupResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMachineGroupResultOutput{})
}
