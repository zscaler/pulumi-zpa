// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// Use the **zpa_machine_group** data source to get information about a machine group created in the Zscaler Private Access cloud. This data source can then be referenced in an Access Policy, Timeout policy, Forwarding Policy, Inspection Policy or Isolation Policy.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zpa.GetMachineGroup(ctx, &zpa.GetMachineGroupArgs{
//				Name: pulumi.StringRef("MGR01"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zpa.GetMachineGroup(ctx, &zpa.GetMachineGroupArgs{
//				Id: pulumi.StringRef("1234567890"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetMachineGroup(ctx *pulumi.Context, args *GetMachineGroupArgs, opts ...pulumi.InvokeOption) (*GetMachineGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMachineGroupResult
	err := ctx.Invoke("zpa:index/getMachineGroup:getMachineGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMachineGroup.
type GetMachineGroupArgs struct {
	// The ID of the machine group to be exported.
	Id *string `pulumi:"id"`
	// (string) The ID of the microtenant the resource is to be associated with.
	MicrotenantId *string `pulumi:"microtenantId"`
	// (string) The name of the microtenant the resource is to be associated with.
	MicrotenantName *string `pulumi:"microtenantName"`
	// The name of the machine group to be exported.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getMachineGroup.
type GetMachineGroupResult struct {
	// (string)
	CreationTime string `pulumi:"creationTime"`
	// (string)
	Description string `pulumi:"description"`
	// (bool)
	Enabled bool `pulumi:"enabled"`
	// (string)
	Id *string `pulumi:"id"`
	// (string)
	Machines []GetMachineGroupMachine `pulumi:"machines"`
	// (string) The ID of the microtenant the resource is to be associated with.
	MicrotenantId *string `pulumi:"microtenantId"`
	// (string) The name of the microtenant the resource is to be associated with.
	MicrotenantName *string `pulumi:"microtenantName"`
	// (string)
	ModifiedBy string `pulumi:"modifiedBy"`
	// (string)
	ModifiedTime string `pulumi:"modifiedTime"`
	// (string)
	Name *string `pulumi:"name"`
}

func GetMachineGroupOutput(ctx *pulumi.Context, args GetMachineGroupOutputArgs, opts ...pulumi.InvokeOption) GetMachineGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMachineGroupResult, error) {
			args := v.(GetMachineGroupArgs)
			r, err := GetMachineGroup(ctx, &args, opts...)
			var s GetMachineGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMachineGroupResultOutput)
}

// A collection of arguments for invoking getMachineGroup.
type GetMachineGroupOutputArgs struct {
	// The ID of the machine group to be exported.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// (string) The ID of the microtenant the resource is to be associated with.
	MicrotenantId pulumi.StringPtrInput `pulumi:"microtenantId"`
	// (string) The name of the microtenant the resource is to be associated with.
	MicrotenantName pulumi.StringPtrInput `pulumi:"microtenantName"`
	// The name of the machine group to be exported.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GetMachineGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMachineGroupArgs)(nil)).Elem()
}

// A collection of values returned by getMachineGroup.
type GetMachineGroupResultOutput struct{ *pulumi.OutputState }

func (GetMachineGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMachineGroupResult)(nil)).Elem()
}

func (o GetMachineGroupResultOutput) ToGetMachineGroupResultOutput() GetMachineGroupResultOutput {
	return o
}

func (o GetMachineGroupResultOutput) ToGetMachineGroupResultOutputWithContext(ctx context.Context) GetMachineGroupResultOutput {
	return o
}

// (string)
func (o GetMachineGroupResultOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupResult) string { return v.CreationTime }).(pulumi.StringOutput)
}

// (string)
func (o GetMachineGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

// (bool)
func (o GetMachineGroupResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMachineGroupResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// (string)
func (o GetMachineGroupResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMachineGroupResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (string)
func (o GetMachineGroupResultOutput) Machines() GetMachineGroupMachineArrayOutput {
	return o.ApplyT(func(v GetMachineGroupResult) []GetMachineGroupMachine { return v.Machines }).(GetMachineGroupMachineArrayOutput)
}

// (string) The ID of the microtenant the resource is to be associated with.
func (o GetMachineGroupResultOutput) MicrotenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMachineGroupResult) *string { return v.MicrotenantId }).(pulumi.StringPtrOutput)
}

// (string) The name of the microtenant the resource is to be associated with.
func (o GetMachineGroupResultOutput) MicrotenantName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMachineGroupResult) *string { return v.MicrotenantName }).(pulumi.StringPtrOutput)
}

// (string)
func (o GetMachineGroupResultOutput) ModifiedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupResult) string { return v.ModifiedBy }).(pulumi.StringOutput)
}

// (string)
func (o GetMachineGroupResultOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupResult) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

// (string)
func (o GetMachineGroupResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMachineGroupResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMachineGroupResultOutput{})
}
