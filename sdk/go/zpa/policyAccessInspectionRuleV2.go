// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// * [Official documentation](https://help.zscaler.com/zpa/about-security-policy)
// * [API documentation](https://help.zscaler.com/zpa/configuring-appprotection-policies-using-api)
//
// The **zpa_policy_inspection_rule_v2** resource creates and manages policy access inspection rule in the Zscaler Private Access cloud using a new v2 API endpoint.
//
//	⚠️ **NOTE**: This resource is recommended if your configuration requires the association of more than 1000 resource criteria per rule.
//
//	⚠️ **WARNING:**: The attribute ``ruleOrder`` is now deprecated in favor of the new resource  ``policyAccessRuleReorder``
//
// ## Import
//
// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZPA configurations into Terraform-compliant HashiCorp Configuration Language.
//
// # Visit
//
// Policy access inspection rule can be imported by using `<RULE ID>` as the import ID.
//
// For example:
//
// ```sh
// $ pulumi import zpa:index/policyAccessInspectionRuleV2:PolicyAccessInspectionRuleV2 example <rule_id>
// ```
type PolicyAccessInspectionRuleV2 struct {
	pulumi.CustomResourceState

	// This is for providing the rule action. Supported values: `INSPECT` and `BYPASS_INSPECT`.
	Action pulumi.StringPtrOutput `pulumi:"action"`
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyAccessInspectionRuleV2ConditionArrayOutput `pulumi:"conditions"`
	// This is the description of the access policy rule.
	Description   pulumi.StringPtrOutput `pulumi:"description"`
	MicrotenantId pulumi.StringOutput    `pulumi:"microtenantId"`
	// - (String) This is the name of the policy rule.
	Name        pulumi.StringOutput `pulumi:"name"`
	PolicySetId pulumi.StringOutput `pulumi:"policySetId"`
	// An inspection profile is required if the `action` is set to `INSPECT`
	ZpnInspectionProfileId pulumi.StringOutput `pulumi:"zpnInspectionProfileId"`
}

// NewPolicyAccessInspectionRuleV2 registers a new resource with the given unique name, arguments, and options.
func NewPolicyAccessInspectionRuleV2(ctx *pulumi.Context,
	name string, args *PolicyAccessInspectionRuleV2Args, opts ...pulumi.ResourceOption) (*PolicyAccessInspectionRuleV2, error) {
	if args == nil {
		args = &PolicyAccessInspectionRuleV2Args{}
	}

	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("zpa:index/policyInspectionRuleV2:PolicyInspectionRuleV2"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PolicyAccessInspectionRuleV2
	err := ctx.RegisterResource("zpa:index/policyAccessInspectionRuleV2:PolicyAccessInspectionRuleV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyAccessInspectionRuleV2 gets an existing PolicyAccessInspectionRuleV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyAccessInspectionRuleV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyAccessInspectionRuleV2State, opts ...pulumi.ResourceOption) (*PolicyAccessInspectionRuleV2, error) {
	var resource PolicyAccessInspectionRuleV2
	err := ctx.ReadResource("zpa:index/policyAccessInspectionRuleV2:PolicyAccessInspectionRuleV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyAccessInspectionRuleV2 resources.
type policyAccessInspectionRuleV2State struct {
	// This is for providing the rule action. Supported values: `INSPECT` and `BYPASS_INSPECT`.
	Action *string `pulumi:"action"`
	// This is for proviidng the set of conditions for the policy.
	Conditions []PolicyAccessInspectionRuleV2Condition `pulumi:"conditions"`
	// This is the description of the access policy rule.
	Description   *string `pulumi:"description"`
	MicrotenantId *string `pulumi:"microtenantId"`
	// - (String) This is the name of the policy rule.
	Name        *string `pulumi:"name"`
	PolicySetId *string `pulumi:"policySetId"`
	// An inspection profile is required if the `action` is set to `INSPECT`
	ZpnInspectionProfileId *string `pulumi:"zpnInspectionProfileId"`
}

type PolicyAccessInspectionRuleV2State struct {
	// This is for providing the rule action. Supported values: `INSPECT` and `BYPASS_INSPECT`.
	Action pulumi.StringPtrInput
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyAccessInspectionRuleV2ConditionArrayInput
	// This is the description of the access policy rule.
	Description   pulumi.StringPtrInput
	MicrotenantId pulumi.StringPtrInput
	// - (String) This is the name of the policy rule.
	Name        pulumi.StringPtrInput
	PolicySetId pulumi.StringPtrInput
	// An inspection profile is required if the `action` is set to `INSPECT`
	ZpnInspectionProfileId pulumi.StringPtrInput
}

func (PolicyAccessInspectionRuleV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*policyAccessInspectionRuleV2State)(nil)).Elem()
}

type policyAccessInspectionRuleV2Args struct {
	// This is for providing the rule action. Supported values: `INSPECT` and `BYPASS_INSPECT`.
	Action *string `pulumi:"action"`
	// This is for proviidng the set of conditions for the policy.
	Conditions []PolicyAccessInspectionRuleV2Condition `pulumi:"conditions"`
	// This is the description of the access policy rule.
	Description   *string `pulumi:"description"`
	MicrotenantId *string `pulumi:"microtenantId"`
	// - (String) This is the name of the policy rule.
	Name *string `pulumi:"name"`
	// An inspection profile is required if the `action` is set to `INSPECT`
	ZpnInspectionProfileId *string `pulumi:"zpnInspectionProfileId"`
}

// The set of arguments for constructing a PolicyAccessInspectionRuleV2 resource.
type PolicyAccessInspectionRuleV2Args struct {
	// This is for providing the rule action. Supported values: `INSPECT` and `BYPASS_INSPECT`.
	Action pulumi.StringPtrInput
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyAccessInspectionRuleV2ConditionArrayInput
	// This is the description of the access policy rule.
	Description   pulumi.StringPtrInput
	MicrotenantId pulumi.StringPtrInput
	// - (String) This is the name of the policy rule.
	Name pulumi.StringPtrInput
	// An inspection profile is required if the `action` is set to `INSPECT`
	ZpnInspectionProfileId pulumi.StringPtrInput
}

func (PolicyAccessInspectionRuleV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*policyAccessInspectionRuleV2Args)(nil)).Elem()
}

type PolicyAccessInspectionRuleV2Input interface {
	pulumi.Input

	ToPolicyAccessInspectionRuleV2Output() PolicyAccessInspectionRuleV2Output
	ToPolicyAccessInspectionRuleV2OutputWithContext(ctx context.Context) PolicyAccessInspectionRuleV2Output
}

func (*PolicyAccessInspectionRuleV2) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAccessInspectionRuleV2)(nil)).Elem()
}

func (i *PolicyAccessInspectionRuleV2) ToPolicyAccessInspectionRuleV2Output() PolicyAccessInspectionRuleV2Output {
	return i.ToPolicyAccessInspectionRuleV2OutputWithContext(context.Background())
}

func (i *PolicyAccessInspectionRuleV2) ToPolicyAccessInspectionRuleV2OutputWithContext(ctx context.Context) PolicyAccessInspectionRuleV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAccessInspectionRuleV2Output)
}

// PolicyAccessInspectionRuleV2ArrayInput is an input type that accepts PolicyAccessInspectionRuleV2Array and PolicyAccessInspectionRuleV2ArrayOutput values.
// You can construct a concrete instance of `PolicyAccessInspectionRuleV2ArrayInput` via:
//
//	PolicyAccessInspectionRuleV2Array{ PolicyAccessInspectionRuleV2Args{...} }
type PolicyAccessInspectionRuleV2ArrayInput interface {
	pulumi.Input

	ToPolicyAccessInspectionRuleV2ArrayOutput() PolicyAccessInspectionRuleV2ArrayOutput
	ToPolicyAccessInspectionRuleV2ArrayOutputWithContext(context.Context) PolicyAccessInspectionRuleV2ArrayOutput
}

type PolicyAccessInspectionRuleV2Array []PolicyAccessInspectionRuleV2Input

func (PolicyAccessInspectionRuleV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyAccessInspectionRuleV2)(nil)).Elem()
}

func (i PolicyAccessInspectionRuleV2Array) ToPolicyAccessInspectionRuleV2ArrayOutput() PolicyAccessInspectionRuleV2ArrayOutput {
	return i.ToPolicyAccessInspectionRuleV2ArrayOutputWithContext(context.Background())
}

func (i PolicyAccessInspectionRuleV2Array) ToPolicyAccessInspectionRuleV2ArrayOutputWithContext(ctx context.Context) PolicyAccessInspectionRuleV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAccessInspectionRuleV2ArrayOutput)
}

// PolicyAccessInspectionRuleV2MapInput is an input type that accepts PolicyAccessInspectionRuleV2Map and PolicyAccessInspectionRuleV2MapOutput values.
// You can construct a concrete instance of `PolicyAccessInspectionRuleV2MapInput` via:
//
//	PolicyAccessInspectionRuleV2Map{ "key": PolicyAccessInspectionRuleV2Args{...} }
type PolicyAccessInspectionRuleV2MapInput interface {
	pulumi.Input

	ToPolicyAccessInspectionRuleV2MapOutput() PolicyAccessInspectionRuleV2MapOutput
	ToPolicyAccessInspectionRuleV2MapOutputWithContext(context.Context) PolicyAccessInspectionRuleV2MapOutput
}

type PolicyAccessInspectionRuleV2Map map[string]PolicyAccessInspectionRuleV2Input

func (PolicyAccessInspectionRuleV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyAccessInspectionRuleV2)(nil)).Elem()
}

func (i PolicyAccessInspectionRuleV2Map) ToPolicyAccessInspectionRuleV2MapOutput() PolicyAccessInspectionRuleV2MapOutput {
	return i.ToPolicyAccessInspectionRuleV2MapOutputWithContext(context.Background())
}

func (i PolicyAccessInspectionRuleV2Map) ToPolicyAccessInspectionRuleV2MapOutputWithContext(ctx context.Context) PolicyAccessInspectionRuleV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAccessInspectionRuleV2MapOutput)
}

type PolicyAccessInspectionRuleV2Output struct{ *pulumi.OutputState }

func (PolicyAccessInspectionRuleV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAccessInspectionRuleV2)(nil)).Elem()
}

func (o PolicyAccessInspectionRuleV2Output) ToPolicyAccessInspectionRuleV2Output() PolicyAccessInspectionRuleV2Output {
	return o
}

func (o PolicyAccessInspectionRuleV2Output) ToPolicyAccessInspectionRuleV2OutputWithContext(ctx context.Context) PolicyAccessInspectionRuleV2Output {
	return o
}

// This is for providing the rule action. Supported values: `INSPECT` and `BYPASS_INSPECT`.
func (o PolicyAccessInspectionRuleV2Output) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRuleV2) pulumi.StringPtrOutput { return v.Action }).(pulumi.StringPtrOutput)
}

// This is for proviidng the set of conditions for the policy.
func (o PolicyAccessInspectionRuleV2Output) Conditions() PolicyAccessInspectionRuleV2ConditionArrayOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRuleV2) PolicyAccessInspectionRuleV2ConditionArrayOutput {
		return v.Conditions
	}).(PolicyAccessInspectionRuleV2ConditionArrayOutput)
}

// This is the description of the access policy rule.
func (o PolicyAccessInspectionRuleV2Output) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRuleV2) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyAccessInspectionRuleV2Output) MicrotenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRuleV2) pulumi.StringOutput { return v.MicrotenantId }).(pulumi.StringOutput)
}

// - (String) This is the name of the policy rule.
func (o PolicyAccessInspectionRuleV2Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRuleV2) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o PolicyAccessInspectionRuleV2Output) PolicySetId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRuleV2) pulumi.StringOutput { return v.PolicySetId }).(pulumi.StringOutput)
}

// An inspection profile is required if the `action` is set to `INSPECT`
func (o PolicyAccessInspectionRuleV2Output) ZpnInspectionProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRuleV2) pulumi.StringOutput { return v.ZpnInspectionProfileId }).(pulumi.StringOutput)
}

type PolicyAccessInspectionRuleV2ArrayOutput struct{ *pulumi.OutputState }

func (PolicyAccessInspectionRuleV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyAccessInspectionRuleV2)(nil)).Elem()
}

func (o PolicyAccessInspectionRuleV2ArrayOutput) ToPolicyAccessInspectionRuleV2ArrayOutput() PolicyAccessInspectionRuleV2ArrayOutput {
	return o
}

func (o PolicyAccessInspectionRuleV2ArrayOutput) ToPolicyAccessInspectionRuleV2ArrayOutputWithContext(ctx context.Context) PolicyAccessInspectionRuleV2ArrayOutput {
	return o
}

func (o PolicyAccessInspectionRuleV2ArrayOutput) Index(i pulumi.IntInput) PolicyAccessInspectionRuleV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PolicyAccessInspectionRuleV2 {
		return vs[0].([]*PolicyAccessInspectionRuleV2)[vs[1].(int)]
	}).(PolicyAccessInspectionRuleV2Output)
}

type PolicyAccessInspectionRuleV2MapOutput struct{ *pulumi.OutputState }

func (PolicyAccessInspectionRuleV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyAccessInspectionRuleV2)(nil)).Elem()
}

func (o PolicyAccessInspectionRuleV2MapOutput) ToPolicyAccessInspectionRuleV2MapOutput() PolicyAccessInspectionRuleV2MapOutput {
	return o
}

func (o PolicyAccessInspectionRuleV2MapOutput) ToPolicyAccessInspectionRuleV2MapOutputWithContext(ctx context.Context) PolicyAccessInspectionRuleV2MapOutput {
	return o
}

func (o PolicyAccessInspectionRuleV2MapOutput) MapIndex(k pulumi.StringInput) PolicyAccessInspectionRuleV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PolicyAccessInspectionRuleV2 {
		return vs[0].(map[string]*PolicyAccessInspectionRuleV2)[vs[1].(string)]
	}).(PolicyAccessInspectionRuleV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAccessInspectionRuleV2Input)(nil)).Elem(), &PolicyAccessInspectionRuleV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAccessInspectionRuleV2ArrayInput)(nil)).Elem(), PolicyAccessInspectionRuleV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAccessInspectionRuleV2MapInput)(nil)).Elem(), PolicyAccessInspectionRuleV2Map{})
	pulumi.RegisterOutputType(PolicyAccessInspectionRuleV2Output{})
	pulumi.RegisterOutputType(PolicyAccessInspectionRuleV2ArrayOutput{})
	pulumi.RegisterOutputType(PolicyAccessInspectionRuleV2MapOutput{})
}
