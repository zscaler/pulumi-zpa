// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// Use the **zpa_app_connector_assistant_schedule** data source to get information about Auto Delete frequency of the App Connector for the specified customer in the Zscaler Private Access cloud.
//
// > **NOTE** - The `customerId` attribute is optional and not required during the configuration.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zpa.LookupAssistantSchedule(ctx, &zpa.LookupAssistantScheduleArgs{
//				CustomerId: pulumi.StringRef("1234567891012"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func LookupAssistantSchedule(ctx *pulumi.Context, args *LookupAssistantScheduleArgs, opts ...pulumi.InvokeOption) (*LookupAssistantScheduleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAssistantScheduleResult
	err := ctx.Invoke("zpa:index/getAssistantSchedule:getAssistantSchedule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAssistantSchedule.
type LookupAssistantScheduleArgs struct {
	// The unique identifier of the ZPA tenant.
	CustomerId *string `pulumi:"customerId"`
	// The unique identifier for the App Connector auto deletion configuration for a customer. This field is only required for the PUT request to update the frequency of the App Connector Settings.
	Id *string `pulumi:"id"`
}

// A collection of values returned by getAssistantSchedule.
type LookupAssistantScheduleResult struct {
	CustomerId *string `pulumi:"customerId"`
	// (Boolean) - Indicates if the App Connectors are included for deletion if they are in a disconnected state based on frequencyInterval and frequency values.
	DeleteDisabled bool `pulumi:"deleteDisabled"`
	// (Boolean) - Indicates if the setting for deleting App Connectors is enabled or disabled.
	Enabled bool `pulumi:"enabled"`
	// (String) - The scheduled frequency at which the disconnected App Connectors are deleted. Supported value is: `days`
	Frequency string `pulumi:"frequency"`
	// (String) - The interval for the configured frequency value. The minimum supported value is 5. Supported values are: `5`, `7`, `14`, `30`, `60` and `90`
	FrequencyInterval string  `pulumi:"frequencyInterval"`
	Id                *string `pulumi:"id"`
}

func LookupAssistantScheduleOutput(ctx *pulumi.Context, args LookupAssistantScheduleOutputArgs, opts ...pulumi.InvokeOption) LookupAssistantScheduleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAssistantScheduleResult, error) {
			args := v.(LookupAssistantScheduleArgs)
			r, err := LookupAssistantSchedule(ctx, &args, opts...)
			var s LookupAssistantScheduleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAssistantScheduleResultOutput)
}

// A collection of arguments for invoking getAssistantSchedule.
type LookupAssistantScheduleOutputArgs struct {
	// The unique identifier of the ZPA tenant.
	CustomerId pulumi.StringPtrInput `pulumi:"customerId"`
	// The unique identifier for the App Connector auto deletion configuration for a customer. This field is only required for the PUT request to update the frequency of the App Connector Settings.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LookupAssistantScheduleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAssistantScheduleArgs)(nil)).Elem()
}

// A collection of values returned by getAssistantSchedule.
type LookupAssistantScheduleResultOutput struct{ *pulumi.OutputState }

func (LookupAssistantScheduleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAssistantScheduleResult)(nil)).Elem()
}

func (o LookupAssistantScheduleResultOutput) ToLookupAssistantScheduleResultOutput() LookupAssistantScheduleResultOutput {
	return o
}

func (o LookupAssistantScheduleResultOutput) ToLookupAssistantScheduleResultOutputWithContext(ctx context.Context) LookupAssistantScheduleResultOutput {
	return o
}

func (o LookupAssistantScheduleResultOutput) CustomerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssistantScheduleResult) *string { return v.CustomerId }).(pulumi.StringPtrOutput)
}

// (Boolean) - Indicates if the App Connectors are included for deletion if they are in a disconnected state based on frequencyInterval and frequency values.
func (o LookupAssistantScheduleResultOutput) DeleteDisabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAssistantScheduleResult) bool { return v.DeleteDisabled }).(pulumi.BoolOutput)
}

// (Boolean) - Indicates if the setting for deleting App Connectors is enabled or disabled.
func (o LookupAssistantScheduleResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAssistantScheduleResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// (String) - The scheduled frequency at which the disconnected App Connectors are deleted. Supported value is: `days`
func (o LookupAssistantScheduleResultOutput) Frequency() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssistantScheduleResult) string { return v.Frequency }).(pulumi.StringOutput)
}

// (String) - The interval for the configured frequency value. The minimum supported value is 5. Supported values are: `5`, `7`, `14`, `30`, `60` and `90`
func (o LookupAssistantScheduleResultOutput) FrequencyInterval() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssistantScheduleResult) string { return v.FrequencyInterval }).(pulumi.StringOutput)
}

func (o LookupAssistantScheduleResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssistantScheduleResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAssistantScheduleResultOutput{})
}
