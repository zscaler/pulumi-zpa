// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "zpa:index/appConnectorAssistantSchedule:AppConnectorAssistantSchedule":
		r = &AppConnectorAssistantSchedule{}
	case "zpa:index/applicationSegment:ApplicationSegment":
		r = &ApplicationSegment{}
	case "zpa:index/applicationSegmentBrowserAccess:ApplicationSegmentBrowserAccess":
		r = &ApplicationSegmentBrowserAccess{}
	case "zpa:index/applicationSegmentInspection:ApplicationSegmentInspection":
		r = &ApplicationSegmentInspection{}
	case "zpa:index/applicationSegmentPRA:ApplicationSegmentPRA":
		r = &ApplicationSegmentPRA{}
	case "zpa:index/applicationServer:ApplicationServer":
		r = &ApplicationServer{}
	case "zpa:index/assistantSchedule:AssistantSchedule":
		r = &AssistantSchedule{}
	case "zpa:index/browserAccess:BrowserAccess":
		r = &BrowserAccess{}
	case "zpa:index/browserCertificate:BrowserCertificate":
		r = &BrowserCertificate{}
	case "zpa:index/cloudBrowserIsolationBanner:CloudBrowserIsolationBanner":
		r = &CloudBrowserIsolationBanner{}
	case "zpa:index/cloudBrowserIsolationCertificate:CloudBrowserIsolationCertificate":
		r = &CloudBrowserIsolationCertificate{}
	case "zpa:index/cloudBrowserIsolationExternalProfile:CloudBrowserIsolationExternalProfile":
		r = &CloudBrowserIsolationExternalProfile{}
	case "zpa:index/connectorGroup:ConnectorGroup":
		r = &ConnectorGroup{}
	case "zpa:index/emergencyAccessUser:EmergencyAccessUser":
		r = &EmergencyAccessUser{}
	case "zpa:index/inspectionCustomControls:InspectionCustomControls":
		r = &InspectionCustomControls{}
	case "zpa:index/inspectionProfile:InspectionProfile":
		r = &InspectionProfile{}
	case "zpa:index/lSSConfigController:LSSConfigController":
		r = &LSSConfigController{}
	case "zpa:index/microtenant:Microtenant":
		r = &Microtenant{}
	case "zpa:index/pRAApproval:PRAApproval":
		r = &PRAApproval{}
	case "zpa:index/pRAConsole:PRAConsole":
		r = &PRAConsole{}
	case "zpa:index/pRACredential:PRACredential":
		r = &PRACredential{}
	case "zpa:index/pRAPortal:PRAPortal":
		r = &PRAPortal{}
	case "zpa:index/policyAccessCredentialRule:PolicyAccessCredentialRule":
		r = &PolicyAccessCredentialRule{}
	case "zpa:index/policyAccessForwardingRule:PolicyAccessForwardingRule":
		r = &PolicyAccessForwardingRule{}
	case "zpa:index/policyAccessForwardingRuleV2:PolicyAccessForwardingRuleV2":
		r = &PolicyAccessForwardingRuleV2{}
	case "zpa:index/policyAccessInspectionRule:PolicyAccessInspectionRule":
		r = &PolicyAccessInspectionRule{}
	case "zpa:index/policyAccessInspectionRuleV2:PolicyAccessInspectionRuleV2":
		r = &PolicyAccessInspectionRuleV2{}
	case "zpa:index/policyAccessIsolationRule:PolicyAccessIsolationRule":
		r = &PolicyAccessIsolationRule{}
	case "zpa:index/policyAccessIsolationRuleV2:PolicyAccessIsolationRuleV2":
		r = &PolicyAccessIsolationRuleV2{}
	case "zpa:index/policyAccessReorderRule:PolicyAccessReorderRule":
		r = &PolicyAccessReorderRule{}
	case "zpa:index/policyAccessRule:PolicyAccessRule":
		r = &PolicyAccessRule{}
	case "zpa:index/policyAccessRuleV2:PolicyAccessRuleV2":
		r = &PolicyAccessRuleV2{}
	case "zpa:index/policyAccessTimeOutRule:PolicyAccessTimeOutRule":
		r = &PolicyAccessTimeOutRule{}
	case "zpa:index/policyAccessTimeOutRuleV2:PolicyAccessTimeOutRuleV2":
		r = &PolicyAccessTimeOutRuleV2{}
	case "zpa:index/policyCapabilitiesRule:PolicyCapabilitiesRule":
		r = &PolicyCapabilitiesRule{}
	case "zpa:index/policyCredentialRule:PolicyCredentialRule":
		r = &PolicyCredentialRule{}
	case "zpa:index/policyForwardingRuleV2:PolicyForwardingRuleV2":
		r = &PolicyForwardingRuleV2{}
	case "zpa:index/policyInspectionRuleV2:PolicyInspectionRuleV2":
		r = &PolicyInspectionRuleV2{}
	case "zpa:index/policyIsolationRuleV2:PolicyIsolationRuleV2":
		r = &PolicyIsolationRuleV2{}
	case "zpa:index/policyRedirectionRule:PolicyRedirectionRule":
		r = &PolicyRedirectionRule{}
	case "zpa:index/policyTimeoutRuleV2:PolicyTimeoutRuleV2":
		r = &PolicyTimeoutRuleV2{}
	case "zpa:index/praApprovalController:PraApprovalController":
		r = &PraApprovalController{}
	case "zpa:index/praConsoleController:PraConsoleController":
		r = &PraConsoleController{}
	case "zpa:index/praCredentialController:PraCredentialController":
		r = &PraCredentialController{}
	case "zpa:index/praPortalController:PraPortalController":
		r = &PraPortalController{}
	case "zpa:index/provisioningKey:ProvisioningKey":
		r = &ProvisioningKey{}
	case "zpa:index/segmentGroup:SegmentGroup":
		r = &SegmentGroup{}
	case "zpa:index/serverGroup:ServerGroup":
		r = &ServerGroup{}
	case "zpa:index/serviceEdgeAssistantSchedule:ServiceEdgeAssistantSchedule":
		r = &ServiceEdgeAssistantSchedule{}
	case "zpa:index/serviceEdgeGroup:ServiceEdgeGroup":
		r = &ServiceEdgeGroup{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:zpa" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"zpa",
		"index/appConnectorAssistantSchedule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/applicationSegment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/applicationSegmentBrowserAccess",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/applicationSegmentInspection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/applicationSegmentPRA",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/applicationServer",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/assistantSchedule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/browserAccess",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/browserCertificate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/cloudBrowserIsolationBanner",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/cloudBrowserIsolationCertificate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/cloudBrowserIsolationExternalProfile",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/connectorGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/emergencyAccessUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/inspectionCustomControls",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/inspectionProfile",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/lSSConfigController",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/microtenant",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/pRAApproval",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/pRAConsole",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/pRACredential",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/pRAPortal",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/policyAccessCredentialRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/policyAccessForwardingRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/policyAccessForwardingRuleV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/policyAccessInspectionRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/policyAccessInspectionRuleV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/policyAccessIsolationRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/policyAccessIsolationRuleV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/policyAccessReorderRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/policyAccessRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/policyAccessRuleV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/policyAccessTimeOutRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/policyAccessTimeOutRuleV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/policyCapabilitiesRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/policyCredentialRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/policyForwardingRuleV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/policyInspectionRuleV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/policyIsolationRuleV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/policyRedirectionRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/policyTimeoutRuleV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/praApprovalController",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/praConsoleController",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/praCredentialController",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/praPortalController",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/provisioningKey",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/segmentGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/serverGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/serviceEdgeAssistantSchedule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zpa",
		"index/serviceEdgeGroup",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"zpa",
		&pkg{version},
	)
}
