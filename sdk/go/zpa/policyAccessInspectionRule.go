// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// * [Official documentation](https://help.zscaler.com/zpa/about-security-policy)
// * [API documentation](https://help.zscaler.com/zpa/configuring-appprotection-policies-using-api)
//
// The **zpa_policy_inspection_rule** resource creates a policy inspection access rule in the Zscaler Private Access cloud.
//
//	⚠️ **WARNING:**: The attribute ``ruleOrder`` is now deprecated in favor of the new resource ``PolicyAccessReorderRule`` policyAccessRuleReorder
//
// ## Example Usage
//
// ### 1
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Create Inspection Access Rule
//			_, err := zpa.NewPolicyAccessInspectionRule(ctx, "this", &zpa.PolicyAccessInspectionRuleArgs{
//				Description:            pulumi.String("Example"),
//				Action:                 pulumi.String("INSPECT"),
//				Operator:               pulumi.String("AND"),
//				PolicySetId:            pulumi.Any(data.Zpa_policy_type.Inspection_policy.Id),
//				ZpnInspectionProfileId: pulumi.Any(zpa_inspection_profile.This.Id),
//				Conditions: zpa.PolicyAccessInspectionRuleConditionArray{
//					&zpa.PolicyAccessInspectionRuleConditionArgs{
//						Operator: pulumi.String("OR"),
//						Operands: zpa.PolicyAccessInspectionRuleConditionOperandArray{
//							&zpa.PolicyAccessInspectionRuleConditionOperandArgs{
//								ObjectType: pulumi.String("APP"),
//								Lhs:        pulumi.String("id"),
//								Rhs:        pulumi.Any(zpa_application_segment_inspection.This.Id),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### 2
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			inspectionPolicy, err := zpa.GetPolicyType(ctx, &zpa.GetPolicyTypeArgs{
//				PolicyType: pulumi.StringRef("INSPECTION_POLICY"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			// Create Inspection Access Rule
//			_, err = zpa.NewPolicyAccessInspectionRule(ctx, "this", &zpa.PolicyAccessInspectionRuleArgs{
//				Description: pulumi.String("Example"),
//				Action:      pulumi.String("BYPASS_INSPECT"),
//				RuleOrder:   pulumi.String("1"),
//				Operator:    pulumi.String("AND"),
//				PolicySetId: pulumi.String(inspectionPolicy.Id),
//				Conditions: zpa.PolicyAccessInspectionRuleConditionArray{
//					&zpa.PolicyAccessInspectionRuleConditionArgs{
//						Operator: pulumi.String("OR"),
//						Operands: zpa.PolicyAccessInspectionRuleConditionOperandArray{
//							&zpa.PolicyAccessInspectionRuleConditionOperandArgs{
//								ObjectType: pulumi.String("APP"),
//								Lhs:        pulumi.String("id"),
//								Rhs:        pulumi.Any(zpa_application_segment_inspection.This.Id),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## LHS and RHS Values
//
// | Object Type | LHS| RHS
// |----------|-----------|----------
// | APP | “"id"“ | “applicationSegmentId“ |
// | APP_GROUP | “"id"“ | “segmentGroupId“|
// | CLIENT_TYPE | “"id"“ | “zpnClientTypeZappl“, “zpnClientTypeExporter“, “zpnClientTypeBrowserIsolation“, “zpnClientTypeIpAnchoring“, “zpnClientTypeEdgeConnector“, “zpnClientTypeBranchConnector“,  “zpnClientTypeZappPartner“, “zpnClientTypeZapp“  |
// | EDGE_CONNECTOR_GROUP | “"id"“ | “edgeConnectorId“ |
// | IDP | “"id"“ | “identityProviderId“ |
// | SAML | “samlAttributeId“  | “attributeValueToMatch“ |
// | SCIM | “scimAttributeId“  | “attributeValueToMatch“  |
// | SCIM_GROUP | “scimGroupAttributeId“  | “attributeValueToMatch“  |
// | PLATFORM | “mac“, “ios“, “windows“, “android“, “linux“ | “"true"“ / “"false"“ |
// | MACHINE_GRP | “"id"“ | “machineGroupId“ |
// | POSTURE | “postureUdid“  | “"true"“ / “"false"“ |
// | TRUSTED_NETWORK | “networkId“  | “"true"“ |
//
// ## Import
//
// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZPA configurations into Terraform-compliant HashiCorp Configuration Language.
//
// # Visit
//
// Policy Access Inspection Rule can be imported by using `<POLICY INSPECTION RULE ID>` as the import ID.
//
// For example:
//
// ```sh
// $ pulumi import zpa:index/policyAccessInspectionRule:PolicyAccessInspectionRule example <policy_inspection_rule_id>
// ```
type PolicyAccessInspectionRule struct {
	pulumi.CustomResourceState

	// This is for providing the rule action.
	Action pulumi.StringPtrOutput `pulumi:"action"`
	// This field defines the description of the server.
	ActionId          pulumi.StringPtrOutput `pulumi:"actionId"`
	BypassDefaultRule pulumi.BoolPtrOutput   `pulumi:"bypassDefaultRule"`
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyAccessInspectionRuleConditionArrayOutput `pulumi:"conditions"`
	// This is for providing a customer message for the user.
	CustomMsg pulumi.StringOutput `pulumi:"customMsg"`
	// This is for providing a customer message for the user.
	DefaultRule pulumi.BoolPtrOutput `pulumi:"defaultRule"`
	// This is the description of the access policy.
	Description    pulumi.StringPtrOutput `pulumi:"description"`
	LssDefaultRule pulumi.BoolPtrOutput   `pulumi:"lssDefaultRule"`
	MicrotenantId  pulumi.StringOutput    `pulumi:"microtenantId"`
	// This is the name of the policy.
	Name              pulumi.StringOutput    `pulumi:"name"`
	Operator          pulumi.StringOutput    `pulumi:"operator"`
	PolicySetId       pulumi.StringOutput    `pulumi:"policySetId"`
	PolicyType        pulumi.StringOutput    `pulumi:"policyType"`
	Priority          pulumi.StringOutput    `pulumi:"priority"`
	ReauthDefaultRule pulumi.BoolPtrOutput   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout pulumi.StringPtrOutput `pulumi:"reauthIdleTimeout"`
	ReauthTimeout     pulumi.StringPtrOutput `pulumi:"reauthTimeout"`
	// Deprecated: The `ruleOrder` field is now deprecated for all zpa access policy resources in favor of the resource `PolicyAccessReorderRule`
	RuleOrder              pulumi.StringOutput `pulumi:"ruleOrder"`
	ZpnCbiProfileId        pulumi.StringOutput `pulumi:"zpnCbiProfileId"`
	ZpnInspectionProfileId pulumi.StringOutput `pulumi:"zpnInspectionProfileId"`
	ZpnIsolationProfileId  pulumi.StringOutput `pulumi:"zpnIsolationProfileId"`
}

// NewPolicyAccessInspectionRule registers a new resource with the given unique name, arguments, and options.
func NewPolicyAccessInspectionRule(ctx *pulumi.Context,
	name string, args *PolicyAccessInspectionRuleArgs, opts ...pulumi.ResourceOption) (*PolicyAccessInspectionRule, error) {
	if args == nil {
		args = &PolicyAccessInspectionRuleArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PolicyAccessInspectionRule
	err := ctx.RegisterResource("zpa:index/policyAccessInspectionRule:PolicyAccessInspectionRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyAccessInspectionRule gets an existing PolicyAccessInspectionRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyAccessInspectionRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyAccessInspectionRuleState, opts ...pulumi.ResourceOption) (*PolicyAccessInspectionRule, error) {
	var resource PolicyAccessInspectionRule
	err := ctx.ReadResource("zpa:index/policyAccessInspectionRule:PolicyAccessInspectionRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyAccessInspectionRule resources.
type policyAccessInspectionRuleState struct {
	// This is for providing the rule action.
	Action *string `pulumi:"action"`
	// This field defines the description of the server.
	ActionId          *string `pulumi:"actionId"`
	BypassDefaultRule *bool   `pulumi:"bypassDefaultRule"`
	// This is for proviidng the set of conditions for the policy.
	Conditions []PolicyAccessInspectionRuleCondition `pulumi:"conditions"`
	// This is for providing a customer message for the user.
	CustomMsg *string `pulumi:"customMsg"`
	// This is for providing a customer message for the user.
	DefaultRule *bool `pulumi:"defaultRule"`
	// This is the description of the access policy.
	Description    *string `pulumi:"description"`
	LssDefaultRule *bool   `pulumi:"lssDefaultRule"`
	MicrotenantId  *string `pulumi:"microtenantId"`
	// This is the name of the policy.
	Name              *string `pulumi:"name"`
	Operator          *string `pulumi:"operator"`
	PolicySetId       *string `pulumi:"policySetId"`
	PolicyType        *string `pulumi:"policyType"`
	Priority          *string `pulumi:"priority"`
	ReauthDefaultRule *bool   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout *string `pulumi:"reauthIdleTimeout"`
	ReauthTimeout     *string `pulumi:"reauthTimeout"`
	// Deprecated: The `ruleOrder` field is now deprecated for all zpa access policy resources in favor of the resource `PolicyAccessReorderRule`
	RuleOrder              *string `pulumi:"ruleOrder"`
	ZpnCbiProfileId        *string `pulumi:"zpnCbiProfileId"`
	ZpnInspectionProfileId *string `pulumi:"zpnInspectionProfileId"`
	ZpnIsolationProfileId  *string `pulumi:"zpnIsolationProfileId"`
}

type PolicyAccessInspectionRuleState struct {
	// This is for providing the rule action.
	Action pulumi.StringPtrInput
	// This field defines the description of the server.
	ActionId          pulumi.StringPtrInput
	BypassDefaultRule pulumi.BoolPtrInput
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyAccessInspectionRuleConditionArrayInput
	// This is for providing a customer message for the user.
	CustomMsg pulumi.StringPtrInput
	// This is for providing a customer message for the user.
	DefaultRule pulumi.BoolPtrInput
	// This is the description of the access policy.
	Description    pulumi.StringPtrInput
	LssDefaultRule pulumi.BoolPtrInput
	MicrotenantId  pulumi.StringPtrInput
	// This is the name of the policy.
	Name              pulumi.StringPtrInput
	Operator          pulumi.StringPtrInput
	PolicySetId       pulumi.StringPtrInput
	PolicyType        pulumi.StringPtrInput
	Priority          pulumi.StringPtrInput
	ReauthDefaultRule pulumi.BoolPtrInput
	ReauthIdleTimeout pulumi.StringPtrInput
	ReauthTimeout     pulumi.StringPtrInput
	// Deprecated: The `ruleOrder` field is now deprecated for all zpa access policy resources in favor of the resource `PolicyAccessReorderRule`
	RuleOrder              pulumi.StringPtrInput
	ZpnCbiProfileId        pulumi.StringPtrInput
	ZpnInspectionProfileId pulumi.StringPtrInput
	ZpnIsolationProfileId  pulumi.StringPtrInput
}

func (PolicyAccessInspectionRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyAccessInspectionRuleState)(nil)).Elem()
}

type policyAccessInspectionRuleArgs struct {
	// This is for providing the rule action.
	Action *string `pulumi:"action"`
	// This field defines the description of the server.
	ActionId          *string `pulumi:"actionId"`
	BypassDefaultRule *bool   `pulumi:"bypassDefaultRule"`
	// This is for proviidng the set of conditions for the policy.
	Conditions []PolicyAccessInspectionRuleCondition `pulumi:"conditions"`
	// This is for providing a customer message for the user.
	CustomMsg *string `pulumi:"customMsg"`
	// This is for providing a customer message for the user.
	DefaultRule *bool `pulumi:"defaultRule"`
	// This is the description of the access policy.
	Description    *string `pulumi:"description"`
	LssDefaultRule *bool   `pulumi:"lssDefaultRule"`
	MicrotenantId  *string `pulumi:"microtenantId"`
	// This is the name of the policy.
	Name              *string `pulumi:"name"`
	Operator          *string `pulumi:"operator"`
	PolicySetId       *string `pulumi:"policySetId"`
	PolicyType        *string `pulumi:"policyType"`
	Priority          *string `pulumi:"priority"`
	ReauthDefaultRule *bool   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout *string `pulumi:"reauthIdleTimeout"`
	ReauthTimeout     *string `pulumi:"reauthTimeout"`
	// Deprecated: The `ruleOrder` field is now deprecated for all zpa access policy resources in favor of the resource `PolicyAccessReorderRule`
	RuleOrder              *string `pulumi:"ruleOrder"`
	ZpnCbiProfileId        *string `pulumi:"zpnCbiProfileId"`
	ZpnInspectionProfileId *string `pulumi:"zpnInspectionProfileId"`
	ZpnIsolationProfileId  *string `pulumi:"zpnIsolationProfileId"`
}

// The set of arguments for constructing a PolicyAccessInspectionRule resource.
type PolicyAccessInspectionRuleArgs struct {
	// This is for providing the rule action.
	Action pulumi.StringPtrInput
	// This field defines the description of the server.
	ActionId          pulumi.StringPtrInput
	BypassDefaultRule pulumi.BoolPtrInput
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyAccessInspectionRuleConditionArrayInput
	// This is for providing a customer message for the user.
	CustomMsg pulumi.StringPtrInput
	// This is for providing a customer message for the user.
	DefaultRule pulumi.BoolPtrInput
	// This is the description of the access policy.
	Description    pulumi.StringPtrInput
	LssDefaultRule pulumi.BoolPtrInput
	MicrotenantId  pulumi.StringPtrInput
	// This is the name of the policy.
	Name              pulumi.StringPtrInput
	Operator          pulumi.StringPtrInput
	PolicySetId       pulumi.StringPtrInput
	PolicyType        pulumi.StringPtrInput
	Priority          pulumi.StringPtrInput
	ReauthDefaultRule pulumi.BoolPtrInput
	ReauthIdleTimeout pulumi.StringPtrInput
	ReauthTimeout     pulumi.StringPtrInput
	// Deprecated: The `ruleOrder` field is now deprecated for all zpa access policy resources in favor of the resource `PolicyAccessReorderRule`
	RuleOrder              pulumi.StringPtrInput
	ZpnCbiProfileId        pulumi.StringPtrInput
	ZpnInspectionProfileId pulumi.StringPtrInput
	ZpnIsolationProfileId  pulumi.StringPtrInput
}

func (PolicyAccessInspectionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyAccessInspectionRuleArgs)(nil)).Elem()
}

type PolicyAccessInspectionRuleInput interface {
	pulumi.Input

	ToPolicyAccessInspectionRuleOutput() PolicyAccessInspectionRuleOutput
	ToPolicyAccessInspectionRuleOutputWithContext(ctx context.Context) PolicyAccessInspectionRuleOutput
}

func (*PolicyAccessInspectionRule) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAccessInspectionRule)(nil)).Elem()
}

func (i *PolicyAccessInspectionRule) ToPolicyAccessInspectionRuleOutput() PolicyAccessInspectionRuleOutput {
	return i.ToPolicyAccessInspectionRuleOutputWithContext(context.Background())
}

func (i *PolicyAccessInspectionRule) ToPolicyAccessInspectionRuleOutputWithContext(ctx context.Context) PolicyAccessInspectionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAccessInspectionRuleOutput)
}

// PolicyAccessInspectionRuleArrayInput is an input type that accepts PolicyAccessInspectionRuleArray and PolicyAccessInspectionRuleArrayOutput values.
// You can construct a concrete instance of `PolicyAccessInspectionRuleArrayInput` via:
//
//	PolicyAccessInspectionRuleArray{ PolicyAccessInspectionRuleArgs{...} }
type PolicyAccessInspectionRuleArrayInput interface {
	pulumi.Input

	ToPolicyAccessInspectionRuleArrayOutput() PolicyAccessInspectionRuleArrayOutput
	ToPolicyAccessInspectionRuleArrayOutputWithContext(context.Context) PolicyAccessInspectionRuleArrayOutput
}

type PolicyAccessInspectionRuleArray []PolicyAccessInspectionRuleInput

func (PolicyAccessInspectionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyAccessInspectionRule)(nil)).Elem()
}

func (i PolicyAccessInspectionRuleArray) ToPolicyAccessInspectionRuleArrayOutput() PolicyAccessInspectionRuleArrayOutput {
	return i.ToPolicyAccessInspectionRuleArrayOutputWithContext(context.Background())
}

func (i PolicyAccessInspectionRuleArray) ToPolicyAccessInspectionRuleArrayOutputWithContext(ctx context.Context) PolicyAccessInspectionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAccessInspectionRuleArrayOutput)
}

// PolicyAccessInspectionRuleMapInput is an input type that accepts PolicyAccessInspectionRuleMap and PolicyAccessInspectionRuleMapOutput values.
// You can construct a concrete instance of `PolicyAccessInspectionRuleMapInput` via:
//
//	PolicyAccessInspectionRuleMap{ "key": PolicyAccessInspectionRuleArgs{...} }
type PolicyAccessInspectionRuleMapInput interface {
	pulumi.Input

	ToPolicyAccessInspectionRuleMapOutput() PolicyAccessInspectionRuleMapOutput
	ToPolicyAccessInspectionRuleMapOutputWithContext(context.Context) PolicyAccessInspectionRuleMapOutput
}

type PolicyAccessInspectionRuleMap map[string]PolicyAccessInspectionRuleInput

func (PolicyAccessInspectionRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyAccessInspectionRule)(nil)).Elem()
}

func (i PolicyAccessInspectionRuleMap) ToPolicyAccessInspectionRuleMapOutput() PolicyAccessInspectionRuleMapOutput {
	return i.ToPolicyAccessInspectionRuleMapOutputWithContext(context.Background())
}

func (i PolicyAccessInspectionRuleMap) ToPolicyAccessInspectionRuleMapOutputWithContext(ctx context.Context) PolicyAccessInspectionRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAccessInspectionRuleMapOutput)
}

type PolicyAccessInspectionRuleOutput struct{ *pulumi.OutputState }

func (PolicyAccessInspectionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAccessInspectionRule)(nil)).Elem()
}

func (o PolicyAccessInspectionRuleOutput) ToPolicyAccessInspectionRuleOutput() PolicyAccessInspectionRuleOutput {
	return o
}

func (o PolicyAccessInspectionRuleOutput) ToPolicyAccessInspectionRuleOutputWithContext(ctx context.Context) PolicyAccessInspectionRuleOutput {
	return o
}

// This is for providing the rule action.
func (o PolicyAccessInspectionRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRule) pulumi.StringPtrOutput { return v.Action }).(pulumi.StringPtrOutput)
}

// This field defines the description of the server.
func (o PolicyAccessInspectionRuleOutput) ActionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRule) pulumi.StringPtrOutput { return v.ActionId }).(pulumi.StringPtrOutput)
}

func (o PolicyAccessInspectionRuleOutput) BypassDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRule) pulumi.BoolPtrOutput { return v.BypassDefaultRule }).(pulumi.BoolPtrOutput)
}

// This is for proviidng the set of conditions for the policy.
func (o PolicyAccessInspectionRuleOutput) Conditions() PolicyAccessInspectionRuleConditionArrayOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRule) PolicyAccessInspectionRuleConditionArrayOutput {
		return v.Conditions
	}).(PolicyAccessInspectionRuleConditionArrayOutput)
}

// This is for providing a customer message for the user.
func (o PolicyAccessInspectionRuleOutput) CustomMsg() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRule) pulumi.StringOutput { return v.CustomMsg }).(pulumi.StringOutput)
}

// This is for providing a customer message for the user.
func (o PolicyAccessInspectionRuleOutput) DefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRule) pulumi.BoolPtrOutput { return v.DefaultRule }).(pulumi.BoolPtrOutput)
}

// This is the description of the access policy.
func (o PolicyAccessInspectionRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyAccessInspectionRuleOutput) LssDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRule) pulumi.BoolPtrOutput { return v.LssDefaultRule }).(pulumi.BoolPtrOutput)
}

func (o PolicyAccessInspectionRuleOutput) MicrotenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRule) pulumi.StringOutput { return v.MicrotenantId }).(pulumi.StringOutput)
}

// This is the name of the policy.
func (o PolicyAccessInspectionRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o PolicyAccessInspectionRuleOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRule) pulumi.StringOutput { return v.Operator }).(pulumi.StringOutput)
}

func (o PolicyAccessInspectionRuleOutput) PolicySetId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRule) pulumi.StringOutput { return v.PolicySetId }).(pulumi.StringOutput)
}

func (o PolicyAccessInspectionRuleOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRule) pulumi.StringOutput { return v.PolicyType }).(pulumi.StringOutput)
}

func (o PolicyAccessInspectionRuleOutput) Priority() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRule) pulumi.StringOutput { return v.Priority }).(pulumi.StringOutput)
}

func (o PolicyAccessInspectionRuleOutput) ReauthDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRule) pulumi.BoolPtrOutput { return v.ReauthDefaultRule }).(pulumi.BoolPtrOutput)
}

func (o PolicyAccessInspectionRuleOutput) ReauthIdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRule) pulumi.StringPtrOutput { return v.ReauthIdleTimeout }).(pulumi.StringPtrOutput)
}

func (o PolicyAccessInspectionRuleOutput) ReauthTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRule) pulumi.StringPtrOutput { return v.ReauthTimeout }).(pulumi.StringPtrOutput)
}

// Deprecated: The `ruleOrder` field is now deprecated for all zpa access policy resources in favor of the resource `PolicyAccessReorderRule`
func (o PolicyAccessInspectionRuleOutput) RuleOrder() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRule) pulumi.StringOutput { return v.RuleOrder }).(pulumi.StringOutput)
}

func (o PolicyAccessInspectionRuleOutput) ZpnCbiProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRule) pulumi.StringOutput { return v.ZpnCbiProfileId }).(pulumi.StringOutput)
}

func (o PolicyAccessInspectionRuleOutput) ZpnInspectionProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRule) pulumi.StringOutput { return v.ZpnInspectionProfileId }).(pulumi.StringOutput)
}

func (o PolicyAccessInspectionRuleOutput) ZpnIsolationProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessInspectionRule) pulumi.StringOutput { return v.ZpnIsolationProfileId }).(pulumi.StringOutput)
}

type PolicyAccessInspectionRuleArrayOutput struct{ *pulumi.OutputState }

func (PolicyAccessInspectionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyAccessInspectionRule)(nil)).Elem()
}

func (o PolicyAccessInspectionRuleArrayOutput) ToPolicyAccessInspectionRuleArrayOutput() PolicyAccessInspectionRuleArrayOutput {
	return o
}

func (o PolicyAccessInspectionRuleArrayOutput) ToPolicyAccessInspectionRuleArrayOutputWithContext(ctx context.Context) PolicyAccessInspectionRuleArrayOutput {
	return o
}

func (o PolicyAccessInspectionRuleArrayOutput) Index(i pulumi.IntInput) PolicyAccessInspectionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PolicyAccessInspectionRule {
		return vs[0].([]*PolicyAccessInspectionRule)[vs[1].(int)]
	}).(PolicyAccessInspectionRuleOutput)
}

type PolicyAccessInspectionRuleMapOutput struct{ *pulumi.OutputState }

func (PolicyAccessInspectionRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyAccessInspectionRule)(nil)).Elem()
}

func (o PolicyAccessInspectionRuleMapOutput) ToPolicyAccessInspectionRuleMapOutput() PolicyAccessInspectionRuleMapOutput {
	return o
}

func (o PolicyAccessInspectionRuleMapOutput) ToPolicyAccessInspectionRuleMapOutputWithContext(ctx context.Context) PolicyAccessInspectionRuleMapOutput {
	return o
}

func (o PolicyAccessInspectionRuleMapOutput) MapIndex(k pulumi.StringInput) PolicyAccessInspectionRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PolicyAccessInspectionRule {
		return vs[0].(map[string]*PolicyAccessInspectionRule)[vs[1].(string)]
	}).(PolicyAccessInspectionRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAccessInspectionRuleInput)(nil)).Elem(), &PolicyAccessInspectionRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAccessInspectionRuleArrayInput)(nil)).Elem(), PolicyAccessInspectionRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAccessInspectionRuleMapInput)(nil)).Elem(), PolicyAccessInspectionRuleMap{})
	pulumi.RegisterOutputType(PolicyAccessInspectionRuleOutput{})
	pulumi.RegisterOutputType(PolicyAccessInspectionRuleArrayOutput{})
	pulumi.RegisterOutputType(PolicyAccessInspectionRuleMapOutput{})
}
