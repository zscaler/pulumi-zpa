// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// * [Official documentation](https://help.zscaler.com/zpa/about-privileged-credential-pools)
// * [API documentation](https://help.zscaler.com/zpa/configuring-privileged-credentials-using-api)
//
// The **zpa_pra_credential_pool** data source to get information about a privileged remote access credential pool created in the Zscaler Private Access cloud.
//
// **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
//
// ## Example Usage
//
// # Retrieves PRA Credential Pool By Name
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zpa.LookupPRACredentialPool(ctx, &zpa.LookupPRACredentialPoolArgs{
//				Name: pulumi.StringRef("PRACredentialPool01"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// # Retrieves PRA Credential Pool By ID
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zpa.LookupPRACredentialPool(ctx, &zpa.LookupPRACredentialPoolArgs{
//				Id: pulumi.StringRef("5458"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupPRACredentialPool(ctx *pulumi.Context, args *LookupPRACredentialPoolArgs, opts ...pulumi.InvokeOption) (*LookupPRACredentialPoolResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPRACredentialPoolResult
	err := ctx.Invoke("zpa:index/getPRACredentialPool:getPRACredentialPool", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPRACredentialPool.
type LookupPRACredentialPoolArgs struct {
	Credentials []GetPRACredentialPoolCredential `pulumi:"credentials"`
	Id          *string                          `pulumi:"id"`
	// - (String) The name of the privileged credential.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getPRACredentialPool.
type LookupPRACredentialPoolResult struct {
	CreationTime           string                           `pulumi:"creationTime"`
	CredentialMappingCount string                           `pulumi:"credentialMappingCount"`
	CredentialType         string                           `pulumi:"credentialType"`
	Credentials            []GetPRACredentialPoolCredential `pulumi:"credentials"`
	Id                     *string                          `pulumi:"id"`
	MicrotenantId          string                           `pulumi:"microtenantId"`
	MicrotenantName        string                           `pulumi:"microtenantName"`
	ModifiedBy             string                           `pulumi:"modifiedBy"`
	ModifiedTime           string                           `pulumi:"modifiedTime"`
	// - (String) The name of the privileged credential.
	Name *string `pulumi:"name"`
}

func LookupPRACredentialPoolOutput(ctx *pulumi.Context, args LookupPRACredentialPoolOutputArgs, opts ...pulumi.InvokeOption) LookupPRACredentialPoolResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPRACredentialPoolResultOutput, error) {
			args := v.(LookupPRACredentialPoolArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("zpa:index/getPRACredentialPool:getPRACredentialPool", args, LookupPRACredentialPoolResultOutput{}, options).(LookupPRACredentialPoolResultOutput), nil
		}).(LookupPRACredentialPoolResultOutput)
}

// A collection of arguments for invoking getPRACredentialPool.
type LookupPRACredentialPoolOutputArgs struct {
	Credentials GetPRACredentialPoolCredentialArrayInput `pulumi:"credentials"`
	Id          pulumi.StringPtrInput                    `pulumi:"id"`
	// - (String) The name of the privileged credential.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupPRACredentialPoolOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPRACredentialPoolArgs)(nil)).Elem()
}

// A collection of values returned by getPRACredentialPool.
type LookupPRACredentialPoolResultOutput struct{ *pulumi.OutputState }

func (LookupPRACredentialPoolResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPRACredentialPoolResult)(nil)).Elem()
}

func (o LookupPRACredentialPoolResultOutput) ToLookupPRACredentialPoolResultOutput() LookupPRACredentialPoolResultOutput {
	return o
}

func (o LookupPRACredentialPoolResultOutput) ToLookupPRACredentialPoolResultOutputWithContext(ctx context.Context) LookupPRACredentialPoolResultOutput {
	return o
}

func (o LookupPRACredentialPoolResultOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPRACredentialPoolResult) string { return v.CreationTime }).(pulumi.StringOutput)
}

func (o LookupPRACredentialPoolResultOutput) CredentialMappingCount() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPRACredentialPoolResult) string { return v.CredentialMappingCount }).(pulumi.StringOutput)
}

func (o LookupPRACredentialPoolResultOutput) CredentialType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPRACredentialPoolResult) string { return v.CredentialType }).(pulumi.StringOutput)
}

func (o LookupPRACredentialPoolResultOutput) Credentials() GetPRACredentialPoolCredentialArrayOutput {
	return o.ApplyT(func(v LookupPRACredentialPoolResult) []GetPRACredentialPoolCredential { return v.Credentials }).(GetPRACredentialPoolCredentialArrayOutput)
}

func (o LookupPRACredentialPoolResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPRACredentialPoolResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupPRACredentialPoolResultOutput) MicrotenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPRACredentialPoolResult) string { return v.MicrotenantId }).(pulumi.StringOutput)
}

func (o LookupPRACredentialPoolResultOutput) MicrotenantName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPRACredentialPoolResult) string { return v.MicrotenantName }).(pulumi.StringOutput)
}

func (o LookupPRACredentialPoolResultOutput) ModifiedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPRACredentialPoolResult) string { return v.ModifiedBy }).(pulumi.StringOutput)
}

func (o LookupPRACredentialPoolResultOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPRACredentialPoolResult) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

// - (String) The name of the privileged credential.
func (o LookupPRACredentialPoolResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPRACredentialPoolResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPRACredentialPoolResultOutput{})
}
