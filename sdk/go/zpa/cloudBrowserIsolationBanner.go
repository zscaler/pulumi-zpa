// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// * [Official documentation](https://help.zscaler.com/isolation/adding-banner-theme-isolation-end-user-notification-zpa)
//
// The **zpa_cloud_browser_isolation_banner** resource creates a Cloud Browser Isolation banner. This resource is required as part of the attribute `bannerId` when creating an Cloud Browser Isolation External Profile “CloudBrowserIsolationExternalProfile“
//
// ## Import
//
// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZPA configurations into Terraform-compliant HashiCorp Configuration Language.
//
// # Visit
//
// Application Segment can be imported by using `<BANNER ID>` or `<BANNER NAME>` as the import ID.
//
// ```sh
// $ pulumi import zpa:index/cloudBrowserIsolationBanner:CloudBrowserIsolationBanner example <banner_id>
// ```
//
// or
//
// ```sh
// $ pulumi import zpa:index/cloudBrowserIsolationBanner:CloudBrowserIsolationBanner example <banner_name>
// ```
type CloudBrowserIsolationBanner struct {
	pulumi.CustomResourceState

	Banner            pulumi.BoolOutput      `pulumi:"banner"`
	Logo              pulumi.StringOutput    `pulumi:"logo"`
	Name              pulumi.StringOutput    `pulumi:"name"`
	NotificationText  pulumi.StringPtrOutput `pulumi:"notificationText"`
	NotificationTitle pulumi.StringPtrOutput `pulumi:"notificationTitle"`
	Persist           pulumi.BoolOutput      `pulumi:"persist"`
	PrimaryColor      pulumi.StringPtrOutput `pulumi:"primaryColor"`
	TextColor         pulumi.StringPtrOutput `pulumi:"textColor"`
}

// NewCloudBrowserIsolationBanner registers a new resource with the given unique name, arguments, and options.
func NewCloudBrowserIsolationBanner(ctx *pulumi.Context,
	name string, args *CloudBrowserIsolationBannerArgs, opts ...pulumi.ResourceOption) (*CloudBrowserIsolationBanner, error) {
	if args == nil {
		args = &CloudBrowserIsolationBannerArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CloudBrowserIsolationBanner
	err := ctx.RegisterResource("zpa:index/cloudBrowserIsolationBanner:CloudBrowserIsolationBanner", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudBrowserIsolationBanner gets an existing CloudBrowserIsolationBanner resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudBrowserIsolationBanner(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudBrowserIsolationBannerState, opts ...pulumi.ResourceOption) (*CloudBrowserIsolationBanner, error) {
	var resource CloudBrowserIsolationBanner
	err := ctx.ReadResource("zpa:index/cloudBrowserIsolationBanner:CloudBrowserIsolationBanner", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudBrowserIsolationBanner resources.
type cloudBrowserIsolationBannerState struct {
	Banner            *bool   `pulumi:"banner"`
	Logo              *string `pulumi:"logo"`
	Name              *string `pulumi:"name"`
	NotificationText  *string `pulumi:"notificationText"`
	NotificationTitle *string `pulumi:"notificationTitle"`
	Persist           *bool   `pulumi:"persist"`
	PrimaryColor      *string `pulumi:"primaryColor"`
	TextColor         *string `pulumi:"textColor"`
}

type CloudBrowserIsolationBannerState struct {
	Banner            pulumi.BoolPtrInput
	Logo              pulumi.StringPtrInput
	Name              pulumi.StringPtrInput
	NotificationText  pulumi.StringPtrInput
	NotificationTitle pulumi.StringPtrInput
	Persist           pulumi.BoolPtrInput
	PrimaryColor      pulumi.StringPtrInput
	TextColor         pulumi.StringPtrInput
}

func (CloudBrowserIsolationBannerState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudBrowserIsolationBannerState)(nil)).Elem()
}

type cloudBrowserIsolationBannerArgs struct {
	Banner            *bool   `pulumi:"banner"`
	Logo              *string `pulumi:"logo"`
	Name              *string `pulumi:"name"`
	NotificationText  *string `pulumi:"notificationText"`
	NotificationTitle *string `pulumi:"notificationTitle"`
	Persist           *bool   `pulumi:"persist"`
	PrimaryColor      *string `pulumi:"primaryColor"`
	TextColor         *string `pulumi:"textColor"`
}

// The set of arguments for constructing a CloudBrowserIsolationBanner resource.
type CloudBrowserIsolationBannerArgs struct {
	Banner            pulumi.BoolPtrInput
	Logo              pulumi.StringPtrInput
	Name              pulumi.StringPtrInput
	NotificationText  pulumi.StringPtrInput
	NotificationTitle pulumi.StringPtrInput
	Persist           pulumi.BoolPtrInput
	PrimaryColor      pulumi.StringPtrInput
	TextColor         pulumi.StringPtrInput
}

func (CloudBrowserIsolationBannerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudBrowserIsolationBannerArgs)(nil)).Elem()
}

type CloudBrowserIsolationBannerInput interface {
	pulumi.Input

	ToCloudBrowserIsolationBannerOutput() CloudBrowserIsolationBannerOutput
	ToCloudBrowserIsolationBannerOutputWithContext(ctx context.Context) CloudBrowserIsolationBannerOutput
}

func (*CloudBrowserIsolationBanner) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBrowserIsolationBanner)(nil)).Elem()
}

func (i *CloudBrowserIsolationBanner) ToCloudBrowserIsolationBannerOutput() CloudBrowserIsolationBannerOutput {
	return i.ToCloudBrowserIsolationBannerOutputWithContext(context.Background())
}

func (i *CloudBrowserIsolationBanner) ToCloudBrowserIsolationBannerOutputWithContext(ctx context.Context) CloudBrowserIsolationBannerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBrowserIsolationBannerOutput)
}

// CloudBrowserIsolationBannerArrayInput is an input type that accepts CloudBrowserIsolationBannerArray and CloudBrowserIsolationBannerArrayOutput values.
// You can construct a concrete instance of `CloudBrowserIsolationBannerArrayInput` via:
//
//	CloudBrowserIsolationBannerArray{ CloudBrowserIsolationBannerArgs{...} }
type CloudBrowserIsolationBannerArrayInput interface {
	pulumi.Input

	ToCloudBrowserIsolationBannerArrayOutput() CloudBrowserIsolationBannerArrayOutput
	ToCloudBrowserIsolationBannerArrayOutputWithContext(context.Context) CloudBrowserIsolationBannerArrayOutput
}

type CloudBrowserIsolationBannerArray []CloudBrowserIsolationBannerInput

func (CloudBrowserIsolationBannerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudBrowserIsolationBanner)(nil)).Elem()
}

func (i CloudBrowserIsolationBannerArray) ToCloudBrowserIsolationBannerArrayOutput() CloudBrowserIsolationBannerArrayOutput {
	return i.ToCloudBrowserIsolationBannerArrayOutputWithContext(context.Background())
}

func (i CloudBrowserIsolationBannerArray) ToCloudBrowserIsolationBannerArrayOutputWithContext(ctx context.Context) CloudBrowserIsolationBannerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBrowserIsolationBannerArrayOutput)
}

// CloudBrowserIsolationBannerMapInput is an input type that accepts CloudBrowserIsolationBannerMap and CloudBrowserIsolationBannerMapOutput values.
// You can construct a concrete instance of `CloudBrowserIsolationBannerMapInput` via:
//
//	CloudBrowserIsolationBannerMap{ "key": CloudBrowserIsolationBannerArgs{...} }
type CloudBrowserIsolationBannerMapInput interface {
	pulumi.Input

	ToCloudBrowserIsolationBannerMapOutput() CloudBrowserIsolationBannerMapOutput
	ToCloudBrowserIsolationBannerMapOutputWithContext(context.Context) CloudBrowserIsolationBannerMapOutput
}

type CloudBrowserIsolationBannerMap map[string]CloudBrowserIsolationBannerInput

func (CloudBrowserIsolationBannerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudBrowserIsolationBanner)(nil)).Elem()
}

func (i CloudBrowserIsolationBannerMap) ToCloudBrowserIsolationBannerMapOutput() CloudBrowserIsolationBannerMapOutput {
	return i.ToCloudBrowserIsolationBannerMapOutputWithContext(context.Background())
}

func (i CloudBrowserIsolationBannerMap) ToCloudBrowserIsolationBannerMapOutputWithContext(ctx context.Context) CloudBrowserIsolationBannerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBrowserIsolationBannerMapOutput)
}

type CloudBrowserIsolationBannerOutput struct{ *pulumi.OutputState }

func (CloudBrowserIsolationBannerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBrowserIsolationBanner)(nil)).Elem()
}

func (o CloudBrowserIsolationBannerOutput) ToCloudBrowserIsolationBannerOutput() CloudBrowserIsolationBannerOutput {
	return o
}

func (o CloudBrowserIsolationBannerOutput) ToCloudBrowserIsolationBannerOutputWithContext(ctx context.Context) CloudBrowserIsolationBannerOutput {
	return o
}

func (o CloudBrowserIsolationBannerOutput) Banner() pulumi.BoolOutput {
	return o.ApplyT(func(v *CloudBrowserIsolationBanner) pulumi.BoolOutput { return v.Banner }).(pulumi.BoolOutput)
}

func (o CloudBrowserIsolationBannerOutput) Logo() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudBrowserIsolationBanner) pulumi.StringOutput { return v.Logo }).(pulumi.StringOutput)
}

func (o CloudBrowserIsolationBannerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudBrowserIsolationBanner) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o CloudBrowserIsolationBannerOutput) NotificationText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBrowserIsolationBanner) pulumi.StringPtrOutput { return v.NotificationText }).(pulumi.StringPtrOutput)
}

func (o CloudBrowserIsolationBannerOutput) NotificationTitle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBrowserIsolationBanner) pulumi.StringPtrOutput { return v.NotificationTitle }).(pulumi.StringPtrOutput)
}

func (o CloudBrowserIsolationBannerOutput) Persist() pulumi.BoolOutput {
	return o.ApplyT(func(v *CloudBrowserIsolationBanner) pulumi.BoolOutput { return v.Persist }).(pulumi.BoolOutput)
}

func (o CloudBrowserIsolationBannerOutput) PrimaryColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBrowserIsolationBanner) pulumi.StringPtrOutput { return v.PrimaryColor }).(pulumi.StringPtrOutput)
}

func (o CloudBrowserIsolationBannerOutput) TextColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBrowserIsolationBanner) pulumi.StringPtrOutput { return v.TextColor }).(pulumi.StringPtrOutput)
}

type CloudBrowserIsolationBannerArrayOutput struct{ *pulumi.OutputState }

func (CloudBrowserIsolationBannerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudBrowserIsolationBanner)(nil)).Elem()
}

func (o CloudBrowserIsolationBannerArrayOutput) ToCloudBrowserIsolationBannerArrayOutput() CloudBrowserIsolationBannerArrayOutput {
	return o
}

func (o CloudBrowserIsolationBannerArrayOutput) ToCloudBrowserIsolationBannerArrayOutputWithContext(ctx context.Context) CloudBrowserIsolationBannerArrayOutput {
	return o
}

func (o CloudBrowserIsolationBannerArrayOutput) Index(i pulumi.IntInput) CloudBrowserIsolationBannerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CloudBrowserIsolationBanner {
		return vs[0].([]*CloudBrowserIsolationBanner)[vs[1].(int)]
	}).(CloudBrowserIsolationBannerOutput)
}

type CloudBrowserIsolationBannerMapOutput struct{ *pulumi.OutputState }

func (CloudBrowserIsolationBannerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudBrowserIsolationBanner)(nil)).Elem()
}

func (o CloudBrowserIsolationBannerMapOutput) ToCloudBrowserIsolationBannerMapOutput() CloudBrowserIsolationBannerMapOutput {
	return o
}

func (o CloudBrowserIsolationBannerMapOutput) ToCloudBrowserIsolationBannerMapOutputWithContext(ctx context.Context) CloudBrowserIsolationBannerMapOutput {
	return o
}

func (o CloudBrowserIsolationBannerMapOutput) MapIndex(k pulumi.StringInput) CloudBrowserIsolationBannerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CloudBrowserIsolationBanner {
		return vs[0].(map[string]*CloudBrowserIsolationBanner)[vs[1].(string)]
	}).(CloudBrowserIsolationBannerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBrowserIsolationBannerInput)(nil)).Elem(), &CloudBrowserIsolationBanner{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBrowserIsolationBannerArrayInput)(nil)).Elem(), CloudBrowserIsolationBannerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBrowserIsolationBannerMapInput)(nil)).Elem(), CloudBrowserIsolationBannerMap{})
	pulumi.RegisterOutputType(CloudBrowserIsolationBannerOutput{})
	pulumi.RegisterOutputType(CloudBrowserIsolationBannerArrayOutput{})
	pulumi.RegisterOutputType(CloudBrowserIsolationBannerMapOutput{})
}
