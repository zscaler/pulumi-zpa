// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// * [Official documentation](https://help.zscaler.com/zpa/about-privileged-portals)
// * [API documentation](https://help.zscaler.com/zpa/configuring-privileged-portals-using-api)
//
// Use the **zpa_pra_portal_controller** data source to get information about a privileged remote access portal created in the Zscaler Private Access cloud. This data source can then be referenced in an privileged remote access console resource.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zpa.LookupPRAPortal(ctx, &zpa.LookupPRAPortalArgs{
//				Name: pulumi.StringRef("Example"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func LookupPRAPortal(ctx *pulumi.Context, args *LookupPRAPortalArgs, opts ...pulumi.InvokeOption) (*LookupPRAPortalResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPRAPortalResult
	err := ctx.Invoke("zpa:index/getPRAPortal:getPRAPortal", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPRAPortal.
type LookupPRAPortalArgs struct {
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

// A collection of values returned by getPRAPortal.
type LookupPRAPortalResult struct {
	CertificateId           string  `pulumi:"certificateId"`
	CertificateName         string  `pulumi:"certificateName"`
	Cname                   string  `pulumi:"cname"`
	CreationTime            string  `pulumi:"creationTime"`
	Description             string  `pulumi:"description"`
	Domain                  string  `pulumi:"domain"`
	Enabled                 bool    `pulumi:"enabled"`
	Id                      *string `pulumi:"id"`
	MicrotenantId           string  `pulumi:"microtenantId"`
	MicrotenantName         string  `pulumi:"microtenantName"`
	ModifiedBy              string  `pulumi:"modifiedBy"`
	ModifiedTime            string  `pulumi:"modifiedTime"`
	Name                    *string `pulumi:"name"`
	UserNotification        string  `pulumi:"userNotification"`
	UserNotificationEnabled bool    `pulumi:"userNotificationEnabled"`
}

func LookupPRAPortalOutput(ctx *pulumi.Context, args LookupPRAPortalOutputArgs, opts ...pulumi.InvokeOption) LookupPRAPortalResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPRAPortalResult, error) {
			args := v.(LookupPRAPortalArgs)
			r, err := LookupPRAPortal(ctx, &args, opts...)
			var s LookupPRAPortalResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPRAPortalResultOutput)
}

// A collection of arguments for invoking getPRAPortal.
type LookupPRAPortalOutputArgs struct {
	Id   pulumi.StringPtrInput `pulumi:"id"`
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupPRAPortalOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPRAPortalArgs)(nil)).Elem()
}

// A collection of values returned by getPRAPortal.
type LookupPRAPortalResultOutput struct{ *pulumi.OutputState }

func (LookupPRAPortalResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPRAPortalResult)(nil)).Elem()
}

func (o LookupPRAPortalResultOutput) ToLookupPRAPortalResultOutput() LookupPRAPortalResultOutput {
	return o
}

func (o LookupPRAPortalResultOutput) ToLookupPRAPortalResultOutputWithContext(ctx context.Context) LookupPRAPortalResultOutput {
	return o
}

func (o LookupPRAPortalResultOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPRAPortalResult) string { return v.CertificateId }).(pulumi.StringOutput)
}

func (o LookupPRAPortalResultOutput) CertificateName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPRAPortalResult) string { return v.CertificateName }).(pulumi.StringOutput)
}

func (o LookupPRAPortalResultOutput) Cname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPRAPortalResult) string { return v.Cname }).(pulumi.StringOutput)
}

func (o LookupPRAPortalResultOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPRAPortalResult) string { return v.CreationTime }).(pulumi.StringOutput)
}

func (o LookupPRAPortalResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPRAPortalResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupPRAPortalResultOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPRAPortalResult) string { return v.Domain }).(pulumi.StringOutput)
}

func (o LookupPRAPortalResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPRAPortalResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o LookupPRAPortalResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPRAPortalResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupPRAPortalResultOutput) MicrotenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPRAPortalResult) string { return v.MicrotenantId }).(pulumi.StringOutput)
}

func (o LookupPRAPortalResultOutput) MicrotenantName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPRAPortalResult) string { return v.MicrotenantName }).(pulumi.StringOutput)
}

func (o LookupPRAPortalResultOutput) ModifiedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPRAPortalResult) string { return v.ModifiedBy }).(pulumi.StringOutput)
}

func (o LookupPRAPortalResultOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPRAPortalResult) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o LookupPRAPortalResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPRAPortalResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupPRAPortalResultOutput) UserNotification() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPRAPortalResult) string { return v.UserNotification }).(pulumi.StringOutput)
}

func (o LookupPRAPortalResultOutput) UserNotificationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPRAPortalResult) bool { return v.UserNotificationEnabled }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPRAPortalResultOutput{})
}
