// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// * [Official documentation](https://help.zscaler.com/zpa/about-privileged-capabilities-policy)
// * [API documentation](https://help.zscaler.com/zpa/configuring-privileged-policies-using-api)
//
// The **zpa_policy_capabilities_rule** resource creates a policy capabilities rule in the Zscaler Private Access cloud.
//
//	⚠️ **WARNING:**: The attribute ``ruleOrder`` is now deprecated in favor of the new resource  ``policyAccessRuleReorder``
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			this, err := zpa.GetIdPController(ctx, &zpa.GetIdPControllerArgs{
//				Name: pulumi.StringRef("IdP_Users"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			emailUserSso, err := zpa.GetSAMLAttribute(ctx, &zpa.GetSAMLAttributeArgs{
//				Name:    pulumi.StringRef("Email_IdP_Users"),
//				IdpName: pulumi.StringRef("IdP_Users"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			groupUser, err := zpa.GetSAMLAttribute(ctx, &zpa.GetSAMLAttributeArgs{
//				Name:    pulumi.StringRef("GroupName_IdP_Users"),
//				IdpName: pulumi.StringRef("IdP_Users"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			a000, err := zpa.GetSCIMGroups(ctx, &zpa.GetSCIMGroupsArgs{
//				Name:    pulumi.StringRef("A000"),
//				IdpName: pulumi.StringRef("IdP_Users"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			b000, err := zpa.GetSCIMGroups(ctx, &zpa.GetSCIMGroupsArgs{
//				Name:    pulumi.StringRef("B000"),
//				IdpName: pulumi.StringRef("IdP_Users"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = zpa.NewPolicyAccessCapabilitiesRule(ctx, "this", &zpa.PolicyAccessCapabilitiesRuleArgs{
//				Name:        pulumi.String("Example"),
//				Description: pulumi.String("Example"),
//				Action:      pulumi.String("CHECK_CAPABILITIES"),
//				PrivilegedCapabilities: &zpa.PolicyAccessCapabilitiesRulePrivilegedCapabilitiesArgs{
//					FileUpload:        pulumi.Bool(true),
//					FileDownload:      pulumi.Bool(true),
//					InspectFileUpload: pulumi.Bool(true),
//					ClipboardCopy:     pulumi.Bool(true),
//					ClipboardPaste:    pulumi.Bool(true),
//					RecordSession:     pulumi.Bool(true),
//				},
//				Conditions: zpa.PolicyAccessCapabilitiesRuleConditionArray{
//					&zpa.PolicyAccessCapabilitiesRuleConditionArgs{
//						Operator: pulumi.String("OR"),
//						Operands: zpa.PolicyAccessCapabilitiesRuleConditionOperandArray{
//							&zpa.PolicyAccessCapabilitiesRuleConditionOperandArgs{
//								ObjectType: pulumi.String("SAML"),
//								EntryValues: zpa.PolicyAccessCapabilitiesRuleConditionOperandEntryValueArray{
//									&zpa.PolicyAccessCapabilitiesRuleConditionOperandEntryValueArgs{
//										Rhs: pulumi.String("user1@example.com"),
//										Lhs: pulumi.String(emailUserSso.Id),
//									},
//									&zpa.PolicyAccessCapabilitiesRuleConditionOperandEntryValueArgs{
//										Rhs: pulumi.String("A000"),
//										Lhs: pulumi.String(groupUser.Id),
//									},
//								},
//							},
//							&zpa.PolicyAccessCapabilitiesRuleConditionOperandArgs{
//								ObjectType: pulumi.String("SCIM_GROUP"),
//								EntryValues: zpa.PolicyAccessCapabilitiesRuleConditionOperandEntryValueArray{
//									&zpa.PolicyAccessCapabilitiesRuleConditionOperandEntryValueArgs{
//										Rhs: pulumi.String(a000.Id),
//										Lhs: pulumi.String(this.Id),
//									},
//									&zpa.PolicyAccessCapabilitiesRuleConditionOperandEntryValueArgs{
//										Rhs: pulumi.String(b000.Id),
//										Lhs: pulumi.String(this.Id),
//									},
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## LHS and RHS Values
//
// | Object Type | LHS| RHS| VALUES
// |----------|-----------|----------|----------
// | APP |   |  | “applicationSegmentId“
// | APP_GROUP |   |  | “segmentGroupId“
// | SAML | “samlAttributeId“  | “attributeValueToMatch“ |
// | SCIM | “scimAttributeId“  | “attributeValueToMatch“  |
// | SCIM_GROUP | “scimGroupAttributeId“  | “attributeValueToMatch“  |
//
// ## Import
//
// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZPA configurations into Terraform-compliant HashiCorp Configuration Language.
//
// # Visit
//
// Policy access capability can be imported by using `<RULE ID>` as the import ID.
//
// For example:
//
// ```sh
// $ pulumi import zpa:index/policyAccessCapabilitiesRule:PolicyAccessCapabilitiesRule example <rule_id>
// ```
type PolicyAccessCapabilitiesRule struct {
	pulumi.CustomResourceState

	// This is for providing the rule action. Supported value: `CHECK_CAPABILITIES`
	Action pulumi.StringPtrOutput `pulumi:"action"`
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyAccessCapabilitiesRuleConditionArrayOutput `pulumi:"conditions"`
	// This is the description of the access policy.
	Description   pulumi.StringPtrOutput `pulumi:"description"`
	MicrotenantId pulumi.StringOutput    `pulumi:"microtenantId"`
	// This is the name of the policy rule.
	Name                   pulumi.StringOutput                                      `pulumi:"name"`
	PolicySetId            pulumi.StringOutput                                      `pulumi:"policySetId"`
	PrivilegedCapabilities PolicyAccessCapabilitiesRulePrivilegedCapabilitiesOutput `pulumi:"privilegedCapabilities"`
}

// NewPolicyAccessCapabilitiesRule registers a new resource with the given unique name, arguments, and options.
func NewPolicyAccessCapabilitiesRule(ctx *pulumi.Context,
	name string, args *PolicyAccessCapabilitiesRuleArgs, opts ...pulumi.ResourceOption) (*PolicyAccessCapabilitiesRule, error) {
	if args == nil {
		args = &PolicyAccessCapabilitiesRuleArgs{}
	}

	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("zpa:index/policyCapabilitiesRule:PolicyCapabilitiesRule"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PolicyAccessCapabilitiesRule
	err := ctx.RegisterResource("zpa:index/policyAccessCapabilitiesRule:PolicyAccessCapabilitiesRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyAccessCapabilitiesRule gets an existing PolicyAccessCapabilitiesRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyAccessCapabilitiesRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyAccessCapabilitiesRuleState, opts ...pulumi.ResourceOption) (*PolicyAccessCapabilitiesRule, error) {
	var resource PolicyAccessCapabilitiesRule
	err := ctx.ReadResource("zpa:index/policyAccessCapabilitiesRule:PolicyAccessCapabilitiesRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyAccessCapabilitiesRule resources.
type policyAccessCapabilitiesRuleState struct {
	// This is for providing the rule action. Supported value: `CHECK_CAPABILITIES`
	Action *string `pulumi:"action"`
	// This is for proviidng the set of conditions for the policy.
	Conditions []PolicyAccessCapabilitiesRuleCondition `pulumi:"conditions"`
	// This is the description of the access policy.
	Description   *string `pulumi:"description"`
	MicrotenantId *string `pulumi:"microtenantId"`
	// This is the name of the policy rule.
	Name                   *string                                             `pulumi:"name"`
	PolicySetId            *string                                             `pulumi:"policySetId"`
	PrivilegedCapabilities *PolicyAccessCapabilitiesRulePrivilegedCapabilities `pulumi:"privilegedCapabilities"`
}

type PolicyAccessCapabilitiesRuleState struct {
	// This is for providing the rule action. Supported value: `CHECK_CAPABILITIES`
	Action pulumi.StringPtrInput
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyAccessCapabilitiesRuleConditionArrayInput
	// This is the description of the access policy.
	Description   pulumi.StringPtrInput
	MicrotenantId pulumi.StringPtrInput
	// This is the name of the policy rule.
	Name                   pulumi.StringPtrInput
	PolicySetId            pulumi.StringPtrInput
	PrivilegedCapabilities PolicyAccessCapabilitiesRulePrivilegedCapabilitiesPtrInput
}

func (PolicyAccessCapabilitiesRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyAccessCapabilitiesRuleState)(nil)).Elem()
}

type policyAccessCapabilitiesRuleArgs struct {
	// This is for providing the rule action. Supported value: `CHECK_CAPABILITIES`
	Action *string `pulumi:"action"`
	// This is for proviidng the set of conditions for the policy.
	Conditions []PolicyAccessCapabilitiesRuleCondition `pulumi:"conditions"`
	// This is the description of the access policy.
	Description   *string `pulumi:"description"`
	MicrotenantId *string `pulumi:"microtenantId"`
	// This is the name of the policy rule.
	Name                   *string                                             `pulumi:"name"`
	PrivilegedCapabilities *PolicyAccessCapabilitiesRulePrivilegedCapabilities `pulumi:"privilegedCapabilities"`
}

// The set of arguments for constructing a PolicyAccessCapabilitiesRule resource.
type PolicyAccessCapabilitiesRuleArgs struct {
	// This is for providing the rule action. Supported value: `CHECK_CAPABILITIES`
	Action pulumi.StringPtrInput
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyAccessCapabilitiesRuleConditionArrayInput
	// This is the description of the access policy.
	Description   pulumi.StringPtrInput
	MicrotenantId pulumi.StringPtrInput
	// This is the name of the policy rule.
	Name                   pulumi.StringPtrInput
	PrivilegedCapabilities PolicyAccessCapabilitiesRulePrivilegedCapabilitiesPtrInput
}

func (PolicyAccessCapabilitiesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyAccessCapabilitiesRuleArgs)(nil)).Elem()
}

type PolicyAccessCapabilitiesRuleInput interface {
	pulumi.Input

	ToPolicyAccessCapabilitiesRuleOutput() PolicyAccessCapabilitiesRuleOutput
	ToPolicyAccessCapabilitiesRuleOutputWithContext(ctx context.Context) PolicyAccessCapabilitiesRuleOutput
}

func (*PolicyAccessCapabilitiesRule) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAccessCapabilitiesRule)(nil)).Elem()
}

func (i *PolicyAccessCapabilitiesRule) ToPolicyAccessCapabilitiesRuleOutput() PolicyAccessCapabilitiesRuleOutput {
	return i.ToPolicyAccessCapabilitiesRuleOutputWithContext(context.Background())
}

func (i *PolicyAccessCapabilitiesRule) ToPolicyAccessCapabilitiesRuleOutputWithContext(ctx context.Context) PolicyAccessCapabilitiesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAccessCapabilitiesRuleOutput)
}

// PolicyAccessCapabilitiesRuleArrayInput is an input type that accepts PolicyAccessCapabilitiesRuleArray and PolicyAccessCapabilitiesRuleArrayOutput values.
// You can construct a concrete instance of `PolicyAccessCapabilitiesRuleArrayInput` via:
//
//	PolicyAccessCapabilitiesRuleArray{ PolicyAccessCapabilitiesRuleArgs{...} }
type PolicyAccessCapabilitiesRuleArrayInput interface {
	pulumi.Input

	ToPolicyAccessCapabilitiesRuleArrayOutput() PolicyAccessCapabilitiesRuleArrayOutput
	ToPolicyAccessCapabilitiesRuleArrayOutputWithContext(context.Context) PolicyAccessCapabilitiesRuleArrayOutput
}

type PolicyAccessCapabilitiesRuleArray []PolicyAccessCapabilitiesRuleInput

func (PolicyAccessCapabilitiesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyAccessCapabilitiesRule)(nil)).Elem()
}

func (i PolicyAccessCapabilitiesRuleArray) ToPolicyAccessCapabilitiesRuleArrayOutput() PolicyAccessCapabilitiesRuleArrayOutput {
	return i.ToPolicyAccessCapabilitiesRuleArrayOutputWithContext(context.Background())
}

func (i PolicyAccessCapabilitiesRuleArray) ToPolicyAccessCapabilitiesRuleArrayOutputWithContext(ctx context.Context) PolicyAccessCapabilitiesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAccessCapabilitiesRuleArrayOutput)
}

// PolicyAccessCapabilitiesRuleMapInput is an input type that accepts PolicyAccessCapabilitiesRuleMap and PolicyAccessCapabilitiesRuleMapOutput values.
// You can construct a concrete instance of `PolicyAccessCapabilitiesRuleMapInput` via:
//
//	PolicyAccessCapabilitiesRuleMap{ "key": PolicyAccessCapabilitiesRuleArgs{...} }
type PolicyAccessCapabilitiesRuleMapInput interface {
	pulumi.Input

	ToPolicyAccessCapabilitiesRuleMapOutput() PolicyAccessCapabilitiesRuleMapOutput
	ToPolicyAccessCapabilitiesRuleMapOutputWithContext(context.Context) PolicyAccessCapabilitiesRuleMapOutput
}

type PolicyAccessCapabilitiesRuleMap map[string]PolicyAccessCapabilitiesRuleInput

func (PolicyAccessCapabilitiesRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyAccessCapabilitiesRule)(nil)).Elem()
}

func (i PolicyAccessCapabilitiesRuleMap) ToPolicyAccessCapabilitiesRuleMapOutput() PolicyAccessCapabilitiesRuleMapOutput {
	return i.ToPolicyAccessCapabilitiesRuleMapOutputWithContext(context.Background())
}

func (i PolicyAccessCapabilitiesRuleMap) ToPolicyAccessCapabilitiesRuleMapOutputWithContext(ctx context.Context) PolicyAccessCapabilitiesRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAccessCapabilitiesRuleMapOutput)
}

type PolicyAccessCapabilitiesRuleOutput struct{ *pulumi.OutputState }

func (PolicyAccessCapabilitiesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAccessCapabilitiesRule)(nil)).Elem()
}

func (o PolicyAccessCapabilitiesRuleOutput) ToPolicyAccessCapabilitiesRuleOutput() PolicyAccessCapabilitiesRuleOutput {
	return o
}

func (o PolicyAccessCapabilitiesRuleOutput) ToPolicyAccessCapabilitiesRuleOutputWithContext(ctx context.Context) PolicyAccessCapabilitiesRuleOutput {
	return o
}

// This is for providing the rule action. Supported value: `CHECK_CAPABILITIES`
func (o PolicyAccessCapabilitiesRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAccessCapabilitiesRule) pulumi.StringPtrOutput { return v.Action }).(pulumi.StringPtrOutput)
}

// This is for proviidng the set of conditions for the policy.
func (o PolicyAccessCapabilitiesRuleOutput) Conditions() PolicyAccessCapabilitiesRuleConditionArrayOutput {
	return o.ApplyT(func(v *PolicyAccessCapabilitiesRule) PolicyAccessCapabilitiesRuleConditionArrayOutput {
		return v.Conditions
	}).(PolicyAccessCapabilitiesRuleConditionArrayOutput)
}

// This is the description of the access policy.
func (o PolicyAccessCapabilitiesRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAccessCapabilitiesRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyAccessCapabilitiesRuleOutput) MicrotenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessCapabilitiesRule) pulumi.StringOutput { return v.MicrotenantId }).(pulumi.StringOutput)
}

// This is the name of the policy rule.
func (o PolicyAccessCapabilitiesRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessCapabilitiesRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o PolicyAccessCapabilitiesRuleOutput) PolicySetId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessCapabilitiesRule) pulumi.StringOutput { return v.PolicySetId }).(pulumi.StringOutput)
}

func (o PolicyAccessCapabilitiesRuleOutput) PrivilegedCapabilities() PolicyAccessCapabilitiesRulePrivilegedCapabilitiesOutput {
	return o.ApplyT(func(v *PolicyAccessCapabilitiesRule) PolicyAccessCapabilitiesRulePrivilegedCapabilitiesOutput {
		return v.PrivilegedCapabilities
	}).(PolicyAccessCapabilitiesRulePrivilegedCapabilitiesOutput)
}

type PolicyAccessCapabilitiesRuleArrayOutput struct{ *pulumi.OutputState }

func (PolicyAccessCapabilitiesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyAccessCapabilitiesRule)(nil)).Elem()
}

func (o PolicyAccessCapabilitiesRuleArrayOutput) ToPolicyAccessCapabilitiesRuleArrayOutput() PolicyAccessCapabilitiesRuleArrayOutput {
	return o
}

func (o PolicyAccessCapabilitiesRuleArrayOutput) ToPolicyAccessCapabilitiesRuleArrayOutputWithContext(ctx context.Context) PolicyAccessCapabilitiesRuleArrayOutput {
	return o
}

func (o PolicyAccessCapabilitiesRuleArrayOutput) Index(i pulumi.IntInput) PolicyAccessCapabilitiesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PolicyAccessCapabilitiesRule {
		return vs[0].([]*PolicyAccessCapabilitiesRule)[vs[1].(int)]
	}).(PolicyAccessCapabilitiesRuleOutput)
}

type PolicyAccessCapabilitiesRuleMapOutput struct{ *pulumi.OutputState }

func (PolicyAccessCapabilitiesRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyAccessCapabilitiesRule)(nil)).Elem()
}

func (o PolicyAccessCapabilitiesRuleMapOutput) ToPolicyAccessCapabilitiesRuleMapOutput() PolicyAccessCapabilitiesRuleMapOutput {
	return o
}

func (o PolicyAccessCapabilitiesRuleMapOutput) ToPolicyAccessCapabilitiesRuleMapOutputWithContext(ctx context.Context) PolicyAccessCapabilitiesRuleMapOutput {
	return o
}

func (o PolicyAccessCapabilitiesRuleMapOutput) MapIndex(k pulumi.StringInput) PolicyAccessCapabilitiesRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PolicyAccessCapabilitiesRule {
		return vs[0].(map[string]*PolicyAccessCapabilitiesRule)[vs[1].(string)]
	}).(PolicyAccessCapabilitiesRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAccessCapabilitiesRuleInput)(nil)).Elem(), &PolicyAccessCapabilitiesRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAccessCapabilitiesRuleArrayInput)(nil)).Elem(), PolicyAccessCapabilitiesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAccessCapabilitiesRuleMapInput)(nil)).Elem(), PolicyAccessCapabilitiesRuleMap{})
	pulumi.RegisterOutputType(PolicyAccessCapabilitiesRuleOutput{})
	pulumi.RegisterOutputType(PolicyAccessCapabilitiesRuleArrayOutput{})
	pulumi.RegisterOutputType(PolicyAccessCapabilitiesRuleMapOutput{})
}
