// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// * [Official documentation](https://help.zscaler.com/zpa/configuring-app-connectors-settings)
// * [API documentation](https://help.zscaler.com/zpa/configuring-auto-delete-disconnected-app-connectors-using-api)
//
// Use the **zpa_app_connector_assistant_schedule** resource sets the scheduled frequency at which the disconnected App Connectors are eligible for deletion. The supported value for frequency is days. The frequencyInterval field is the number of days after an App Connector disconnects for it to become eligible for deletion. The minimum supported value for frequencyInterval is 5.
//
// > **NOTE** - When enabling the Assistant Schedule for the first time, you must provide the `customerId` information. If you authenticated using environment variables and used `ZPA_CUSTOMER_ID` environment variable, you don't have to define the customerId attribute in the HCL configuration, and the provider will automatically use the value from the environment variable `ZPA_CUSTOMER_ID`
//
// ## Example Usage
//
// ### Defined Customer ID Value
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zpa.NewAppConnectorAssistantSchedule(ctx, "this", &zpa.AppConnectorAssistantScheduleArgs{
//				CustomerId:        pulumi.String("123456789101112"),
//				Frequency:         pulumi.String("days"),
//				FrequencyInterval: pulumi.String("5"),
//				Enabled:           pulumi.Bool(true),
//				DeleteDisabled:    pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Customer ID Via Environment Variable
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zpa.NewAppConnectorAssistantSchedule(ctx, "this", &zpa.AppConnectorAssistantScheduleArgs{
//				Frequency:         pulumi.String("days"),
//				FrequencyInterval: pulumi.String("5"),
//				Enabled:           pulumi.Bool(true),
//				DeleteDisabled:    pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Import is not currently supported for this resource.
type AppConnectorAssistantSchedule struct {
	pulumi.CustomResourceState

	CustomerId        pulumi.StringOutput    `pulumi:"customerId"`
	DeleteDisabled    pulumi.BoolPtrOutput   `pulumi:"deleteDisabled"`
	Enabled           pulumi.BoolPtrOutput   `pulumi:"enabled"`
	Frequency         pulumi.StringPtrOutput `pulumi:"frequency"`
	FrequencyInterval pulumi.StringPtrOutput `pulumi:"frequencyInterval"`
}

// NewAppConnectorAssistantSchedule registers a new resource with the given unique name, arguments, and options.
func NewAppConnectorAssistantSchedule(ctx *pulumi.Context,
	name string, args *AppConnectorAssistantScheduleArgs, opts ...pulumi.ResourceOption) (*AppConnectorAssistantSchedule, error) {
	if args == nil {
		args = &AppConnectorAssistantScheduleArgs{}
	}

	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("zpa:index/assistantSchedule:AssistantSchedule"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppConnectorAssistantSchedule
	err := ctx.RegisterResource("zpa:index/appConnectorAssistantSchedule:AppConnectorAssistantSchedule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppConnectorAssistantSchedule gets an existing AppConnectorAssistantSchedule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppConnectorAssistantSchedule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppConnectorAssistantScheduleState, opts ...pulumi.ResourceOption) (*AppConnectorAssistantSchedule, error) {
	var resource AppConnectorAssistantSchedule
	err := ctx.ReadResource("zpa:index/appConnectorAssistantSchedule:AppConnectorAssistantSchedule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppConnectorAssistantSchedule resources.
type appConnectorAssistantScheduleState struct {
	CustomerId        *string `pulumi:"customerId"`
	DeleteDisabled    *bool   `pulumi:"deleteDisabled"`
	Enabled           *bool   `pulumi:"enabled"`
	Frequency         *string `pulumi:"frequency"`
	FrequencyInterval *string `pulumi:"frequencyInterval"`
}

type AppConnectorAssistantScheduleState struct {
	CustomerId        pulumi.StringPtrInput
	DeleteDisabled    pulumi.BoolPtrInput
	Enabled           pulumi.BoolPtrInput
	Frequency         pulumi.StringPtrInput
	FrequencyInterval pulumi.StringPtrInput
}

func (AppConnectorAssistantScheduleState) ElementType() reflect.Type {
	return reflect.TypeOf((*appConnectorAssistantScheduleState)(nil)).Elem()
}

type appConnectorAssistantScheduleArgs struct {
	CustomerId        *string `pulumi:"customerId"`
	DeleteDisabled    *bool   `pulumi:"deleteDisabled"`
	Enabled           *bool   `pulumi:"enabled"`
	Frequency         *string `pulumi:"frequency"`
	FrequencyInterval *string `pulumi:"frequencyInterval"`
}

// The set of arguments for constructing a AppConnectorAssistantSchedule resource.
type AppConnectorAssistantScheduleArgs struct {
	CustomerId        pulumi.StringPtrInput
	DeleteDisabled    pulumi.BoolPtrInput
	Enabled           pulumi.BoolPtrInput
	Frequency         pulumi.StringPtrInput
	FrequencyInterval pulumi.StringPtrInput
}

func (AppConnectorAssistantScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appConnectorAssistantScheduleArgs)(nil)).Elem()
}

type AppConnectorAssistantScheduleInput interface {
	pulumi.Input

	ToAppConnectorAssistantScheduleOutput() AppConnectorAssistantScheduleOutput
	ToAppConnectorAssistantScheduleOutputWithContext(ctx context.Context) AppConnectorAssistantScheduleOutput
}

func (*AppConnectorAssistantSchedule) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectorAssistantSchedule)(nil)).Elem()
}

func (i *AppConnectorAssistantSchedule) ToAppConnectorAssistantScheduleOutput() AppConnectorAssistantScheduleOutput {
	return i.ToAppConnectorAssistantScheduleOutputWithContext(context.Background())
}

func (i *AppConnectorAssistantSchedule) ToAppConnectorAssistantScheduleOutputWithContext(ctx context.Context) AppConnectorAssistantScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectorAssistantScheduleOutput)
}

// AppConnectorAssistantScheduleArrayInput is an input type that accepts AppConnectorAssistantScheduleArray and AppConnectorAssistantScheduleArrayOutput values.
// You can construct a concrete instance of `AppConnectorAssistantScheduleArrayInput` via:
//
//	AppConnectorAssistantScheduleArray{ AppConnectorAssistantScheduleArgs{...} }
type AppConnectorAssistantScheduleArrayInput interface {
	pulumi.Input

	ToAppConnectorAssistantScheduleArrayOutput() AppConnectorAssistantScheduleArrayOutput
	ToAppConnectorAssistantScheduleArrayOutputWithContext(context.Context) AppConnectorAssistantScheduleArrayOutput
}

type AppConnectorAssistantScheduleArray []AppConnectorAssistantScheduleInput

func (AppConnectorAssistantScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppConnectorAssistantSchedule)(nil)).Elem()
}

func (i AppConnectorAssistantScheduleArray) ToAppConnectorAssistantScheduleArrayOutput() AppConnectorAssistantScheduleArrayOutput {
	return i.ToAppConnectorAssistantScheduleArrayOutputWithContext(context.Background())
}

func (i AppConnectorAssistantScheduleArray) ToAppConnectorAssistantScheduleArrayOutputWithContext(ctx context.Context) AppConnectorAssistantScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectorAssistantScheduleArrayOutput)
}

// AppConnectorAssistantScheduleMapInput is an input type that accepts AppConnectorAssistantScheduleMap and AppConnectorAssistantScheduleMapOutput values.
// You can construct a concrete instance of `AppConnectorAssistantScheduleMapInput` via:
//
//	AppConnectorAssistantScheduleMap{ "key": AppConnectorAssistantScheduleArgs{...} }
type AppConnectorAssistantScheduleMapInput interface {
	pulumi.Input

	ToAppConnectorAssistantScheduleMapOutput() AppConnectorAssistantScheduleMapOutput
	ToAppConnectorAssistantScheduleMapOutputWithContext(context.Context) AppConnectorAssistantScheduleMapOutput
}

type AppConnectorAssistantScheduleMap map[string]AppConnectorAssistantScheduleInput

func (AppConnectorAssistantScheduleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppConnectorAssistantSchedule)(nil)).Elem()
}

func (i AppConnectorAssistantScheduleMap) ToAppConnectorAssistantScheduleMapOutput() AppConnectorAssistantScheduleMapOutput {
	return i.ToAppConnectorAssistantScheduleMapOutputWithContext(context.Background())
}

func (i AppConnectorAssistantScheduleMap) ToAppConnectorAssistantScheduleMapOutputWithContext(ctx context.Context) AppConnectorAssistantScheduleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectorAssistantScheduleMapOutput)
}

type AppConnectorAssistantScheduleOutput struct{ *pulumi.OutputState }

func (AppConnectorAssistantScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectorAssistantSchedule)(nil)).Elem()
}

func (o AppConnectorAssistantScheduleOutput) ToAppConnectorAssistantScheduleOutput() AppConnectorAssistantScheduleOutput {
	return o
}

func (o AppConnectorAssistantScheduleOutput) ToAppConnectorAssistantScheduleOutputWithContext(ctx context.Context) AppConnectorAssistantScheduleOutput {
	return o
}

func (o AppConnectorAssistantScheduleOutput) CustomerId() pulumi.StringOutput {
	return o.ApplyT(func(v *AppConnectorAssistantSchedule) pulumi.StringOutput { return v.CustomerId }).(pulumi.StringOutput)
}

func (o AppConnectorAssistantScheduleOutput) DeleteDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppConnectorAssistantSchedule) pulumi.BoolPtrOutput { return v.DeleteDisabled }).(pulumi.BoolPtrOutput)
}

func (o AppConnectorAssistantScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppConnectorAssistantSchedule) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o AppConnectorAssistantScheduleOutput) Frequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectorAssistantSchedule) pulumi.StringPtrOutput { return v.Frequency }).(pulumi.StringPtrOutput)
}

func (o AppConnectorAssistantScheduleOutput) FrequencyInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectorAssistantSchedule) pulumi.StringPtrOutput { return v.FrequencyInterval }).(pulumi.StringPtrOutput)
}

type AppConnectorAssistantScheduleArrayOutput struct{ *pulumi.OutputState }

func (AppConnectorAssistantScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppConnectorAssistantSchedule)(nil)).Elem()
}

func (o AppConnectorAssistantScheduleArrayOutput) ToAppConnectorAssistantScheduleArrayOutput() AppConnectorAssistantScheduleArrayOutput {
	return o
}

func (o AppConnectorAssistantScheduleArrayOutput) ToAppConnectorAssistantScheduleArrayOutputWithContext(ctx context.Context) AppConnectorAssistantScheduleArrayOutput {
	return o
}

func (o AppConnectorAssistantScheduleArrayOutput) Index(i pulumi.IntInput) AppConnectorAssistantScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppConnectorAssistantSchedule {
		return vs[0].([]*AppConnectorAssistantSchedule)[vs[1].(int)]
	}).(AppConnectorAssistantScheduleOutput)
}

type AppConnectorAssistantScheduleMapOutput struct{ *pulumi.OutputState }

func (AppConnectorAssistantScheduleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppConnectorAssistantSchedule)(nil)).Elem()
}

func (o AppConnectorAssistantScheduleMapOutput) ToAppConnectorAssistantScheduleMapOutput() AppConnectorAssistantScheduleMapOutput {
	return o
}

func (o AppConnectorAssistantScheduleMapOutput) ToAppConnectorAssistantScheduleMapOutputWithContext(ctx context.Context) AppConnectorAssistantScheduleMapOutput {
	return o
}

func (o AppConnectorAssistantScheduleMapOutput) MapIndex(k pulumi.StringInput) AppConnectorAssistantScheduleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppConnectorAssistantSchedule {
		return vs[0].(map[string]*AppConnectorAssistantSchedule)[vs[1].(string)]
	}).(AppConnectorAssistantScheduleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectorAssistantScheduleInput)(nil)).Elem(), &AppConnectorAssistantSchedule{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectorAssistantScheduleArrayInput)(nil)).Elem(), AppConnectorAssistantScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectorAssistantScheduleMapInput)(nil)).Elem(), AppConnectorAssistantScheduleMap{})
	pulumi.RegisterOutputType(AppConnectorAssistantScheduleOutput{})
	pulumi.RegisterOutputType(AppConnectorAssistantScheduleArrayOutput{})
	pulumi.RegisterOutputType(AppConnectorAssistantScheduleMapOutput{})
}
