// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// * [Official documentation](https://help.zscaler.com/zpa/about-client-forwarding-policy)
// * [API documentation](https://help.zscaler.com/zpa/configuring-client-forwarding-policies-using-api)
//
// The **zpa_policy_forwarding_rule** resource creates a policy forwarding access rule in the Zscaler Private Access cloud.
//
//	⚠️ **WARNING:**: The attribute ``ruleOrder`` is now deprecated in favor of the new resource ``PolicyAccessReorderRule`` policyAccessRuleReorder
//
// ## Import
//
// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZPA configurations into Terraform-compliant HashiCorp Configuration Language.
//
// # Visit
//
// Policy Access Forwarding Rule can be imported by using `<POLICY FORWARDING RULE ID>` as the import ID.
//
// For example:
//
// ```sh
// $ pulumi import zpa:index/policyAccessForwardingRule:PolicyAccessForwardingRule example <policy_forwarding_rule_id>
// ```
type PolicyAccessForwardingRule struct {
	pulumi.CustomResourceState

	// This is for providing the rule action.
	Action pulumi.StringPtrOutput `pulumi:"action"`
	// This field defines the description of the server.
	ActionId          pulumi.StringPtrOutput `pulumi:"actionId"`
	BypassDefaultRule pulumi.BoolPtrOutput   `pulumi:"bypassDefaultRule"`
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyAccessForwardingRuleConditionArrayOutput `pulumi:"conditions"`
	// This is for providing a customer message for the user.
	CustomMsg pulumi.StringOutput `pulumi:"customMsg"`
	// This is for providing a customer message for the user.
	DefaultRule pulumi.BoolPtrOutput `pulumi:"defaultRule"`
	// This is the description of the access policy.
	Description    pulumi.StringPtrOutput `pulumi:"description"`
	LssDefaultRule pulumi.BoolPtrOutput   `pulumi:"lssDefaultRule"`
	MicrotenantId  pulumi.StringOutput    `pulumi:"microtenantId"`
	// This is the name of the policy.
	Name              pulumi.StringOutput    `pulumi:"name"`
	Operator          pulumi.StringOutput    `pulumi:"operator"`
	PolicySetId       pulumi.StringOutput    `pulumi:"policySetId"`
	PolicyType        pulumi.StringOutput    `pulumi:"policyType"`
	Priority          pulumi.StringOutput    `pulumi:"priority"`
	ReauthDefaultRule pulumi.BoolPtrOutput   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout pulumi.StringPtrOutput `pulumi:"reauthIdleTimeout"`
	ReauthTimeout     pulumi.StringPtrOutput `pulumi:"reauthTimeout"`
	// Deprecated: The `ruleOrder` field is now deprecated for all zpa access policy resources in favor of the resource `PolicyAccessReorderRule`
	RuleOrder              pulumi.StringOutput `pulumi:"ruleOrder"`
	ZpnCbiProfileId        pulumi.StringOutput `pulumi:"zpnCbiProfileId"`
	ZpnInspectionProfileId pulumi.StringOutput `pulumi:"zpnInspectionProfileId"`
	ZpnIsolationProfileId  pulumi.StringOutput `pulumi:"zpnIsolationProfileId"`
}

// NewPolicyAccessForwardingRule registers a new resource with the given unique name, arguments, and options.
func NewPolicyAccessForwardingRule(ctx *pulumi.Context,
	name string, args *PolicyAccessForwardingRuleArgs, opts ...pulumi.ResourceOption) (*PolicyAccessForwardingRule, error) {
	if args == nil {
		args = &PolicyAccessForwardingRuleArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PolicyAccessForwardingRule
	err := ctx.RegisterResource("zpa:index/policyAccessForwardingRule:PolicyAccessForwardingRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyAccessForwardingRule gets an existing PolicyAccessForwardingRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyAccessForwardingRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyAccessForwardingRuleState, opts ...pulumi.ResourceOption) (*PolicyAccessForwardingRule, error) {
	var resource PolicyAccessForwardingRule
	err := ctx.ReadResource("zpa:index/policyAccessForwardingRule:PolicyAccessForwardingRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyAccessForwardingRule resources.
type policyAccessForwardingRuleState struct {
	// This is for providing the rule action.
	Action *string `pulumi:"action"`
	// This field defines the description of the server.
	ActionId          *string `pulumi:"actionId"`
	BypassDefaultRule *bool   `pulumi:"bypassDefaultRule"`
	// This is for proviidng the set of conditions for the policy.
	Conditions []PolicyAccessForwardingRuleCondition `pulumi:"conditions"`
	// This is for providing a customer message for the user.
	CustomMsg *string `pulumi:"customMsg"`
	// This is for providing a customer message for the user.
	DefaultRule *bool `pulumi:"defaultRule"`
	// This is the description of the access policy.
	Description    *string `pulumi:"description"`
	LssDefaultRule *bool   `pulumi:"lssDefaultRule"`
	MicrotenantId  *string `pulumi:"microtenantId"`
	// This is the name of the policy.
	Name              *string `pulumi:"name"`
	Operator          *string `pulumi:"operator"`
	PolicySetId       *string `pulumi:"policySetId"`
	PolicyType        *string `pulumi:"policyType"`
	Priority          *string `pulumi:"priority"`
	ReauthDefaultRule *bool   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout *string `pulumi:"reauthIdleTimeout"`
	ReauthTimeout     *string `pulumi:"reauthTimeout"`
	// Deprecated: The `ruleOrder` field is now deprecated for all zpa access policy resources in favor of the resource `PolicyAccessReorderRule`
	RuleOrder              *string `pulumi:"ruleOrder"`
	ZpnCbiProfileId        *string `pulumi:"zpnCbiProfileId"`
	ZpnInspectionProfileId *string `pulumi:"zpnInspectionProfileId"`
	ZpnIsolationProfileId  *string `pulumi:"zpnIsolationProfileId"`
}

type PolicyAccessForwardingRuleState struct {
	// This is for providing the rule action.
	Action pulumi.StringPtrInput
	// This field defines the description of the server.
	ActionId          pulumi.StringPtrInput
	BypassDefaultRule pulumi.BoolPtrInput
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyAccessForwardingRuleConditionArrayInput
	// This is for providing a customer message for the user.
	CustomMsg pulumi.StringPtrInput
	// This is for providing a customer message for the user.
	DefaultRule pulumi.BoolPtrInput
	// This is the description of the access policy.
	Description    pulumi.StringPtrInput
	LssDefaultRule pulumi.BoolPtrInput
	MicrotenantId  pulumi.StringPtrInput
	// This is the name of the policy.
	Name              pulumi.StringPtrInput
	Operator          pulumi.StringPtrInput
	PolicySetId       pulumi.StringPtrInput
	PolicyType        pulumi.StringPtrInput
	Priority          pulumi.StringPtrInput
	ReauthDefaultRule pulumi.BoolPtrInput
	ReauthIdleTimeout pulumi.StringPtrInput
	ReauthTimeout     pulumi.StringPtrInput
	// Deprecated: The `ruleOrder` field is now deprecated for all zpa access policy resources in favor of the resource `PolicyAccessReorderRule`
	RuleOrder              pulumi.StringPtrInput
	ZpnCbiProfileId        pulumi.StringPtrInput
	ZpnInspectionProfileId pulumi.StringPtrInput
	ZpnIsolationProfileId  pulumi.StringPtrInput
}

func (PolicyAccessForwardingRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyAccessForwardingRuleState)(nil)).Elem()
}

type policyAccessForwardingRuleArgs struct {
	// This is for providing the rule action.
	Action *string `pulumi:"action"`
	// This field defines the description of the server.
	ActionId          *string `pulumi:"actionId"`
	BypassDefaultRule *bool   `pulumi:"bypassDefaultRule"`
	// This is for proviidng the set of conditions for the policy.
	Conditions []PolicyAccessForwardingRuleCondition `pulumi:"conditions"`
	// This is for providing a customer message for the user.
	CustomMsg *string `pulumi:"customMsg"`
	// This is for providing a customer message for the user.
	DefaultRule *bool `pulumi:"defaultRule"`
	// This is the description of the access policy.
	Description    *string `pulumi:"description"`
	LssDefaultRule *bool   `pulumi:"lssDefaultRule"`
	MicrotenantId  *string `pulumi:"microtenantId"`
	// This is the name of the policy.
	Name              *string `pulumi:"name"`
	Operator          *string `pulumi:"operator"`
	PolicySetId       *string `pulumi:"policySetId"`
	PolicyType        *string `pulumi:"policyType"`
	Priority          *string `pulumi:"priority"`
	ReauthDefaultRule *bool   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout *string `pulumi:"reauthIdleTimeout"`
	ReauthTimeout     *string `pulumi:"reauthTimeout"`
	// Deprecated: The `ruleOrder` field is now deprecated for all zpa access policy resources in favor of the resource `PolicyAccessReorderRule`
	RuleOrder              *string `pulumi:"ruleOrder"`
	ZpnCbiProfileId        *string `pulumi:"zpnCbiProfileId"`
	ZpnInspectionProfileId *string `pulumi:"zpnInspectionProfileId"`
	ZpnIsolationProfileId  *string `pulumi:"zpnIsolationProfileId"`
}

// The set of arguments for constructing a PolicyAccessForwardingRule resource.
type PolicyAccessForwardingRuleArgs struct {
	// This is for providing the rule action.
	Action pulumi.StringPtrInput
	// This field defines the description of the server.
	ActionId          pulumi.StringPtrInput
	BypassDefaultRule pulumi.BoolPtrInput
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyAccessForwardingRuleConditionArrayInput
	// This is for providing a customer message for the user.
	CustomMsg pulumi.StringPtrInput
	// This is for providing a customer message for the user.
	DefaultRule pulumi.BoolPtrInput
	// This is the description of the access policy.
	Description    pulumi.StringPtrInput
	LssDefaultRule pulumi.BoolPtrInput
	MicrotenantId  pulumi.StringPtrInput
	// This is the name of the policy.
	Name              pulumi.StringPtrInput
	Operator          pulumi.StringPtrInput
	PolicySetId       pulumi.StringPtrInput
	PolicyType        pulumi.StringPtrInput
	Priority          pulumi.StringPtrInput
	ReauthDefaultRule pulumi.BoolPtrInput
	ReauthIdleTimeout pulumi.StringPtrInput
	ReauthTimeout     pulumi.StringPtrInput
	// Deprecated: The `ruleOrder` field is now deprecated for all zpa access policy resources in favor of the resource `PolicyAccessReorderRule`
	RuleOrder              pulumi.StringPtrInput
	ZpnCbiProfileId        pulumi.StringPtrInput
	ZpnInspectionProfileId pulumi.StringPtrInput
	ZpnIsolationProfileId  pulumi.StringPtrInput
}

func (PolicyAccessForwardingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyAccessForwardingRuleArgs)(nil)).Elem()
}

type PolicyAccessForwardingRuleInput interface {
	pulumi.Input

	ToPolicyAccessForwardingRuleOutput() PolicyAccessForwardingRuleOutput
	ToPolicyAccessForwardingRuleOutputWithContext(ctx context.Context) PolicyAccessForwardingRuleOutput
}

func (*PolicyAccessForwardingRule) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAccessForwardingRule)(nil)).Elem()
}

func (i *PolicyAccessForwardingRule) ToPolicyAccessForwardingRuleOutput() PolicyAccessForwardingRuleOutput {
	return i.ToPolicyAccessForwardingRuleOutputWithContext(context.Background())
}

func (i *PolicyAccessForwardingRule) ToPolicyAccessForwardingRuleOutputWithContext(ctx context.Context) PolicyAccessForwardingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAccessForwardingRuleOutput)
}

// PolicyAccessForwardingRuleArrayInput is an input type that accepts PolicyAccessForwardingRuleArray and PolicyAccessForwardingRuleArrayOutput values.
// You can construct a concrete instance of `PolicyAccessForwardingRuleArrayInput` via:
//
//	PolicyAccessForwardingRuleArray{ PolicyAccessForwardingRuleArgs{...} }
type PolicyAccessForwardingRuleArrayInput interface {
	pulumi.Input

	ToPolicyAccessForwardingRuleArrayOutput() PolicyAccessForwardingRuleArrayOutput
	ToPolicyAccessForwardingRuleArrayOutputWithContext(context.Context) PolicyAccessForwardingRuleArrayOutput
}

type PolicyAccessForwardingRuleArray []PolicyAccessForwardingRuleInput

func (PolicyAccessForwardingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyAccessForwardingRule)(nil)).Elem()
}

func (i PolicyAccessForwardingRuleArray) ToPolicyAccessForwardingRuleArrayOutput() PolicyAccessForwardingRuleArrayOutput {
	return i.ToPolicyAccessForwardingRuleArrayOutputWithContext(context.Background())
}

func (i PolicyAccessForwardingRuleArray) ToPolicyAccessForwardingRuleArrayOutputWithContext(ctx context.Context) PolicyAccessForwardingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAccessForwardingRuleArrayOutput)
}

// PolicyAccessForwardingRuleMapInput is an input type that accepts PolicyAccessForwardingRuleMap and PolicyAccessForwardingRuleMapOutput values.
// You can construct a concrete instance of `PolicyAccessForwardingRuleMapInput` via:
//
//	PolicyAccessForwardingRuleMap{ "key": PolicyAccessForwardingRuleArgs{...} }
type PolicyAccessForwardingRuleMapInput interface {
	pulumi.Input

	ToPolicyAccessForwardingRuleMapOutput() PolicyAccessForwardingRuleMapOutput
	ToPolicyAccessForwardingRuleMapOutputWithContext(context.Context) PolicyAccessForwardingRuleMapOutput
}

type PolicyAccessForwardingRuleMap map[string]PolicyAccessForwardingRuleInput

func (PolicyAccessForwardingRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyAccessForwardingRule)(nil)).Elem()
}

func (i PolicyAccessForwardingRuleMap) ToPolicyAccessForwardingRuleMapOutput() PolicyAccessForwardingRuleMapOutput {
	return i.ToPolicyAccessForwardingRuleMapOutputWithContext(context.Background())
}

func (i PolicyAccessForwardingRuleMap) ToPolicyAccessForwardingRuleMapOutputWithContext(ctx context.Context) PolicyAccessForwardingRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAccessForwardingRuleMapOutput)
}

type PolicyAccessForwardingRuleOutput struct{ *pulumi.OutputState }

func (PolicyAccessForwardingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAccessForwardingRule)(nil)).Elem()
}

func (o PolicyAccessForwardingRuleOutput) ToPolicyAccessForwardingRuleOutput() PolicyAccessForwardingRuleOutput {
	return o
}

func (o PolicyAccessForwardingRuleOutput) ToPolicyAccessForwardingRuleOutputWithContext(ctx context.Context) PolicyAccessForwardingRuleOutput {
	return o
}

// This is for providing the rule action.
func (o PolicyAccessForwardingRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAccessForwardingRule) pulumi.StringPtrOutput { return v.Action }).(pulumi.StringPtrOutput)
}

// This field defines the description of the server.
func (o PolicyAccessForwardingRuleOutput) ActionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAccessForwardingRule) pulumi.StringPtrOutput { return v.ActionId }).(pulumi.StringPtrOutput)
}

func (o PolicyAccessForwardingRuleOutput) BypassDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyAccessForwardingRule) pulumi.BoolPtrOutput { return v.BypassDefaultRule }).(pulumi.BoolPtrOutput)
}

// This is for proviidng the set of conditions for the policy.
func (o PolicyAccessForwardingRuleOutput) Conditions() PolicyAccessForwardingRuleConditionArrayOutput {
	return o.ApplyT(func(v *PolicyAccessForwardingRule) PolicyAccessForwardingRuleConditionArrayOutput {
		return v.Conditions
	}).(PolicyAccessForwardingRuleConditionArrayOutput)
}

// This is for providing a customer message for the user.
func (o PolicyAccessForwardingRuleOutput) CustomMsg() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessForwardingRule) pulumi.StringOutput { return v.CustomMsg }).(pulumi.StringOutput)
}

// This is for providing a customer message for the user.
func (o PolicyAccessForwardingRuleOutput) DefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyAccessForwardingRule) pulumi.BoolPtrOutput { return v.DefaultRule }).(pulumi.BoolPtrOutput)
}

// This is the description of the access policy.
func (o PolicyAccessForwardingRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAccessForwardingRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyAccessForwardingRuleOutput) LssDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyAccessForwardingRule) pulumi.BoolPtrOutput { return v.LssDefaultRule }).(pulumi.BoolPtrOutput)
}

func (o PolicyAccessForwardingRuleOutput) MicrotenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessForwardingRule) pulumi.StringOutput { return v.MicrotenantId }).(pulumi.StringOutput)
}

// This is the name of the policy.
func (o PolicyAccessForwardingRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessForwardingRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o PolicyAccessForwardingRuleOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessForwardingRule) pulumi.StringOutput { return v.Operator }).(pulumi.StringOutput)
}

func (o PolicyAccessForwardingRuleOutput) PolicySetId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessForwardingRule) pulumi.StringOutput { return v.PolicySetId }).(pulumi.StringOutput)
}

func (o PolicyAccessForwardingRuleOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessForwardingRule) pulumi.StringOutput { return v.PolicyType }).(pulumi.StringOutput)
}

func (o PolicyAccessForwardingRuleOutput) Priority() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessForwardingRule) pulumi.StringOutput { return v.Priority }).(pulumi.StringOutput)
}

func (o PolicyAccessForwardingRuleOutput) ReauthDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyAccessForwardingRule) pulumi.BoolPtrOutput { return v.ReauthDefaultRule }).(pulumi.BoolPtrOutput)
}

func (o PolicyAccessForwardingRuleOutput) ReauthIdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAccessForwardingRule) pulumi.StringPtrOutput { return v.ReauthIdleTimeout }).(pulumi.StringPtrOutput)
}

func (o PolicyAccessForwardingRuleOutput) ReauthTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAccessForwardingRule) pulumi.StringPtrOutput { return v.ReauthTimeout }).(pulumi.StringPtrOutput)
}

// Deprecated: The `ruleOrder` field is now deprecated for all zpa access policy resources in favor of the resource `PolicyAccessReorderRule`
func (o PolicyAccessForwardingRuleOutput) RuleOrder() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessForwardingRule) pulumi.StringOutput { return v.RuleOrder }).(pulumi.StringOutput)
}

func (o PolicyAccessForwardingRuleOutput) ZpnCbiProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessForwardingRule) pulumi.StringOutput { return v.ZpnCbiProfileId }).(pulumi.StringOutput)
}

func (o PolicyAccessForwardingRuleOutput) ZpnInspectionProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessForwardingRule) pulumi.StringOutput { return v.ZpnInspectionProfileId }).(pulumi.StringOutput)
}

func (o PolicyAccessForwardingRuleOutput) ZpnIsolationProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessForwardingRule) pulumi.StringOutput { return v.ZpnIsolationProfileId }).(pulumi.StringOutput)
}

type PolicyAccessForwardingRuleArrayOutput struct{ *pulumi.OutputState }

func (PolicyAccessForwardingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyAccessForwardingRule)(nil)).Elem()
}

func (o PolicyAccessForwardingRuleArrayOutput) ToPolicyAccessForwardingRuleArrayOutput() PolicyAccessForwardingRuleArrayOutput {
	return o
}

func (o PolicyAccessForwardingRuleArrayOutput) ToPolicyAccessForwardingRuleArrayOutputWithContext(ctx context.Context) PolicyAccessForwardingRuleArrayOutput {
	return o
}

func (o PolicyAccessForwardingRuleArrayOutput) Index(i pulumi.IntInput) PolicyAccessForwardingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PolicyAccessForwardingRule {
		return vs[0].([]*PolicyAccessForwardingRule)[vs[1].(int)]
	}).(PolicyAccessForwardingRuleOutput)
}

type PolicyAccessForwardingRuleMapOutput struct{ *pulumi.OutputState }

func (PolicyAccessForwardingRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyAccessForwardingRule)(nil)).Elem()
}

func (o PolicyAccessForwardingRuleMapOutput) ToPolicyAccessForwardingRuleMapOutput() PolicyAccessForwardingRuleMapOutput {
	return o
}

func (o PolicyAccessForwardingRuleMapOutput) ToPolicyAccessForwardingRuleMapOutputWithContext(ctx context.Context) PolicyAccessForwardingRuleMapOutput {
	return o
}

func (o PolicyAccessForwardingRuleMapOutput) MapIndex(k pulumi.StringInput) PolicyAccessForwardingRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PolicyAccessForwardingRule {
		return vs[0].(map[string]*PolicyAccessForwardingRule)[vs[1].(string)]
	}).(PolicyAccessForwardingRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAccessForwardingRuleInput)(nil)).Elem(), &PolicyAccessForwardingRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAccessForwardingRuleArrayInput)(nil)).Elem(), PolicyAccessForwardingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAccessForwardingRuleMapInput)(nil)).Elem(), PolicyAccessForwardingRuleMap{})
	pulumi.RegisterOutputType(PolicyAccessForwardingRuleOutput{})
	pulumi.RegisterOutputType(PolicyAccessForwardingRuleArrayOutput{})
	pulumi.RegisterOutputType(PolicyAccessForwardingRuleMapOutput{})
}
