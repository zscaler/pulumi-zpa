// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// Deprecated: zpa.index/policyinspectionrulev2.PolicyInspectionRuleV2 has been deprecated in favor of zpa.index/policyaccessinspectionrulev2.PolicyAccessInspectionRuleV2
type PolicyInspectionRuleV2 struct {
	pulumi.CustomResourceState

	// This is for providing the rule action.
	Action pulumi.StringPtrOutput `pulumi:"action"`
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyInspectionRuleV2ConditionArrayOutput `pulumi:"conditions"`
	// This is the description of the access policy.
	Description   pulumi.StringPtrOutput `pulumi:"description"`
	MicrotenantId pulumi.StringOutput    `pulumi:"microtenantId"`
	// This is the name of the policy.
	Name                   pulumi.StringOutput `pulumi:"name"`
	PolicySetId            pulumi.StringOutput `pulumi:"policySetId"`
	ZpnInspectionProfileId pulumi.StringOutput `pulumi:"zpnInspectionProfileId"`
}

// NewPolicyInspectionRuleV2 registers a new resource with the given unique name, arguments, and options.
func NewPolicyInspectionRuleV2(ctx *pulumi.Context,
	name string, args *PolicyInspectionRuleV2Args, opts ...pulumi.ResourceOption) (*PolicyInspectionRuleV2, error) {
	if args == nil {
		args = &PolicyInspectionRuleV2Args{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PolicyInspectionRuleV2
	err := ctx.RegisterResource("zpa:index/policyInspectionRuleV2:PolicyInspectionRuleV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyInspectionRuleV2 gets an existing PolicyInspectionRuleV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyInspectionRuleV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyInspectionRuleV2State, opts ...pulumi.ResourceOption) (*PolicyInspectionRuleV2, error) {
	var resource PolicyInspectionRuleV2
	err := ctx.ReadResource("zpa:index/policyInspectionRuleV2:PolicyInspectionRuleV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyInspectionRuleV2 resources.
type policyInspectionRuleV2State struct {
	// This is for providing the rule action.
	Action *string `pulumi:"action"`
	// This is for proviidng the set of conditions for the policy.
	Conditions []PolicyInspectionRuleV2Condition `pulumi:"conditions"`
	// This is the description of the access policy.
	Description   *string `pulumi:"description"`
	MicrotenantId *string `pulumi:"microtenantId"`
	// This is the name of the policy.
	Name                   *string `pulumi:"name"`
	PolicySetId            *string `pulumi:"policySetId"`
	ZpnInspectionProfileId *string `pulumi:"zpnInspectionProfileId"`
}

type PolicyInspectionRuleV2State struct {
	// This is for providing the rule action.
	Action pulumi.StringPtrInput
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyInspectionRuleV2ConditionArrayInput
	// This is the description of the access policy.
	Description   pulumi.StringPtrInput
	MicrotenantId pulumi.StringPtrInput
	// This is the name of the policy.
	Name                   pulumi.StringPtrInput
	PolicySetId            pulumi.StringPtrInput
	ZpnInspectionProfileId pulumi.StringPtrInput
}

func (PolicyInspectionRuleV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*policyInspectionRuleV2State)(nil)).Elem()
}

type policyInspectionRuleV2Args struct {
	// This is for providing the rule action.
	Action *string `pulumi:"action"`
	// This is for proviidng the set of conditions for the policy.
	Conditions []PolicyInspectionRuleV2Condition `pulumi:"conditions"`
	// This is the description of the access policy.
	Description   *string `pulumi:"description"`
	MicrotenantId *string `pulumi:"microtenantId"`
	// This is the name of the policy.
	Name                   *string `pulumi:"name"`
	ZpnInspectionProfileId *string `pulumi:"zpnInspectionProfileId"`
}

// The set of arguments for constructing a PolicyInspectionRuleV2 resource.
type PolicyInspectionRuleV2Args struct {
	// This is for providing the rule action.
	Action pulumi.StringPtrInput
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyInspectionRuleV2ConditionArrayInput
	// This is the description of the access policy.
	Description   pulumi.StringPtrInput
	MicrotenantId pulumi.StringPtrInput
	// This is the name of the policy.
	Name                   pulumi.StringPtrInput
	ZpnInspectionProfileId pulumi.StringPtrInput
}

func (PolicyInspectionRuleV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*policyInspectionRuleV2Args)(nil)).Elem()
}

type PolicyInspectionRuleV2Input interface {
	pulumi.Input

	ToPolicyInspectionRuleV2Output() PolicyInspectionRuleV2Output
	ToPolicyInspectionRuleV2OutputWithContext(ctx context.Context) PolicyInspectionRuleV2Output
}

func (*PolicyInspectionRuleV2) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyInspectionRuleV2)(nil)).Elem()
}

func (i *PolicyInspectionRuleV2) ToPolicyInspectionRuleV2Output() PolicyInspectionRuleV2Output {
	return i.ToPolicyInspectionRuleV2OutputWithContext(context.Background())
}

func (i *PolicyInspectionRuleV2) ToPolicyInspectionRuleV2OutputWithContext(ctx context.Context) PolicyInspectionRuleV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInspectionRuleV2Output)
}

// PolicyInspectionRuleV2ArrayInput is an input type that accepts PolicyInspectionRuleV2Array and PolicyInspectionRuleV2ArrayOutput values.
// You can construct a concrete instance of `PolicyInspectionRuleV2ArrayInput` via:
//
//	PolicyInspectionRuleV2Array{ PolicyInspectionRuleV2Args{...} }
type PolicyInspectionRuleV2ArrayInput interface {
	pulumi.Input

	ToPolicyInspectionRuleV2ArrayOutput() PolicyInspectionRuleV2ArrayOutput
	ToPolicyInspectionRuleV2ArrayOutputWithContext(context.Context) PolicyInspectionRuleV2ArrayOutput
}

type PolicyInspectionRuleV2Array []PolicyInspectionRuleV2Input

func (PolicyInspectionRuleV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyInspectionRuleV2)(nil)).Elem()
}

func (i PolicyInspectionRuleV2Array) ToPolicyInspectionRuleV2ArrayOutput() PolicyInspectionRuleV2ArrayOutput {
	return i.ToPolicyInspectionRuleV2ArrayOutputWithContext(context.Background())
}

func (i PolicyInspectionRuleV2Array) ToPolicyInspectionRuleV2ArrayOutputWithContext(ctx context.Context) PolicyInspectionRuleV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInspectionRuleV2ArrayOutput)
}

// PolicyInspectionRuleV2MapInput is an input type that accepts PolicyInspectionRuleV2Map and PolicyInspectionRuleV2MapOutput values.
// You can construct a concrete instance of `PolicyInspectionRuleV2MapInput` via:
//
//	PolicyInspectionRuleV2Map{ "key": PolicyInspectionRuleV2Args{...} }
type PolicyInspectionRuleV2MapInput interface {
	pulumi.Input

	ToPolicyInspectionRuleV2MapOutput() PolicyInspectionRuleV2MapOutput
	ToPolicyInspectionRuleV2MapOutputWithContext(context.Context) PolicyInspectionRuleV2MapOutput
}

type PolicyInspectionRuleV2Map map[string]PolicyInspectionRuleV2Input

func (PolicyInspectionRuleV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyInspectionRuleV2)(nil)).Elem()
}

func (i PolicyInspectionRuleV2Map) ToPolicyInspectionRuleV2MapOutput() PolicyInspectionRuleV2MapOutput {
	return i.ToPolicyInspectionRuleV2MapOutputWithContext(context.Background())
}

func (i PolicyInspectionRuleV2Map) ToPolicyInspectionRuleV2MapOutputWithContext(ctx context.Context) PolicyInspectionRuleV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInspectionRuleV2MapOutput)
}

type PolicyInspectionRuleV2Output struct{ *pulumi.OutputState }

func (PolicyInspectionRuleV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyInspectionRuleV2)(nil)).Elem()
}

func (o PolicyInspectionRuleV2Output) ToPolicyInspectionRuleV2Output() PolicyInspectionRuleV2Output {
	return o
}

func (o PolicyInspectionRuleV2Output) ToPolicyInspectionRuleV2OutputWithContext(ctx context.Context) PolicyInspectionRuleV2Output {
	return o
}

// This is for providing the rule action.
func (o PolicyInspectionRuleV2Output) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyInspectionRuleV2) pulumi.StringPtrOutput { return v.Action }).(pulumi.StringPtrOutput)
}

// This is for proviidng the set of conditions for the policy.
func (o PolicyInspectionRuleV2Output) Conditions() PolicyInspectionRuleV2ConditionArrayOutput {
	return o.ApplyT(func(v *PolicyInspectionRuleV2) PolicyInspectionRuleV2ConditionArrayOutput { return v.Conditions }).(PolicyInspectionRuleV2ConditionArrayOutput)
}

// This is the description of the access policy.
func (o PolicyInspectionRuleV2Output) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyInspectionRuleV2) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyInspectionRuleV2Output) MicrotenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyInspectionRuleV2) pulumi.StringOutput { return v.MicrotenantId }).(pulumi.StringOutput)
}

// This is the name of the policy.
func (o PolicyInspectionRuleV2Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyInspectionRuleV2) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o PolicyInspectionRuleV2Output) PolicySetId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyInspectionRuleV2) pulumi.StringOutput { return v.PolicySetId }).(pulumi.StringOutput)
}

func (o PolicyInspectionRuleV2Output) ZpnInspectionProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyInspectionRuleV2) pulumi.StringOutput { return v.ZpnInspectionProfileId }).(pulumi.StringOutput)
}

type PolicyInspectionRuleV2ArrayOutput struct{ *pulumi.OutputState }

func (PolicyInspectionRuleV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyInspectionRuleV2)(nil)).Elem()
}

func (o PolicyInspectionRuleV2ArrayOutput) ToPolicyInspectionRuleV2ArrayOutput() PolicyInspectionRuleV2ArrayOutput {
	return o
}

func (o PolicyInspectionRuleV2ArrayOutput) ToPolicyInspectionRuleV2ArrayOutputWithContext(ctx context.Context) PolicyInspectionRuleV2ArrayOutput {
	return o
}

func (o PolicyInspectionRuleV2ArrayOutput) Index(i pulumi.IntInput) PolicyInspectionRuleV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PolicyInspectionRuleV2 {
		return vs[0].([]*PolicyInspectionRuleV2)[vs[1].(int)]
	}).(PolicyInspectionRuleV2Output)
}

type PolicyInspectionRuleV2MapOutput struct{ *pulumi.OutputState }

func (PolicyInspectionRuleV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyInspectionRuleV2)(nil)).Elem()
}

func (o PolicyInspectionRuleV2MapOutput) ToPolicyInspectionRuleV2MapOutput() PolicyInspectionRuleV2MapOutput {
	return o
}

func (o PolicyInspectionRuleV2MapOutput) ToPolicyInspectionRuleV2MapOutputWithContext(ctx context.Context) PolicyInspectionRuleV2MapOutput {
	return o
}

func (o PolicyInspectionRuleV2MapOutput) MapIndex(k pulumi.StringInput) PolicyInspectionRuleV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PolicyInspectionRuleV2 {
		return vs[0].(map[string]*PolicyInspectionRuleV2)[vs[1].(string)]
	}).(PolicyInspectionRuleV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInspectionRuleV2Input)(nil)).Elem(), &PolicyInspectionRuleV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInspectionRuleV2ArrayInput)(nil)).Elem(), PolicyInspectionRuleV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInspectionRuleV2MapInput)(nil)).Elem(), PolicyInspectionRuleV2Map{})
	pulumi.RegisterOutputType(PolicyInspectionRuleV2Output{})
	pulumi.RegisterOutputType(PolicyInspectionRuleV2ArrayOutput{})
	pulumi.RegisterOutputType(PolicyInspectionRuleV2MapOutput{})
}
