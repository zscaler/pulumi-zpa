// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// * [Official documentation](https://help.zscaler.com/zpa/about-enrollment-ca-certificates)
// * [API documentation](https://help.zscaler.com/zpa/obtaining-enrollment-certificate-details-using-api)
//
// Use the **zpa_enrollment_cert** data source to get information about all configured enrollment certificate details created in the Zscaler Private Access cloud. This data source is required when creating provisioning key resources.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zpa.GetEnrollmentCert(ctx, &zpa.GetEnrollmentCertArgs{
//				Name: pulumi.StringRef("Root"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = zpa.GetEnrollmentCert(ctx, &zpa.GetEnrollmentCertArgs{
//				Name: pulumi.StringRef("Client"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = zpa.GetEnrollmentCert(ctx, &zpa.GetEnrollmentCertArgs{
//				Name: pulumi.StringRef("Connector"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = zpa.GetEnrollmentCert(ctx, &zpa.GetEnrollmentCertArgs{
//				Name: pulumi.StringRef("Service Edge"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = zpa.GetEnrollmentCert(ctx, &zpa.GetEnrollmentCertArgs{
//				Name: pulumi.StringRef("Isolation Client"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetEnrollmentCert(ctx *pulumi.Context, args *GetEnrollmentCertArgs, opts ...pulumi.InvokeOption) (*GetEnrollmentCertResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEnrollmentCertResult
	err := ctx.Invoke("zpa:index/getEnrollmentCert:getEnrollmentCert", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEnrollmentCert.
type GetEnrollmentCertArgs struct {
	Id            *string `pulumi:"id"`
	MicrotenantId *string `pulumi:"microtenantId"`
	Name          *string `pulumi:"name"`
}

// A collection of values returned by getEnrollmentCert.
type GetEnrollmentCertResult struct {
	AllowSigning            bool    `pulumi:"allowSigning"`
	Certificate             string  `pulumi:"certificate"`
	ClientCertType          string  `pulumi:"clientCertType"`
	Cname                   string  `pulumi:"cname"`
	CreationTime            string  `pulumi:"creationTime"`
	Csr                     string  `pulumi:"csr"`
	Description             string  `pulumi:"description"`
	Id                      *string `pulumi:"id"`
	IssuedBy                string  `pulumi:"issuedBy"`
	IssuedTo                string  `pulumi:"issuedTo"`
	MicrotenantId           *string `pulumi:"microtenantId"`
	ModifiedBy              string  `pulumi:"modifiedBy"`
	ModifiedTime            string  `pulumi:"modifiedTime"`
	Name                    *string `pulumi:"name"`
	ParentCertId            string  `pulumi:"parentCertId"`
	ParentCertName          string  `pulumi:"parentCertName"`
	PrivateKey              string  `pulumi:"privateKey"`
	PrivateKeyPresent       bool    `pulumi:"privateKeyPresent"`
	SerialNo                string  `pulumi:"serialNo"`
	ValidFromInEpochSec     string  `pulumi:"validFromInEpochSec"`
	ValidToInEpochSec       string  `pulumi:"validToInEpochSec"`
	ZrsaEncryptedPrivateKey string  `pulumi:"zrsaEncryptedPrivateKey"`
	ZrsaEncryptedSessionKey string  `pulumi:"zrsaEncryptedSessionKey"`
}

func GetEnrollmentCertOutput(ctx *pulumi.Context, args GetEnrollmentCertOutputArgs, opts ...pulumi.InvokeOption) GetEnrollmentCertResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetEnrollmentCertResult, error) {
			args := v.(GetEnrollmentCertArgs)
			r, err := GetEnrollmentCert(ctx, &args, opts...)
			var s GetEnrollmentCertResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetEnrollmentCertResultOutput)
}

// A collection of arguments for invoking getEnrollmentCert.
type GetEnrollmentCertOutputArgs struct {
	Id            pulumi.StringPtrInput `pulumi:"id"`
	MicrotenantId pulumi.StringPtrInput `pulumi:"microtenantId"`
	Name          pulumi.StringPtrInput `pulumi:"name"`
}

func (GetEnrollmentCertOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnrollmentCertArgs)(nil)).Elem()
}

// A collection of values returned by getEnrollmentCert.
type GetEnrollmentCertResultOutput struct{ *pulumi.OutputState }

func (GetEnrollmentCertResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnrollmentCertResult)(nil)).Elem()
}

func (o GetEnrollmentCertResultOutput) ToGetEnrollmentCertResultOutput() GetEnrollmentCertResultOutput {
	return o
}

func (o GetEnrollmentCertResultOutput) ToGetEnrollmentCertResultOutputWithContext(ctx context.Context) GetEnrollmentCertResultOutput {
	return o
}

func (o GetEnrollmentCertResultOutput) AllowSigning() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEnrollmentCertResult) bool { return v.AllowSigning }).(pulumi.BoolOutput)
}

func (o GetEnrollmentCertResultOutput) Certificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnrollmentCertResult) string { return v.Certificate }).(pulumi.StringOutput)
}

func (o GetEnrollmentCertResultOutput) ClientCertType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnrollmentCertResult) string { return v.ClientCertType }).(pulumi.StringOutput)
}

func (o GetEnrollmentCertResultOutput) Cname() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnrollmentCertResult) string { return v.Cname }).(pulumi.StringOutput)
}

func (o GetEnrollmentCertResultOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnrollmentCertResult) string { return v.CreationTime }).(pulumi.StringOutput)
}

func (o GetEnrollmentCertResultOutput) Csr() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnrollmentCertResult) string { return v.Csr }).(pulumi.StringOutput)
}

func (o GetEnrollmentCertResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnrollmentCertResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetEnrollmentCertResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEnrollmentCertResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetEnrollmentCertResultOutput) IssuedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnrollmentCertResult) string { return v.IssuedBy }).(pulumi.StringOutput)
}

func (o GetEnrollmentCertResultOutput) IssuedTo() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnrollmentCertResult) string { return v.IssuedTo }).(pulumi.StringOutput)
}

func (o GetEnrollmentCertResultOutput) MicrotenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEnrollmentCertResult) *string { return v.MicrotenantId }).(pulumi.StringPtrOutput)
}

func (o GetEnrollmentCertResultOutput) ModifiedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnrollmentCertResult) string { return v.ModifiedBy }).(pulumi.StringOutput)
}

func (o GetEnrollmentCertResultOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnrollmentCertResult) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o GetEnrollmentCertResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEnrollmentCertResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetEnrollmentCertResultOutput) ParentCertId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnrollmentCertResult) string { return v.ParentCertId }).(pulumi.StringOutput)
}

func (o GetEnrollmentCertResultOutput) ParentCertName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnrollmentCertResult) string { return v.ParentCertName }).(pulumi.StringOutput)
}

func (o GetEnrollmentCertResultOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnrollmentCertResult) string { return v.PrivateKey }).(pulumi.StringOutput)
}

func (o GetEnrollmentCertResultOutput) PrivateKeyPresent() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEnrollmentCertResult) bool { return v.PrivateKeyPresent }).(pulumi.BoolOutput)
}

func (o GetEnrollmentCertResultOutput) SerialNo() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnrollmentCertResult) string { return v.SerialNo }).(pulumi.StringOutput)
}

func (o GetEnrollmentCertResultOutput) ValidFromInEpochSec() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnrollmentCertResult) string { return v.ValidFromInEpochSec }).(pulumi.StringOutput)
}

func (o GetEnrollmentCertResultOutput) ValidToInEpochSec() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnrollmentCertResult) string { return v.ValidToInEpochSec }).(pulumi.StringOutput)
}

func (o GetEnrollmentCertResultOutput) ZrsaEncryptedPrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnrollmentCertResult) string { return v.ZrsaEncryptedPrivateKey }).(pulumi.StringOutput)
}

func (o GetEnrollmentCertResultOutput) ZrsaEncryptedSessionKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnrollmentCertResult) string { return v.ZrsaEncryptedSessionKey }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEnrollmentCertResultOutput{})
}
