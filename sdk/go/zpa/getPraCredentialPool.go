// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// * [Official documentation](https://help.zscaler.com/zpa/about-privileged-credential-pools)
// * [API documentation](https://help.zscaler.com/zpa/configuring-privileged-credentials-using-api)
//
// The **zpa_pra_credential_pool** data source to get information about a privileged remote access credential pool created in the Zscaler Private Access cloud.
//
// **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
//
// ## Example Usage
//
// # Retrieves PRA Credential Pool By Name
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zpa.GetCredentialPool(ctx, &zpa.GetCredentialPoolArgs{
//				Name: pulumi.StringRef("PRACredentialPool01"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// # Retrieves PRA Credential Pool By ID
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zpa.GetCredentialPool(ctx, &zpa.GetCredentialPoolArgs{
//				Id: pulumi.StringRef("5458"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: zpa.index/getpracredentialpool.getPraCredentialPool has been deprecated in favor of zpa.index/getcredentialpool.getCredentialPool
func LookupPraCredentialPool(ctx *pulumi.Context, args *LookupPraCredentialPoolArgs, opts ...pulumi.InvokeOption) (*LookupPraCredentialPoolResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPraCredentialPoolResult
	err := ctx.Invoke("zpa:index/getPraCredentialPool:getPraCredentialPool", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPraCredentialPool.
type LookupPraCredentialPoolArgs struct {
	Credentials []GetPraCredentialPoolCredential `pulumi:"credentials"`
	Id          *string                          `pulumi:"id"`
	// - (String) The name of the privileged credential.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getPraCredentialPool.
type LookupPraCredentialPoolResult struct {
	CreationTime           string                           `pulumi:"creationTime"`
	CredentialMappingCount string                           `pulumi:"credentialMappingCount"`
	CredentialType         string                           `pulumi:"credentialType"`
	Credentials            []GetPraCredentialPoolCredential `pulumi:"credentials"`
	Id                     *string                          `pulumi:"id"`
	MicrotenantId          string                           `pulumi:"microtenantId"`
	MicrotenantName        string                           `pulumi:"microtenantName"`
	ModifiedBy             string                           `pulumi:"modifiedBy"`
	ModifiedTime           string                           `pulumi:"modifiedTime"`
	// - (String) The name of the privileged credential.
	Name *string `pulumi:"name"`
}

func LookupPraCredentialPoolOutput(ctx *pulumi.Context, args LookupPraCredentialPoolOutputArgs, opts ...pulumi.InvokeOption) LookupPraCredentialPoolResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPraCredentialPoolResultOutput, error) {
			args := v.(LookupPraCredentialPoolArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("zpa:index/getPraCredentialPool:getPraCredentialPool", args, LookupPraCredentialPoolResultOutput{}, options).(LookupPraCredentialPoolResultOutput), nil
		}).(LookupPraCredentialPoolResultOutput)
}

// A collection of arguments for invoking getPraCredentialPool.
type LookupPraCredentialPoolOutputArgs struct {
	Credentials GetPraCredentialPoolCredentialArrayInput `pulumi:"credentials"`
	Id          pulumi.StringPtrInput                    `pulumi:"id"`
	// - (String) The name of the privileged credential.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupPraCredentialPoolOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPraCredentialPoolArgs)(nil)).Elem()
}

// A collection of values returned by getPraCredentialPool.
type LookupPraCredentialPoolResultOutput struct{ *pulumi.OutputState }

func (LookupPraCredentialPoolResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPraCredentialPoolResult)(nil)).Elem()
}

func (o LookupPraCredentialPoolResultOutput) ToLookupPraCredentialPoolResultOutput() LookupPraCredentialPoolResultOutput {
	return o
}

func (o LookupPraCredentialPoolResultOutput) ToLookupPraCredentialPoolResultOutputWithContext(ctx context.Context) LookupPraCredentialPoolResultOutput {
	return o
}

func (o LookupPraCredentialPoolResultOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPraCredentialPoolResult) string { return v.CreationTime }).(pulumi.StringOutput)
}

func (o LookupPraCredentialPoolResultOutput) CredentialMappingCount() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPraCredentialPoolResult) string { return v.CredentialMappingCount }).(pulumi.StringOutput)
}

func (o LookupPraCredentialPoolResultOutput) CredentialType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPraCredentialPoolResult) string { return v.CredentialType }).(pulumi.StringOutput)
}

func (o LookupPraCredentialPoolResultOutput) Credentials() GetPraCredentialPoolCredentialArrayOutput {
	return o.ApplyT(func(v LookupPraCredentialPoolResult) []GetPraCredentialPoolCredential { return v.Credentials }).(GetPraCredentialPoolCredentialArrayOutput)
}

func (o LookupPraCredentialPoolResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPraCredentialPoolResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupPraCredentialPoolResultOutput) MicrotenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPraCredentialPoolResult) string { return v.MicrotenantId }).(pulumi.StringOutput)
}

func (o LookupPraCredentialPoolResultOutput) MicrotenantName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPraCredentialPoolResult) string { return v.MicrotenantName }).(pulumi.StringOutput)
}

func (o LookupPraCredentialPoolResultOutput) ModifiedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPraCredentialPoolResult) string { return v.ModifiedBy }).(pulumi.StringOutput)
}

func (o LookupPraCredentialPoolResultOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPraCredentialPoolResult) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

// - (String) The name of the privileged credential.
func (o LookupPraCredentialPoolResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPraCredentialPoolResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPraCredentialPoolResultOutput{})
}
