// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// * [Official documentation](https://help.zscaler.com/zpa/about-privileged-credential-pools)
// * [API documentation](https://help.zscaler.com/zpa/configuring-privileged-credentials-using-api)
//
// The **zpa_pra_credential_pool** data source to get information about a privileged remote access credential pool created in the Zscaler Private Access cloud.
//
// **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
//
// ## Example Usage
//
// # Retrieves PRA Credential Pool By Name
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zpa.GetCredentialPool(ctx, &zpa.GetCredentialPoolArgs{
//				Name: pulumi.StringRef("PRACredentialPool01"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// # Retrieves PRA Credential Pool By ID
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zpa.GetCredentialPool(ctx, &zpa.GetCredentialPoolArgs{
//				Id: pulumi.StringRef("5458"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCredentialPool(ctx *pulumi.Context, args *GetCredentialPoolArgs, opts ...pulumi.InvokeOption) (*GetCredentialPoolResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCredentialPoolResult
	err := ctx.Invoke("zpa:index/getCredentialPool:getCredentialPool", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCredentialPool.
type GetCredentialPoolArgs struct {
	Credentials []GetCredentialPoolCredential `pulumi:"credentials"`
	Id          *string                       `pulumi:"id"`
	// - (String) The name of the privileged credential.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getCredentialPool.
type GetCredentialPoolResult struct {
	CreationTime           string                        `pulumi:"creationTime"`
	CredentialMappingCount string                        `pulumi:"credentialMappingCount"`
	CredentialType         string                        `pulumi:"credentialType"`
	Credentials            []GetCredentialPoolCredential `pulumi:"credentials"`
	Id                     *string                       `pulumi:"id"`
	MicrotenantId          string                        `pulumi:"microtenantId"`
	MicrotenantName        string                        `pulumi:"microtenantName"`
	ModifiedBy             string                        `pulumi:"modifiedBy"`
	ModifiedTime           string                        `pulumi:"modifiedTime"`
	// - (String) The name of the privileged credential.
	Name *string `pulumi:"name"`
}

func GetCredentialPoolOutput(ctx *pulumi.Context, args GetCredentialPoolOutputArgs, opts ...pulumi.InvokeOption) GetCredentialPoolResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCredentialPoolResultOutput, error) {
			args := v.(GetCredentialPoolArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("zpa:index/getCredentialPool:getCredentialPool", args, GetCredentialPoolResultOutput{}, options).(GetCredentialPoolResultOutput), nil
		}).(GetCredentialPoolResultOutput)
}

// A collection of arguments for invoking getCredentialPool.
type GetCredentialPoolOutputArgs struct {
	Credentials GetCredentialPoolCredentialArrayInput `pulumi:"credentials"`
	Id          pulumi.StringPtrInput                 `pulumi:"id"`
	// - (String) The name of the privileged credential.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GetCredentialPoolOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCredentialPoolArgs)(nil)).Elem()
}

// A collection of values returned by getCredentialPool.
type GetCredentialPoolResultOutput struct{ *pulumi.OutputState }

func (GetCredentialPoolResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCredentialPoolResult)(nil)).Elem()
}

func (o GetCredentialPoolResultOutput) ToGetCredentialPoolResultOutput() GetCredentialPoolResultOutput {
	return o
}

func (o GetCredentialPoolResultOutput) ToGetCredentialPoolResultOutputWithContext(ctx context.Context) GetCredentialPoolResultOutput {
	return o
}

func (o GetCredentialPoolResultOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCredentialPoolResult) string { return v.CreationTime }).(pulumi.StringOutput)
}

func (o GetCredentialPoolResultOutput) CredentialMappingCount() pulumi.StringOutput {
	return o.ApplyT(func(v GetCredentialPoolResult) string { return v.CredentialMappingCount }).(pulumi.StringOutput)
}

func (o GetCredentialPoolResultOutput) CredentialType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCredentialPoolResult) string { return v.CredentialType }).(pulumi.StringOutput)
}

func (o GetCredentialPoolResultOutput) Credentials() GetCredentialPoolCredentialArrayOutput {
	return o.ApplyT(func(v GetCredentialPoolResult) []GetCredentialPoolCredential { return v.Credentials }).(GetCredentialPoolCredentialArrayOutput)
}

func (o GetCredentialPoolResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCredentialPoolResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetCredentialPoolResultOutput) MicrotenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCredentialPoolResult) string { return v.MicrotenantId }).(pulumi.StringOutput)
}

func (o GetCredentialPoolResultOutput) MicrotenantName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCredentialPoolResult) string { return v.MicrotenantName }).(pulumi.StringOutput)
}

func (o GetCredentialPoolResultOutput) ModifiedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetCredentialPoolResult) string { return v.ModifiedBy }).(pulumi.StringOutput)
}

func (o GetCredentialPoolResultOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCredentialPoolResult) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

// - (String) The name of the privileged credential.
func (o GetCredentialPoolResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCredentialPoolResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCredentialPoolResultOutput{})
}
