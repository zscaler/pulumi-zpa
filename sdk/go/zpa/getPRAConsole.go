// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// * [Official documentation](https://help.zscaler.com/zpa/about-privileged-consoles)
// * [API documentation](https://help.zscaler.com/zpa/configuring-privileged-consoles-using-api)
//
// The **zpa_pra_console_controller** data source gets information about a privileged remote access console created in the Zscaler Private Access cloud.
// This resource can then be referenced in an privileged access policy credential and a privileged access portal resource.
//
// **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
func LookupPRAConsole(ctx *pulumi.Context, args *LookupPRAConsoleArgs, opts ...pulumi.InvokeOption) (*LookupPRAConsoleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPRAConsoleResult
	err := ctx.Invoke("zpa:index/getPRAConsole:getPRAConsole", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPRAConsole.
type LookupPRAConsoleArgs struct {
	Id *string `pulumi:"id"`
	// - (Required) The name of the privileged console.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getPRAConsole.
type LookupPRAConsoleResult struct {
	CreationTime    string  `pulumi:"creationTime"`
	Description     string  `pulumi:"description"`
	Enabled         bool    `pulumi:"enabled"`
	IconText        string  `pulumi:"iconText"`
	Id              *string `pulumi:"id"`
	MicrotenantId   string  `pulumi:"microtenantId"`
	MicrotenantName string  `pulumi:"microtenantName"`
	ModifiedBy      string  `pulumi:"modifiedBy"`
	ModifiedTime    string  `pulumi:"modifiedTime"`
	// - (Required) The name of the privileged console.
	Name            *string                       `pulumi:"name"`
	PraApplications []GetPRAConsolePraApplication `pulumi:"praApplications"`
	PraPortals      []GetPRAConsolePraPortal      `pulumi:"praPortals"`
}

func LookupPRAConsoleOutput(ctx *pulumi.Context, args LookupPRAConsoleOutputArgs, opts ...pulumi.InvokeOption) LookupPRAConsoleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPRAConsoleResultOutput, error) {
			args := v.(LookupPRAConsoleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("zpa:index/getPRAConsole:getPRAConsole", args, LookupPRAConsoleResultOutput{}, options).(LookupPRAConsoleResultOutput), nil
		}).(LookupPRAConsoleResultOutput)
}

// A collection of arguments for invoking getPRAConsole.
type LookupPRAConsoleOutputArgs struct {
	Id pulumi.StringPtrInput `pulumi:"id"`
	// - (Required) The name of the privileged console.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupPRAConsoleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPRAConsoleArgs)(nil)).Elem()
}

// A collection of values returned by getPRAConsole.
type LookupPRAConsoleResultOutput struct{ *pulumi.OutputState }

func (LookupPRAConsoleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPRAConsoleResult)(nil)).Elem()
}

func (o LookupPRAConsoleResultOutput) ToLookupPRAConsoleResultOutput() LookupPRAConsoleResultOutput {
	return o
}

func (o LookupPRAConsoleResultOutput) ToLookupPRAConsoleResultOutputWithContext(ctx context.Context) LookupPRAConsoleResultOutput {
	return o
}

func (o LookupPRAConsoleResultOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPRAConsoleResult) string { return v.CreationTime }).(pulumi.StringOutput)
}

func (o LookupPRAConsoleResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPRAConsoleResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupPRAConsoleResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPRAConsoleResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o LookupPRAConsoleResultOutput) IconText() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPRAConsoleResult) string { return v.IconText }).(pulumi.StringOutput)
}

func (o LookupPRAConsoleResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPRAConsoleResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupPRAConsoleResultOutput) MicrotenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPRAConsoleResult) string { return v.MicrotenantId }).(pulumi.StringOutput)
}

func (o LookupPRAConsoleResultOutput) MicrotenantName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPRAConsoleResult) string { return v.MicrotenantName }).(pulumi.StringOutput)
}

func (o LookupPRAConsoleResultOutput) ModifiedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPRAConsoleResult) string { return v.ModifiedBy }).(pulumi.StringOutput)
}

func (o LookupPRAConsoleResultOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPRAConsoleResult) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

// - (Required) The name of the privileged console.
func (o LookupPRAConsoleResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPRAConsoleResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupPRAConsoleResultOutput) PraApplications() GetPRAConsolePraApplicationArrayOutput {
	return o.ApplyT(func(v LookupPRAConsoleResult) []GetPRAConsolePraApplication { return v.PraApplications }).(GetPRAConsolePraApplicationArrayOutput)
}

func (o LookupPRAConsoleResultOutput) PraPortals() GetPRAConsolePraPortalArrayOutput {
	return o.ApplyT(func(v LookupPRAConsoleResult) []GetPRAConsolePraPortal { return v.PraPortals }).(GetPRAConsolePraPortalArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPRAConsoleResultOutput{})
}
