// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// Use the **zpa_cloud_browser_isolation_region** data source to get information about Cloud Browser Isolation regions such as ID and Name. This data source information is required as part of the attribute `regionIds` when creating an Cloud Browser Isolation External Profile “CloudBrowserIsolationExternalProfile“
//
// **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Retrieve CBI Region ID and Name
//			_, err := zpa.GetCloudBrowserIsolationRegion(ctx, &zpa.GetCloudBrowserIsolationRegionArgs{
//				Name: pulumi.StringRef("Singapore"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCloudBrowserIsolationRegion(ctx *pulumi.Context, args *GetCloudBrowserIsolationRegionArgs, opts ...pulumi.InvokeOption) (*GetCloudBrowserIsolationRegionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCloudBrowserIsolationRegionResult
	err := ctx.Invoke("zpa:index/getCloudBrowserIsolationRegion:getCloudBrowserIsolationRegion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudBrowserIsolationRegion.
type GetCloudBrowserIsolationRegionArgs struct {
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

// A collection of values returned by getCloudBrowserIsolationRegion.
type GetCloudBrowserIsolationRegionResult struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

func GetCloudBrowserIsolationRegionOutput(ctx *pulumi.Context, args GetCloudBrowserIsolationRegionOutputArgs, opts ...pulumi.InvokeOption) GetCloudBrowserIsolationRegionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCloudBrowserIsolationRegionResultOutput, error) {
			args := v.(GetCloudBrowserIsolationRegionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("zpa:index/getCloudBrowserIsolationRegion:getCloudBrowserIsolationRegion", args, GetCloudBrowserIsolationRegionResultOutput{}, options).(GetCloudBrowserIsolationRegionResultOutput), nil
		}).(GetCloudBrowserIsolationRegionResultOutput)
}

// A collection of arguments for invoking getCloudBrowserIsolationRegion.
type GetCloudBrowserIsolationRegionOutputArgs struct {
	Id   pulumi.StringPtrInput `pulumi:"id"`
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GetCloudBrowserIsolationRegionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBrowserIsolationRegionArgs)(nil)).Elem()
}

// A collection of values returned by getCloudBrowserIsolationRegion.
type GetCloudBrowserIsolationRegionResultOutput struct{ *pulumi.OutputState }

func (GetCloudBrowserIsolationRegionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBrowserIsolationRegionResult)(nil)).Elem()
}

func (o GetCloudBrowserIsolationRegionResultOutput) ToGetCloudBrowserIsolationRegionResultOutput() GetCloudBrowserIsolationRegionResultOutput {
	return o
}

func (o GetCloudBrowserIsolationRegionResultOutput) ToGetCloudBrowserIsolationRegionResultOutputWithContext(ctx context.Context) GetCloudBrowserIsolationRegionResultOutput {
	return o
}

func (o GetCloudBrowserIsolationRegionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBrowserIsolationRegionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCloudBrowserIsolationRegionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBrowserIsolationRegionResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCloudBrowserIsolationRegionResultOutput{})
}
