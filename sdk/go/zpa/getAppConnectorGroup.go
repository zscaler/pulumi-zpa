// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zpa.GetAppConnectorGroup(ctx, &zpa.GetAppConnectorGroupArgs{
//				Name: pulumi.StringRef("DataCenter"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zpa.GetAppConnectorGroup(ctx, &zpa.GetAppConnectorGroupArgs{
//				Id: pulumi.StringRef("123456789"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAppConnectorGroup(ctx *pulumi.Context, args *GetAppConnectorGroupArgs, opts ...pulumi.InvokeOption) (*GetAppConnectorGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAppConnectorGroupResult
	err := ctx.Invoke("zpa:index/getAppConnectorGroup:getAppConnectorGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAppConnectorGroup.
type GetAppConnectorGroupArgs struct {
	Id                     *string `pulumi:"id"`
	MicrotenantId          *string `pulumi:"microtenantId"`
	MicrotenantName        *string `pulumi:"microtenantName"`
	Name                   *string `pulumi:"name"`
	OverrideVersionProfile *bool   `pulumi:"overrideVersionProfile"`
}

// A collection of values returned by getAppConnectorGroup.
type GetAppConnectorGroupResult struct {
	CityCountry                   string                            `pulumi:"cityCountry"`
	Connectors                    []GetAppConnectorGroupConnector   `pulumi:"connectors"`
	CountryCode                   string                            `pulumi:"countryCode"`
	CreationTime                  string                            `pulumi:"creationTime"`
	Description                   string                            `pulumi:"description"`
	DnsQueryType                  string                            `pulumi:"dnsQueryType"`
	Enabled                       bool                              `pulumi:"enabled"`
	GeoLocationId                 string                            `pulumi:"geoLocationId"`
	Id                            *string                           `pulumi:"id"`
	Latitude                      string                            `pulumi:"latitude"`
	Location                      string                            `pulumi:"location"`
	Longitude                     string                            `pulumi:"longitude"`
	LssAppConnectorGroup          bool                              `pulumi:"lssAppConnectorGroup"`
	MicrotenantId                 *string                           `pulumi:"microtenantId"`
	MicrotenantName               *string                           `pulumi:"microtenantName"`
	ModifiedTime                  string                            `pulumi:"modifiedTime"`
	Modifiedby                    string                            `pulumi:"modifiedby"`
	Name                          *string                           `pulumi:"name"`
	OverrideVersionProfile        *bool                             `pulumi:"overrideVersionProfile"`
	ServerGroups                  []GetAppConnectorGroupServerGroup `pulumi:"serverGroups"`
	TcpQuickAckApp                bool                              `pulumi:"tcpQuickAckApp"`
	TcpQuickAckAssistant          bool                              `pulumi:"tcpQuickAckAssistant"`
	TcpQuickAckReadAssistant      bool                              `pulumi:"tcpQuickAckReadAssistant"`
	UpgradeDay                    string                            `pulumi:"upgradeDay"`
	UpgradeTimeInSecs             string                            `pulumi:"upgradeTimeInSecs"`
	UseInDrMode                   bool                              `pulumi:"useInDrMode"`
	VersionProfileId              string                            `pulumi:"versionProfileId"`
	VersionProfileName            string                            `pulumi:"versionProfileName"`
	VersionProfileVisibilityScope string                            `pulumi:"versionProfileVisibilityScope"`
}

func GetAppConnectorGroupOutput(ctx *pulumi.Context, args GetAppConnectorGroupOutputArgs, opts ...pulumi.InvokeOption) GetAppConnectorGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetAppConnectorGroupResultOutput, error) {
			args := v.(GetAppConnectorGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("zpa:index/getAppConnectorGroup:getAppConnectorGroup", args, GetAppConnectorGroupResultOutput{}, options).(GetAppConnectorGroupResultOutput), nil
		}).(GetAppConnectorGroupResultOutput)
}

// A collection of arguments for invoking getAppConnectorGroup.
type GetAppConnectorGroupOutputArgs struct {
	Id                     pulumi.StringPtrInput `pulumi:"id"`
	MicrotenantId          pulumi.StringPtrInput `pulumi:"microtenantId"`
	MicrotenantName        pulumi.StringPtrInput `pulumi:"microtenantName"`
	Name                   pulumi.StringPtrInput `pulumi:"name"`
	OverrideVersionProfile pulumi.BoolPtrInput   `pulumi:"overrideVersionProfile"`
}

func (GetAppConnectorGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppConnectorGroupArgs)(nil)).Elem()
}

// A collection of values returned by getAppConnectorGroup.
type GetAppConnectorGroupResultOutput struct{ *pulumi.OutputState }

func (GetAppConnectorGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppConnectorGroupResult)(nil)).Elem()
}

func (o GetAppConnectorGroupResultOutput) ToGetAppConnectorGroupResultOutput() GetAppConnectorGroupResultOutput {
	return o
}

func (o GetAppConnectorGroupResultOutput) ToGetAppConnectorGroupResultOutputWithContext(ctx context.Context) GetAppConnectorGroupResultOutput {
	return o
}

func (o GetAppConnectorGroupResultOutput) CityCountry() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) string { return v.CityCountry }).(pulumi.StringOutput)
}

func (o GetAppConnectorGroupResultOutput) Connectors() GetAppConnectorGroupConnectorArrayOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) []GetAppConnectorGroupConnector { return v.Connectors }).(GetAppConnectorGroupConnectorArrayOutput)
}

func (o GetAppConnectorGroupResultOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) string { return v.CountryCode }).(pulumi.StringOutput)
}

func (o GetAppConnectorGroupResultOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) string { return v.CreationTime }).(pulumi.StringOutput)
}

func (o GetAppConnectorGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetAppConnectorGroupResultOutput) DnsQueryType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) string { return v.DnsQueryType }).(pulumi.StringOutput)
}

func (o GetAppConnectorGroupResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetAppConnectorGroupResultOutput) GeoLocationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) string { return v.GeoLocationId }).(pulumi.StringOutput)
}

func (o GetAppConnectorGroupResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetAppConnectorGroupResultOutput) Latitude() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) string { return v.Latitude }).(pulumi.StringOutput)
}

func (o GetAppConnectorGroupResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o GetAppConnectorGroupResultOutput) Longitude() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) string { return v.Longitude }).(pulumi.StringOutput)
}

func (o GetAppConnectorGroupResultOutput) LssAppConnectorGroup() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) bool { return v.LssAppConnectorGroup }).(pulumi.BoolOutput)
}

func (o GetAppConnectorGroupResultOutput) MicrotenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) *string { return v.MicrotenantId }).(pulumi.StringPtrOutput)
}

func (o GetAppConnectorGroupResultOutput) MicrotenantName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) *string { return v.MicrotenantName }).(pulumi.StringPtrOutput)
}

func (o GetAppConnectorGroupResultOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

func (o GetAppConnectorGroupResultOutput) Modifiedby() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) string { return v.Modifiedby }).(pulumi.StringOutput)
}

func (o GetAppConnectorGroupResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetAppConnectorGroupResultOutput) OverrideVersionProfile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) *bool { return v.OverrideVersionProfile }).(pulumi.BoolPtrOutput)
}

func (o GetAppConnectorGroupResultOutput) ServerGroups() GetAppConnectorGroupServerGroupArrayOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) []GetAppConnectorGroupServerGroup { return v.ServerGroups }).(GetAppConnectorGroupServerGroupArrayOutput)
}

func (o GetAppConnectorGroupResultOutput) TcpQuickAckApp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) bool { return v.TcpQuickAckApp }).(pulumi.BoolOutput)
}

func (o GetAppConnectorGroupResultOutput) TcpQuickAckAssistant() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) bool { return v.TcpQuickAckAssistant }).(pulumi.BoolOutput)
}

func (o GetAppConnectorGroupResultOutput) TcpQuickAckReadAssistant() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) bool { return v.TcpQuickAckReadAssistant }).(pulumi.BoolOutput)
}

func (o GetAppConnectorGroupResultOutput) UpgradeDay() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) string { return v.UpgradeDay }).(pulumi.StringOutput)
}

func (o GetAppConnectorGroupResultOutput) UpgradeTimeInSecs() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) string { return v.UpgradeTimeInSecs }).(pulumi.StringOutput)
}

func (o GetAppConnectorGroupResultOutput) UseInDrMode() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) bool { return v.UseInDrMode }).(pulumi.BoolOutput)
}

func (o GetAppConnectorGroupResultOutput) VersionProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) string { return v.VersionProfileId }).(pulumi.StringOutput)
}

func (o GetAppConnectorGroupResultOutput) VersionProfileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) string { return v.VersionProfileName }).(pulumi.StringOutput)
}

func (o GetAppConnectorGroupResultOutput) VersionProfileVisibilityScope() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppConnectorGroupResult) string { return v.VersionProfileVisibilityScope }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAppConnectorGroupResultOutput{})
}
