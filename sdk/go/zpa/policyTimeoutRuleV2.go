// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// Deprecated: zpa.index/policytimeoutrulev2.PolicyTimeoutRuleV2 has been deprecated in favor of zpa.index/policyaccesstimeoutrulev2.PolicyAccessTimeOutRuleV2
type PolicyTimeoutRuleV2 struct {
	pulumi.CustomResourceState

	// This is for providing the rule action.
	Action pulumi.StringPtrOutput `pulumi:"action"`
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyTimeoutRuleV2ConditionArrayOutput `pulumi:"conditions"`
	// This is for providing a customer message for the user.
	CustomMsg pulumi.StringPtrOutput `pulumi:"customMsg"`
	// This is the description of the access policy.
	Description   pulumi.StringPtrOutput `pulumi:"description"`
	MicrotenantId pulumi.StringOutput    `pulumi:"microtenantId"`
	// This is the name of the policy.
	Name              pulumi.StringOutput `pulumi:"name"`
	PolicySetId       pulumi.StringOutput `pulumi:"policySetId"`
	ReauthIdleTimeout pulumi.StringOutput `pulumi:"reauthIdleTimeout"`
	ReauthTimeout     pulumi.StringOutput `pulumi:"reauthTimeout"`
}

// NewPolicyTimeoutRuleV2 registers a new resource with the given unique name, arguments, and options.
func NewPolicyTimeoutRuleV2(ctx *pulumi.Context,
	name string, args *PolicyTimeoutRuleV2Args, opts ...pulumi.ResourceOption) (*PolicyTimeoutRuleV2, error) {
	if args == nil {
		args = &PolicyTimeoutRuleV2Args{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PolicyTimeoutRuleV2
	err := ctx.RegisterResource("zpa:index/policyTimeoutRuleV2:PolicyTimeoutRuleV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyTimeoutRuleV2 gets an existing PolicyTimeoutRuleV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyTimeoutRuleV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyTimeoutRuleV2State, opts ...pulumi.ResourceOption) (*PolicyTimeoutRuleV2, error) {
	var resource PolicyTimeoutRuleV2
	err := ctx.ReadResource("zpa:index/policyTimeoutRuleV2:PolicyTimeoutRuleV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyTimeoutRuleV2 resources.
type policyTimeoutRuleV2State struct {
	// This is for providing the rule action.
	Action *string `pulumi:"action"`
	// This is for proviidng the set of conditions for the policy.
	Conditions []PolicyTimeoutRuleV2Condition `pulumi:"conditions"`
	// This is for providing a customer message for the user.
	CustomMsg *string `pulumi:"customMsg"`
	// This is the description of the access policy.
	Description   *string `pulumi:"description"`
	MicrotenantId *string `pulumi:"microtenantId"`
	// This is the name of the policy.
	Name              *string `pulumi:"name"`
	PolicySetId       *string `pulumi:"policySetId"`
	ReauthIdleTimeout *string `pulumi:"reauthIdleTimeout"`
	ReauthTimeout     *string `pulumi:"reauthTimeout"`
}

type PolicyTimeoutRuleV2State struct {
	// This is for providing the rule action.
	Action pulumi.StringPtrInput
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyTimeoutRuleV2ConditionArrayInput
	// This is for providing a customer message for the user.
	CustomMsg pulumi.StringPtrInput
	// This is the description of the access policy.
	Description   pulumi.StringPtrInput
	MicrotenantId pulumi.StringPtrInput
	// This is the name of the policy.
	Name              pulumi.StringPtrInput
	PolicySetId       pulumi.StringPtrInput
	ReauthIdleTimeout pulumi.StringPtrInput
	ReauthTimeout     pulumi.StringPtrInput
}

func (PolicyTimeoutRuleV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*policyTimeoutRuleV2State)(nil)).Elem()
}

type policyTimeoutRuleV2Args struct {
	// This is for providing the rule action.
	Action *string `pulumi:"action"`
	// This is for proviidng the set of conditions for the policy.
	Conditions []PolicyTimeoutRuleV2Condition `pulumi:"conditions"`
	// This is for providing a customer message for the user.
	CustomMsg *string `pulumi:"customMsg"`
	// This is the description of the access policy.
	Description   *string `pulumi:"description"`
	MicrotenantId *string `pulumi:"microtenantId"`
	// This is the name of the policy.
	Name              *string `pulumi:"name"`
	ReauthIdleTimeout *string `pulumi:"reauthIdleTimeout"`
	ReauthTimeout     *string `pulumi:"reauthTimeout"`
}

// The set of arguments for constructing a PolicyTimeoutRuleV2 resource.
type PolicyTimeoutRuleV2Args struct {
	// This is for providing the rule action.
	Action pulumi.StringPtrInput
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyTimeoutRuleV2ConditionArrayInput
	// This is for providing a customer message for the user.
	CustomMsg pulumi.StringPtrInput
	// This is the description of the access policy.
	Description   pulumi.StringPtrInput
	MicrotenantId pulumi.StringPtrInput
	// This is the name of the policy.
	Name              pulumi.StringPtrInput
	ReauthIdleTimeout pulumi.StringPtrInput
	ReauthTimeout     pulumi.StringPtrInput
}

func (PolicyTimeoutRuleV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*policyTimeoutRuleV2Args)(nil)).Elem()
}

type PolicyTimeoutRuleV2Input interface {
	pulumi.Input

	ToPolicyTimeoutRuleV2Output() PolicyTimeoutRuleV2Output
	ToPolicyTimeoutRuleV2OutputWithContext(ctx context.Context) PolicyTimeoutRuleV2Output
}

func (*PolicyTimeoutRuleV2) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTimeoutRuleV2)(nil)).Elem()
}

func (i *PolicyTimeoutRuleV2) ToPolicyTimeoutRuleV2Output() PolicyTimeoutRuleV2Output {
	return i.ToPolicyTimeoutRuleV2OutputWithContext(context.Background())
}

func (i *PolicyTimeoutRuleV2) ToPolicyTimeoutRuleV2OutputWithContext(ctx context.Context) PolicyTimeoutRuleV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTimeoutRuleV2Output)
}

// PolicyTimeoutRuleV2ArrayInput is an input type that accepts PolicyTimeoutRuleV2Array and PolicyTimeoutRuleV2ArrayOutput values.
// You can construct a concrete instance of `PolicyTimeoutRuleV2ArrayInput` via:
//
//	PolicyTimeoutRuleV2Array{ PolicyTimeoutRuleV2Args{...} }
type PolicyTimeoutRuleV2ArrayInput interface {
	pulumi.Input

	ToPolicyTimeoutRuleV2ArrayOutput() PolicyTimeoutRuleV2ArrayOutput
	ToPolicyTimeoutRuleV2ArrayOutputWithContext(context.Context) PolicyTimeoutRuleV2ArrayOutput
}

type PolicyTimeoutRuleV2Array []PolicyTimeoutRuleV2Input

func (PolicyTimeoutRuleV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyTimeoutRuleV2)(nil)).Elem()
}

func (i PolicyTimeoutRuleV2Array) ToPolicyTimeoutRuleV2ArrayOutput() PolicyTimeoutRuleV2ArrayOutput {
	return i.ToPolicyTimeoutRuleV2ArrayOutputWithContext(context.Background())
}

func (i PolicyTimeoutRuleV2Array) ToPolicyTimeoutRuleV2ArrayOutputWithContext(ctx context.Context) PolicyTimeoutRuleV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTimeoutRuleV2ArrayOutput)
}

// PolicyTimeoutRuleV2MapInput is an input type that accepts PolicyTimeoutRuleV2Map and PolicyTimeoutRuleV2MapOutput values.
// You can construct a concrete instance of `PolicyTimeoutRuleV2MapInput` via:
//
//	PolicyTimeoutRuleV2Map{ "key": PolicyTimeoutRuleV2Args{...} }
type PolicyTimeoutRuleV2MapInput interface {
	pulumi.Input

	ToPolicyTimeoutRuleV2MapOutput() PolicyTimeoutRuleV2MapOutput
	ToPolicyTimeoutRuleV2MapOutputWithContext(context.Context) PolicyTimeoutRuleV2MapOutput
}

type PolicyTimeoutRuleV2Map map[string]PolicyTimeoutRuleV2Input

func (PolicyTimeoutRuleV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyTimeoutRuleV2)(nil)).Elem()
}

func (i PolicyTimeoutRuleV2Map) ToPolicyTimeoutRuleV2MapOutput() PolicyTimeoutRuleV2MapOutput {
	return i.ToPolicyTimeoutRuleV2MapOutputWithContext(context.Background())
}

func (i PolicyTimeoutRuleV2Map) ToPolicyTimeoutRuleV2MapOutputWithContext(ctx context.Context) PolicyTimeoutRuleV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTimeoutRuleV2MapOutput)
}

type PolicyTimeoutRuleV2Output struct{ *pulumi.OutputState }

func (PolicyTimeoutRuleV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTimeoutRuleV2)(nil)).Elem()
}

func (o PolicyTimeoutRuleV2Output) ToPolicyTimeoutRuleV2Output() PolicyTimeoutRuleV2Output {
	return o
}

func (o PolicyTimeoutRuleV2Output) ToPolicyTimeoutRuleV2OutputWithContext(ctx context.Context) PolicyTimeoutRuleV2Output {
	return o
}

// This is for providing the rule action.
func (o PolicyTimeoutRuleV2Output) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTimeoutRuleV2) pulumi.StringPtrOutput { return v.Action }).(pulumi.StringPtrOutput)
}

// This is for proviidng the set of conditions for the policy.
func (o PolicyTimeoutRuleV2Output) Conditions() PolicyTimeoutRuleV2ConditionArrayOutput {
	return o.ApplyT(func(v *PolicyTimeoutRuleV2) PolicyTimeoutRuleV2ConditionArrayOutput { return v.Conditions }).(PolicyTimeoutRuleV2ConditionArrayOutput)
}

// This is for providing a customer message for the user.
func (o PolicyTimeoutRuleV2Output) CustomMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTimeoutRuleV2) pulumi.StringPtrOutput { return v.CustomMsg }).(pulumi.StringPtrOutput)
}

// This is the description of the access policy.
func (o PolicyTimeoutRuleV2Output) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTimeoutRuleV2) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyTimeoutRuleV2Output) MicrotenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyTimeoutRuleV2) pulumi.StringOutput { return v.MicrotenantId }).(pulumi.StringOutput)
}

// This is the name of the policy.
func (o PolicyTimeoutRuleV2Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyTimeoutRuleV2) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o PolicyTimeoutRuleV2Output) PolicySetId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyTimeoutRuleV2) pulumi.StringOutput { return v.PolicySetId }).(pulumi.StringOutput)
}

func (o PolicyTimeoutRuleV2Output) ReauthIdleTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyTimeoutRuleV2) pulumi.StringOutput { return v.ReauthIdleTimeout }).(pulumi.StringOutput)
}

func (o PolicyTimeoutRuleV2Output) ReauthTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyTimeoutRuleV2) pulumi.StringOutput { return v.ReauthTimeout }).(pulumi.StringOutput)
}

type PolicyTimeoutRuleV2ArrayOutput struct{ *pulumi.OutputState }

func (PolicyTimeoutRuleV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyTimeoutRuleV2)(nil)).Elem()
}

func (o PolicyTimeoutRuleV2ArrayOutput) ToPolicyTimeoutRuleV2ArrayOutput() PolicyTimeoutRuleV2ArrayOutput {
	return o
}

func (o PolicyTimeoutRuleV2ArrayOutput) ToPolicyTimeoutRuleV2ArrayOutputWithContext(ctx context.Context) PolicyTimeoutRuleV2ArrayOutput {
	return o
}

func (o PolicyTimeoutRuleV2ArrayOutput) Index(i pulumi.IntInput) PolicyTimeoutRuleV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PolicyTimeoutRuleV2 {
		return vs[0].([]*PolicyTimeoutRuleV2)[vs[1].(int)]
	}).(PolicyTimeoutRuleV2Output)
}

type PolicyTimeoutRuleV2MapOutput struct{ *pulumi.OutputState }

func (PolicyTimeoutRuleV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyTimeoutRuleV2)(nil)).Elem()
}

func (o PolicyTimeoutRuleV2MapOutput) ToPolicyTimeoutRuleV2MapOutput() PolicyTimeoutRuleV2MapOutput {
	return o
}

func (o PolicyTimeoutRuleV2MapOutput) ToPolicyTimeoutRuleV2MapOutputWithContext(ctx context.Context) PolicyTimeoutRuleV2MapOutput {
	return o
}

func (o PolicyTimeoutRuleV2MapOutput) MapIndex(k pulumi.StringInput) PolicyTimeoutRuleV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PolicyTimeoutRuleV2 {
		return vs[0].(map[string]*PolicyTimeoutRuleV2)[vs[1].(string)]
	}).(PolicyTimeoutRuleV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyTimeoutRuleV2Input)(nil)).Elem(), &PolicyTimeoutRuleV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyTimeoutRuleV2ArrayInput)(nil)).Elem(), PolicyTimeoutRuleV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyTimeoutRuleV2MapInput)(nil)).Elem(), PolicyTimeoutRuleV2Map{})
	pulumi.RegisterOutputType(PolicyTimeoutRuleV2Output{})
	pulumi.RegisterOutputType(PolicyTimeoutRuleV2ArrayOutput{})
	pulumi.RegisterOutputType(PolicyTimeoutRuleV2MapOutput{})
}
