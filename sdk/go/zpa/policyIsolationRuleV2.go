// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// Deprecated: zpa.index/policyisolationrulev2.PolicyIsolationRuleV2 has been deprecated in favor of zpa.index/policyaccessisolationrulev2.PolicyAccessIsolationRuleV2
type PolicyIsolationRuleV2 struct {
	pulumi.CustomResourceState

	// This is for providing the rule action.
	Action pulumi.StringPtrOutput `pulumi:"action"`
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyIsolationRuleV2ConditionArrayOutput `pulumi:"conditions"`
	// This is the description of the access policy.
	Description   pulumi.StringPtrOutput `pulumi:"description"`
	MicrotenantId pulumi.StringOutput    `pulumi:"microtenantId"`
	// This is the name of the policy.
	Name                  pulumi.StringOutput `pulumi:"name"`
	PolicySetId           pulumi.StringOutput `pulumi:"policySetId"`
	ZpnIsolationProfileId pulumi.StringOutput `pulumi:"zpnIsolationProfileId"`
}

// NewPolicyIsolationRuleV2 registers a new resource with the given unique name, arguments, and options.
func NewPolicyIsolationRuleV2(ctx *pulumi.Context,
	name string, args *PolicyIsolationRuleV2Args, opts ...pulumi.ResourceOption) (*PolicyIsolationRuleV2, error) {
	if args == nil {
		args = &PolicyIsolationRuleV2Args{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PolicyIsolationRuleV2
	err := ctx.RegisterResource("zpa:index/policyIsolationRuleV2:PolicyIsolationRuleV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyIsolationRuleV2 gets an existing PolicyIsolationRuleV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyIsolationRuleV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyIsolationRuleV2State, opts ...pulumi.ResourceOption) (*PolicyIsolationRuleV2, error) {
	var resource PolicyIsolationRuleV2
	err := ctx.ReadResource("zpa:index/policyIsolationRuleV2:PolicyIsolationRuleV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyIsolationRuleV2 resources.
type policyIsolationRuleV2State struct {
	// This is for providing the rule action.
	Action *string `pulumi:"action"`
	// This is for proviidng the set of conditions for the policy.
	Conditions []PolicyIsolationRuleV2Condition `pulumi:"conditions"`
	// This is the description of the access policy.
	Description   *string `pulumi:"description"`
	MicrotenantId *string `pulumi:"microtenantId"`
	// This is the name of the policy.
	Name                  *string `pulumi:"name"`
	PolicySetId           *string `pulumi:"policySetId"`
	ZpnIsolationProfileId *string `pulumi:"zpnIsolationProfileId"`
}

type PolicyIsolationRuleV2State struct {
	// This is for providing the rule action.
	Action pulumi.StringPtrInput
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyIsolationRuleV2ConditionArrayInput
	// This is the description of the access policy.
	Description   pulumi.StringPtrInput
	MicrotenantId pulumi.StringPtrInput
	// This is the name of the policy.
	Name                  pulumi.StringPtrInput
	PolicySetId           pulumi.StringPtrInput
	ZpnIsolationProfileId pulumi.StringPtrInput
}

func (PolicyIsolationRuleV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*policyIsolationRuleV2State)(nil)).Elem()
}

type policyIsolationRuleV2Args struct {
	// This is for providing the rule action.
	Action *string `pulumi:"action"`
	// This is for proviidng the set of conditions for the policy.
	Conditions []PolicyIsolationRuleV2Condition `pulumi:"conditions"`
	// This is the description of the access policy.
	Description   *string `pulumi:"description"`
	MicrotenantId *string `pulumi:"microtenantId"`
	// This is the name of the policy.
	Name                  *string `pulumi:"name"`
	ZpnIsolationProfileId *string `pulumi:"zpnIsolationProfileId"`
}

// The set of arguments for constructing a PolicyIsolationRuleV2 resource.
type PolicyIsolationRuleV2Args struct {
	// This is for providing the rule action.
	Action pulumi.StringPtrInput
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyIsolationRuleV2ConditionArrayInput
	// This is the description of the access policy.
	Description   pulumi.StringPtrInput
	MicrotenantId pulumi.StringPtrInput
	// This is the name of the policy.
	Name                  pulumi.StringPtrInput
	ZpnIsolationProfileId pulumi.StringPtrInput
}

func (PolicyIsolationRuleV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*policyIsolationRuleV2Args)(nil)).Elem()
}

type PolicyIsolationRuleV2Input interface {
	pulumi.Input

	ToPolicyIsolationRuleV2Output() PolicyIsolationRuleV2Output
	ToPolicyIsolationRuleV2OutputWithContext(ctx context.Context) PolicyIsolationRuleV2Output
}

func (*PolicyIsolationRuleV2) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyIsolationRuleV2)(nil)).Elem()
}

func (i *PolicyIsolationRuleV2) ToPolicyIsolationRuleV2Output() PolicyIsolationRuleV2Output {
	return i.ToPolicyIsolationRuleV2OutputWithContext(context.Background())
}

func (i *PolicyIsolationRuleV2) ToPolicyIsolationRuleV2OutputWithContext(ctx context.Context) PolicyIsolationRuleV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyIsolationRuleV2Output)
}

// PolicyIsolationRuleV2ArrayInput is an input type that accepts PolicyIsolationRuleV2Array and PolicyIsolationRuleV2ArrayOutput values.
// You can construct a concrete instance of `PolicyIsolationRuleV2ArrayInput` via:
//
//	PolicyIsolationRuleV2Array{ PolicyIsolationRuleV2Args{...} }
type PolicyIsolationRuleV2ArrayInput interface {
	pulumi.Input

	ToPolicyIsolationRuleV2ArrayOutput() PolicyIsolationRuleV2ArrayOutput
	ToPolicyIsolationRuleV2ArrayOutputWithContext(context.Context) PolicyIsolationRuleV2ArrayOutput
}

type PolicyIsolationRuleV2Array []PolicyIsolationRuleV2Input

func (PolicyIsolationRuleV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyIsolationRuleV2)(nil)).Elem()
}

func (i PolicyIsolationRuleV2Array) ToPolicyIsolationRuleV2ArrayOutput() PolicyIsolationRuleV2ArrayOutput {
	return i.ToPolicyIsolationRuleV2ArrayOutputWithContext(context.Background())
}

func (i PolicyIsolationRuleV2Array) ToPolicyIsolationRuleV2ArrayOutputWithContext(ctx context.Context) PolicyIsolationRuleV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyIsolationRuleV2ArrayOutput)
}

// PolicyIsolationRuleV2MapInput is an input type that accepts PolicyIsolationRuleV2Map and PolicyIsolationRuleV2MapOutput values.
// You can construct a concrete instance of `PolicyIsolationRuleV2MapInput` via:
//
//	PolicyIsolationRuleV2Map{ "key": PolicyIsolationRuleV2Args{...} }
type PolicyIsolationRuleV2MapInput interface {
	pulumi.Input

	ToPolicyIsolationRuleV2MapOutput() PolicyIsolationRuleV2MapOutput
	ToPolicyIsolationRuleV2MapOutputWithContext(context.Context) PolicyIsolationRuleV2MapOutput
}

type PolicyIsolationRuleV2Map map[string]PolicyIsolationRuleV2Input

func (PolicyIsolationRuleV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyIsolationRuleV2)(nil)).Elem()
}

func (i PolicyIsolationRuleV2Map) ToPolicyIsolationRuleV2MapOutput() PolicyIsolationRuleV2MapOutput {
	return i.ToPolicyIsolationRuleV2MapOutputWithContext(context.Background())
}

func (i PolicyIsolationRuleV2Map) ToPolicyIsolationRuleV2MapOutputWithContext(ctx context.Context) PolicyIsolationRuleV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyIsolationRuleV2MapOutput)
}

type PolicyIsolationRuleV2Output struct{ *pulumi.OutputState }

func (PolicyIsolationRuleV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyIsolationRuleV2)(nil)).Elem()
}

func (o PolicyIsolationRuleV2Output) ToPolicyIsolationRuleV2Output() PolicyIsolationRuleV2Output {
	return o
}

func (o PolicyIsolationRuleV2Output) ToPolicyIsolationRuleV2OutputWithContext(ctx context.Context) PolicyIsolationRuleV2Output {
	return o
}

// This is for providing the rule action.
func (o PolicyIsolationRuleV2Output) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyIsolationRuleV2) pulumi.StringPtrOutput { return v.Action }).(pulumi.StringPtrOutput)
}

// This is for proviidng the set of conditions for the policy.
func (o PolicyIsolationRuleV2Output) Conditions() PolicyIsolationRuleV2ConditionArrayOutput {
	return o.ApplyT(func(v *PolicyIsolationRuleV2) PolicyIsolationRuleV2ConditionArrayOutput { return v.Conditions }).(PolicyIsolationRuleV2ConditionArrayOutput)
}

// This is the description of the access policy.
func (o PolicyIsolationRuleV2Output) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyIsolationRuleV2) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyIsolationRuleV2Output) MicrotenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyIsolationRuleV2) pulumi.StringOutput { return v.MicrotenantId }).(pulumi.StringOutput)
}

// This is the name of the policy.
func (o PolicyIsolationRuleV2Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyIsolationRuleV2) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o PolicyIsolationRuleV2Output) PolicySetId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyIsolationRuleV2) pulumi.StringOutput { return v.PolicySetId }).(pulumi.StringOutput)
}

func (o PolicyIsolationRuleV2Output) ZpnIsolationProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyIsolationRuleV2) pulumi.StringOutput { return v.ZpnIsolationProfileId }).(pulumi.StringOutput)
}

type PolicyIsolationRuleV2ArrayOutput struct{ *pulumi.OutputState }

func (PolicyIsolationRuleV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyIsolationRuleV2)(nil)).Elem()
}

func (o PolicyIsolationRuleV2ArrayOutput) ToPolicyIsolationRuleV2ArrayOutput() PolicyIsolationRuleV2ArrayOutput {
	return o
}

func (o PolicyIsolationRuleV2ArrayOutput) ToPolicyIsolationRuleV2ArrayOutputWithContext(ctx context.Context) PolicyIsolationRuleV2ArrayOutput {
	return o
}

func (o PolicyIsolationRuleV2ArrayOutput) Index(i pulumi.IntInput) PolicyIsolationRuleV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PolicyIsolationRuleV2 {
		return vs[0].([]*PolicyIsolationRuleV2)[vs[1].(int)]
	}).(PolicyIsolationRuleV2Output)
}

type PolicyIsolationRuleV2MapOutput struct{ *pulumi.OutputState }

func (PolicyIsolationRuleV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyIsolationRuleV2)(nil)).Elem()
}

func (o PolicyIsolationRuleV2MapOutput) ToPolicyIsolationRuleV2MapOutput() PolicyIsolationRuleV2MapOutput {
	return o
}

func (o PolicyIsolationRuleV2MapOutput) ToPolicyIsolationRuleV2MapOutputWithContext(ctx context.Context) PolicyIsolationRuleV2MapOutput {
	return o
}

func (o PolicyIsolationRuleV2MapOutput) MapIndex(k pulumi.StringInput) PolicyIsolationRuleV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PolicyIsolationRuleV2 {
		return vs[0].(map[string]*PolicyIsolationRuleV2)[vs[1].(string)]
	}).(PolicyIsolationRuleV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyIsolationRuleV2Input)(nil)).Elem(), &PolicyIsolationRuleV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyIsolationRuleV2ArrayInput)(nil)).Elem(), PolicyIsolationRuleV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyIsolationRuleV2MapInput)(nil)).Elem(), PolicyIsolationRuleV2Map{})
	pulumi.RegisterOutputType(PolicyIsolationRuleV2Output{})
	pulumi.RegisterOutputType(PolicyIsolationRuleV2ArrayOutput{})
	pulumi.RegisterOutputType(PolicyIsolationRuleV2MapOutput{})
}
