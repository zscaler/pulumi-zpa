// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// * [Official documentation](https://help.zscaler.com/zpa/about-isolation-policy)
// * [API documentation](https://help.zscaler.com/zpa/configuring-isolation-policies-using-api)
//
// The **zpa_policy_isolation_rule** resource creates a policy isolation access rule in the Zscaler Private Access cloud.
//
//	⚠️ **WARNING:**: The attribute ``ruleOrder`` is now deprecated in favor of the new resource  ``policyAccessRuleReorder``
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			isolationProfile, err := zpa.GetIsolationProfile(ctx, &zpa.GetIsolationProfileArgs{
//				Name: pulumi.StringRef("zpa_isolation_profile"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			// Create Client Isolation Access Rule
//			_, err = zpa.NewPolicyAccessIsolationRule(ctx, "this", &zpa.PolicyAccessIsolationRuleArgs{
//				Description:           pulumi.String("Example_Isolation_Policy"),
//				Action:                pulumi.String("ISOLATE"),
//				Operator:              pulumi.String("AND"),
//				ZpnIsolationProfileId: pulumi.String(isolationProfile.Id),
//				Conditions: zpa.PolicyAccessIsolationRuleConditionArray{
//					&zpa.PolicyAccessIsolationRuleConditionArgs{
//						Operator: pulumi.String("OR"),
//						Operands: zpa.PolicyAccessIsolationRuleConditionOperandArray{
//							&zpa.PolicyAccessIsolationRuleConditionOperandArgs{
//								ObjectType: pulumi.String("CLIENT_TYPE"),
//								Lhs:        pulumi.String("id"),
//								Rhs:        pulumi.String("zpn_client_type_exporter"),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## LHS and RHS Values
//
// LHS and RHS values differ based on object types. Refer to the following table:
//
// | Object Type | LHS| RHS
// |----------|-----------|----------
// | APP | “"id"“ | “applicationSegmentId“ |
// | APP_GROUP | “"id"“ | “segmentGroupId“|
// | CLIENT_TYPE | “"id"“ | “zpnClientTypeExporter“ |
// | PLATFORM | “mac“, “ios“, “windows“, “android“, “linux“ | “"true"“ / “"false"“ |
// | EDGE_CONNECTOR_GROUP | “"id"“ | “edgeConnectorId“ |
// | IDP | “"id"“ | “identityProviderId“ |
// | SAML | “samlAttributeId“  | <Attribute_value_to_match> |
// | SCIM | “scimAttributeId“  | <Attribute_value_to_match>  |
// | SCIM_GROUP | “scimGroupAttributeId“  | <Attribute_value_to_match>  |
// | MACHINE_GRP | “"id"“ | “machineGroupId“ |
// | POSTURE | “postureUdid“  | “"true"“ / “"false"“ |
// | TRUSTED_NETWORK | “networkId“  | “"true"“ |
//
// ## Import
//
// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZPA configurations into Terraform-compliant HashiCorp Configuration Language.
//
// # Visit
//
// Policy Access Isolation Rule can be imported by using `<POLICY ISOLATION RULE ID>` as the import ID.
//
// For example:
//
// ```sh
// $ pulumi import zpa:index/policyAccessIsolationRule:PolicyAccessIsolationRule example <policy_isolation_rule_id>
// ```
type PolicyAccessIsolationRule struct {
	pulumi.CustomResourceState

	// This is for providing the rule action.
	Action pulumi.StringPtrOutput `pulumi:"action"`
	// This field defines the description of the server.
	ActionId          pulumi.StringPtrOutput `pulumi:"actionId"`
	BypassDefaultRule pulumi.BoolPtrOutput   `pulumi:"bypassDefaultRule"`
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyAccessIsolationRuleConditionArrayOutput `pulumi:"conditions"`
	// This is for providing a customer message for the user.
	CustomMsg pulumi.StringOutput `pulumi:"customMsg"`
	// This is for providing a customer message for the user.
	DefaultRule pulumi.BoolPtrOutput `pulumi:"defaultRule"`
	// This is the description of the access policy.
	Description    pulumi.StringPtrOutput `pulumi:"description"`
	LssDefaultRule pulumi.BoolPtrOutput   `pulumi:"lssDefaultRule"`
	MicrotenantId  pulumi.StringOutput    `pulumi:"microtenantId"`
	// This is the name of the policy.
	Name              pulumi.StringOutput    `pulumi:"name"`
	Operator          pulumi.StringOutput    `pulumi:"operator"`
	PolicySetId       pulumi.StringOutput    `pulumi:"policySetId"`
	PolicyType        pulumi.StringOutput    `pulumi:"policyType"`
	Priority          pulumi.StringOutput    `pulumi:"priority"`
	ReauthDefaultRule pulumi.BoolPtrOutput   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout pulumi.StringPtrOutput `pulumi:"reauthIdleTimeout"`
	ReauthTimeout     pulumi.StringPtrOutput `pulumi:"reauthTimeout"`
	// Deprecated: The `ruleOrder` field is now deprecated for all zpa access policy resources in favor of the resource `PolicyAccessReorderRule`
	RuleOrder              pulumi.StringOutput `pulumi:"ruleOrder"`
	ZpnCbiProfileId        pulumi.StringOutput `pulumi:"zpnCbiProfileId"`
	ZpnInspectionProfileId pulumi.StringOutput `pulumi:"zpnInspectionProfileId"`
	ZpnIsolationProfileId  pulumi.StringOutput `pulumi:"zpnIsolationProfileId"`
}

// NewPolicyAccessIsolationRule registers a new resource with the given unique name, arguments, and options.
func NewPolicyAccessIsolationRule(ctx *pulumi.Context,
	name string, args *PolicyAccessIsolationRuleArgs, opts ...pulumi.ResourceOption) (*PolicyAccessIsolationRule, error) {
	if args == nil {
		args = &PolicyAccessIsolationRuleArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PolicyAccessIsolationRule
	err := ctx.RegisterResource("zpa:index/policyAccessIsolationRule:PolicyAccessIsolationRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyAccessIsolationRule gets an existing PolicyAccessIsolationRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyAccessIsolationRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyAccessIsolationRuleState, opts ...pulumi.ResourceOption) (*PolicyAccessIsolationRule, error) {
	var resource PolicyAccessIsolationRule
	err := ctx.ReadResource("zpa:index/policyAccessIsolationRule:PolicyAccessIsolationRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyAccessIsolationRule resources.
type policyAccessIsolationRuleState struct {
	// This is for providing the rule action.
	Action *string `pulumi:"action"`
	// This field defines the description of the server.
	ActionId          *string `pulumi:"actionId"`
	BypassDefaultRule *bool   `pulumi:"bypassDefaultRule"`
	// This is for proviidng the set of conditions for the policy.
	Conditions []PolicyAccessIsolationRuleCondition `pulumi:"conditions"`
	// This is for providing a customer message for the user.
	CustomMsg *string `pulumi:"customMsg"`
	// This is for providing a customer message for the user.
	DefaultRule *bool `pulumi:"defaultRule"`
	// This is the description of the access policy.
	Description    *string `pulumi:"description"`
	LssDefaultRule *bool   `pulumi:"lssDefaultRule"`
	MicrotenantId  *string `pulumi:"microtenantId"`
	// This is the name of the policy.
	Name              *string `pulumi:"name"`
	Operator          *string `pulumi:"operator"`
	PolicySetId       *string `pulumi:"policySetId"`
	PolicyType        *string `pulumi:"policyType"`
	Priority          *string `pulumi:"priority"`
	ReauthDefaultRule *bool   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout *string `pulumi:"reauthIdleTimeout"`
	ReauthTimeout     *string `pulumi:"reauthTimeout"`
	// Deprecated: The `ruleOrder` field is now deprecated for all zpa access policy resources in favor of the resource `PolicyAccessReorderRule`
	RuleOrder              *string `pulumi:"ruleOrder"`
	ZpnCbiProfileId        *string `pulumi:"zpnCbiProfileId"`
	ZpnInspectionProfileId *string `pulumi:"zpnInspectionProfileId"`
	ZpnIsolationProfileId  *string `pulumi:"zpnIsolationProfileId"`
}

type PolicyAccessIsolationRuleState struct {
	// This is for providing the rule action.
	Action pulumi.StringPtrInput
	// This field defines the description of the server.
	ActionId          pulumi.StringPtrInput
	BypassDefaultRule pulumi.BoolPtrInput
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyAccessIsolationRuleConditionArrayInput
	// This is for providing a customer message for the user.
	CustomMsg pulumi.StringPtrInput
	// This is for providing a customer message for the user.
	DefaultRule pulumi.BoolPtrInput
	// This is the description of the access policy.
	Description    pulumi.StringPtrInput
	LssDefaultRule pulumi.BoolPtrInput
	MicrotenantId  pulumi.StringPtrInput
	// This is the name of the policy.
	Name              pulumi.StringPtrInput
	Operator          pulumi.StringPtrInput
	PolicySetId       pulumi.StringPtrInput
	PolicyType        pulumi.StringPtrInput
	Priority          pulumi.StringPtrInput
	ReauthDefaultRule pulumi.BoolPtrInput
	ReauthIdleTimeout pulumi.StringPtrInput
	ReauthTimeout     pulumi.StringPtrInput
	// Deprecated: The `ruleOrder` field is now deprecated for all zpa access policy resources in favor of the resource `PolicyAccessReorderRule`
	RuleOrder              pulumi.StringPtrInput
	ZpnCbiProfileId        pulumi.StringPtrInput
	ZpnInspectionProfileId pulumi.StringPtrInput
	ZpnIsolationProfileId  pulumi.StringPtrInput
}

func (PolicyAccessIsolationRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyAccessIsolationRuleState)(nil)).Elem()
}

type policyAccessIsolationRuleArgs struct {
	// This is for providing the rule action.
	Action *string `pulumi:"action"`
	// This field defines the description of the server.
	ActionId          *string `pulumi:"actionId"`
	BypassDefaultRule *bool   `pulumi:"bypassDefaultRule"`
	// This is for proviidng the set of conditions for the policy.
	Conditions []PolicyAccessIsolationRuleCondition `pulumi:"conditions"`
	// This is for providing a customer message for the user.
	CustomMsg *string `pulumi:"customMsg"`
	// This is for providing a customer message for the user.
	DefaultRule *bool `pulumi:"defaultRule"`
	// This is the description of the access policy.
	Description    *string `pulumi:"description"`
	LssDefaultRule *bool   `pulumi:"lssDefaultRule"`
	MicrotenantId  *string `pulumi:"microtenantId"`
	// This is the name of the policy.
	Name              *string `pulumi:"name"`
	Operator          *string `pulumi:"operator"`
	PolicySetId       *string `pulumi:"policySetId"`
	PolicyType        *string `pulumi:"policyType"`
	Priority          *string `pulumi:"priority"`
	ReauthDefaultRule *bool   `pulumi:"reauthDefaultRule"`
	ReauthIdleTimeout *string `pulumi:"reauthIdleTimeout"`
	ReauthTimeout     *string `pulumi:"reauthTimeout"`
	// Deprecated: The `ruleOrder` field is now deprecated for all zpa access policy resources in favor of the resource `PolicyAccessReorderRule`
	RuleOrder              *string `pulumi:"ruleOrder"`
	ZpnCbiProfileId        *string `pulumi:"zpnCbiProfileId"`
	ZpnInspectionProfileId *string `pulumi:"zpnInspectionProfileId"`
	ZpnIsolationProfileId  *string `pulumi:"zpnIsolationProfileId"`
}

// The set of arguments for constructing a PolicyAccessIsolationRule resource.
type PolicyAccessIsolationRuleArgs struct {
	// This is for providing the rule action.
	Action pulumi.StringPtrInput
	// This field defines the description of the server.
	ActionId          pulumi.StringPtrInput
	BypassDefaultRule pulumi.BoolPtrInput
	// This is for proviidng the set of conditions for the policy.
	Conditions PolicyAccessIsolationRuleConditionArrayInput
	// This is for providing a customer message for the user.
	CustomMsg pulumi.StringPtrInput
	// This is for providing a customer message for the user.
	DefaultRule pulumi.BoolPtrInput
	// This is the description of the access policy.
	Description    pulumi.StringPtrInput
	LssDefaultRule pulumi.BoolPtrInput
	MicrotenantId  pulumi.StringPtrInput
	// This is the name of the policy.
	Name              pulumi.StringPtrInput
	Operator          pulumi.StringPtrInput
	PolicySetId       pulumi.StringPtrInput
	PolicyType        pulumi.StringPtrInput
	Priority          pulumi.StringPtrInput
	ReauthDefaultRule pulumi.BoolPtrInput
	ReauthIdleTimeout pulumi.StringPtrInput
	ReauthTimeout     pulumi.StringPtrInput
	// Deprecated: The `ruleOrder` field is now deprecated for all zpa access policy resources in favor of the resource `PolicyAccessReorderRule`
	RuleOrder              pulumi.StringPtrInput
	ZpnCbiProfileId        pulumi.StringPtrInput
	ZpnInspectionProfileId pulumi.StringPtrInput
	ZpnIsolationProfileId  pulumi.StringPtrInput
}

func (PolicyAccessIsolationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyAccessIsolationRuleArgs)(nil)).Elem()
}

type PolicyAccessIsolationRuleInput interface {
	pulumi.Input

	ToPolicyAccessIsolationRuleOutput() PolicyAccessIsolationRuleOutput
	ToPolicyAccessIsolationRuleOutputWithContext(ctx context.Context) PolicyAccessIsolationRuleOutput
}

func (*PolicyAccessIsolationRule) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAccessIsolationRule)(nil)).Elem()
}

func (i *PolicyAccessIsolationRule) ToPolicyAccessIsolationRuleOutput() PolicyAccessIsolationRuleOutput {
	return i.ToPolicyAccessIsolationRuleOutputWithContext(context.Background())
}

func (i *PolicyAccessIsolationRule) ToPolicyAccessIsolationRuleOutputWithContext(ctx context.Context) PolicyAccessIsolationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAccessIsolationRuleOutput)
}

// PolicyAccessIsolationRuleArrayInput is an input type that accepts PolicyAccessIsolationRuleArray and PolicyAccessIsolationRuleArrayOutput values.
// You can construct a concrete instance of `PolicyAccessIsolationRuleArrayInput` via:
//
//	PolicyAccessIsolationRuleArray{ PolicyAccessIsolationRuleArgs{...} }
type PolicyAccessIsolationRuleArrayInput interface {
	pulumi.Input

	ToPolicyAccessIsolationRuleArrayOutput() PolicyAccessIsolationRuleArrayOutput
	ToPolicyAccessIsolationRuleArrayOutputWithContext(context.Context) PolicyAccessIsolationRuleArrayOutput
}

type PolicyAccessIsolationRuleArray []PolicyAccessIsolationRuleInput

func (PolicyAccessIsolationRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyAccessIsolationRule)(nil)).Elem()
}

func (i PolicyAccessIsolationRuleArray) ToPolicyAccessIsolationRuleArrayOutput() PolicyAccessIsolationRuleArrayOutput {
	return i.ToPolicyAccessIsolationRuleArrayOutputWithContext(context.Background())
}

func (i PolicyAccessIsolationRuleArray) ToPolicyAccessIsolationRuleArrayOutputWithContext(ctx context.Context) PolicyAccessIsolationRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAccessIsolationRuleArrayOutput)
}

// PolicyAccessIsolationRuleMapInput is an input type that accepts PolicyAccessIsolationRuleMap and PolicyAccessIsolationRuleMapOutput values.
// You can construct a concrete instance of `PolicyAccessIsolationRuleMapInput` via:
//
//	PolicyAccessIsolationRuleMap{ "key": PolicyAccessIsolationRuleArgs{...} }
type PolicyAccessIsolationRuleMapInput interface {
	pulumi.Input

	ToPolicyAccessIsolationRuleMapOutput() PolicyAccessIsolationRuleMapOutput
	ToPolicyAccessIsolationRuleMapOutputWithContext(context.Context) PolicyAccessIsolationRuleMapOutput
}

type PolicyAccessIsolationRuleMap map[string]PolicyAccessIsolationRuleInput

func (PolicyAccessIsolationRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyAccessIsolationRule)(nil)).Elem()
}

func (i PolicyAccessIsolationRuleMap) ToPolicyAccessIsolationRuleMapOutput() PolicyAccessIsolationRuleMapOutput {
	return i.ToPolicyAccessIsolationRuleMapOutputWithContext(context.Background())
}

func (i PolicyAccessIsolationRuleMap) ToPolicyAccessIsolationRuleMapOutputWithContext(ctx context.Context) PolicyAccessIsolationRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAccessIsolationRuleMapOutput)
}

type PolicyAccessIsolationRuleOutput struct{ *pulumi.OutputState }

func (PolicyAccessIsolationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAccessIsolationRule)(nil)).Elem()
}

func (o PolicyAccessIsolationRuleOutput) ToPolicyAccessIsolationRuleOutput() PolicyAccessIsolationRuleOutput {
	return o
}

func (o PolicyAccessIsolationRuleOutput) ToPolicyAccessIsolationRuleOutputWithContext(ctx context.Context) PolicyAccessIsolationRuleOutput {
	return o
}

// This is for providing the rule action.
func (o PolicyAccessIsolationRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAccessIsolationRule) pulumi.StringPtrOutput { return v.Action }).(pulumi.StringPtrOutput)
}

// This field defines the description of the server.
func (o PolicyAccessIsolationRuleOutput) ActionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAccessIsolationRule) pulumi.StringPtrOutput { return v.ActionId }).(pulumi.StringPtrOutput)
}

func (o PolicyAccessIsolationRuleOutput) BypassDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyAccessIsolationRule) pulumi.BoolPtrOutput { return v.BypassDefaultRule }).(pulumi.BoolPtrOutput)
}

// This is for proviidng the set of conditions for the policy.
func (o PolicyAccessIsolationRuleOutput) Conditions() PolicyAccessIsolationRuleConditionArrayOutput {
	return o.ApplyT(func(v *PolicyAccessIsolationRule) PolicyAccessIsolationRuleConditionArrayOutput { return v.Conditions }).(PolicyAccessIsolationRuleConditionArrayOutput)
}

// This is for providing a customer message for the user.
func (o PolicyAccessIsolationRuleOutput) CustomMsg() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessIsolationRule) pulumi.StringOutput { return v.CustomMsg }).(pulumi.StringOutput)
}

// This is for providing a customer message for the user.
func (o PolicyAccessIsolationRuleOutput) DefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyAccessIsolationRule) pulumi.BoolPtrOutput { return v.DefaultRule }).(pulumi.BoolPtrOutput)
}

// This is the description of the access policy.
func (o PolicyAccessIsolationRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAccessIsolationRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyAccessIsolationRuleOutput) LssDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyAccessIsolationRule) pulumi.BoolPtrOutput { return v.LssDefaultRule }).(pulumi.BoolPtrOutput)
}

func (o PolicyAccessIsolationRuleOutput) MicrotenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessIsolationRule) pulumi.StringOutput { return v.MicrotenantId }).(pulumi.StringOutput)
}

// This is the name of the policy.
func (o PolicyAccessIsolationRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessIsolationRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o PolicyAccessIsolationRuleOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessIsolationRule) pulumi.StringOutput { return v.Operator }).(pulumi.StringOutput)
}

func (o PolicyAccessIsolationRuleOutput) PolicySetId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessIsolationRule) pulumi.StringOutput { return v.PolicySetId }).(pulumi.StringOutput)
}

func (o PolicyAccessIsolationRuleOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessIsolationRule) pulumi.StringOutput { return v.PolicyType }).(pulumi.StringOutput)
}

func (o PolicyAccessIsolationRuleOutput) Priority() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessIsolationRule) pulumi.StringOutput { return v.Priority }).(pulumi.StringOutput)
}

func (o PolicyAccessIsolationRuleOutput) ReauthDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyAccessIsolationRule) pulumi.BoolPtrOutput { return v.ReauthDefaultRule }).(pulumi.BoolPtrOutput)
}

func (o PolicyAccessIsolationRuleOutput) ReauthIdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAccessIsolationRule) pulumi.StringPtrOutput { return v.ReauthIdleTimeout }).(pulumi.StringPtrOutput)
}

func (o PolicyAccessIsolationRuleOutput) ReauthTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAccessIsolationRule) pulumi.StringPtrOutput { return v.ReauthTimeout }).(pulumi.StringPtrOutput)
}

// Deprecated: The `ruleOrder` field is now deprecated for all zpa access policy resources in favor of the resource `PolicyAccessReorderRule`
func (o PolicyAccessIsolationRuleOutput) RuleOrder() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessIsolationRule) pulumi.StringOutput { return v.RuleOrder }).(pulumi.StringOutput)
}

func (o PolicyAccessIsolationRuleOutput) ZpnCbiProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessIsolationRule) pulumi.StringOutput { return v.ZpnCbiProfileId }).(pulumi.StringOutput)
}

func (o PolicyAccessIsolationRuleOutput) ZpnInspectionProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessIsolationRule) pulumi.StringOutput { return v.ZpnInspectionProfileId }).(pulumi.StringOutput)
}

func (o PolicyAccessIsolationRuleOutput) ZpnIsolationProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAccessIsolationRule) pulumi.StringOutput { return v.ZpnIsolationProfileId }).(pulumi.StringOutput)
}

type PolicyAccessIsolationRuleArrayOutput struct{ *pulumi.OutputState }

func (PolicyAccessIsolationRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyAccessIsolationRule)(nil)).Elem()
}

func (o PolicyAccessIsolationRuleArrayOutput) ToPolicyAccessIsolationRuleArrayOutput() PolicyAccessIsolationRuleArrayOutput {
	return o
}

func (o PolicyAccessIsolationRuleArrayOutput) ToPolicyAccessIsolationRuleArrayOutputWithContext(ctx context.Context) PolicyAccessIsolationRuleArrayOutput {
	return o
}

func (o PolicyAccessIsolationRuleArrayOutput) Index(i pulumi.IntInput) PolicyAccessIsolationRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PolicyAccessIsolationRule {
		return vs[0].([]*PolicyAccessIsolationRule)[vs[1].(int)]
	}).(PolicyAccessIsolationRuleOutput)
}

type PolicyAccessIsolationRuleMapOutput struct{ *pulumi.OutputState }

func (PolicyAccessIsolationRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyAccessIsolationRule)(nil)).Elem()
}

func (o PolicyAccessIsolationRuleMapOutput) ToPolicyAccessIsolationRuleMapOutput() PolicyAccessIsolationRuleMapOutput {
	return o
}

func (o PolicyAccessIsolationRuleMapOutput) ToPolicyAccessIsolationRuleMapOutputWithContext(ctx context.Context) PolicyAccessIsolationRuleMapOutput {
	return o
}

func (o PolicyAccessIsolationRuleMapOutput) MapIndex(k pulumi.StringInput) PolicyAccessIsolationRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PolicyAccessIsolationRule {
		return vs[0].(map[string]*PolicyAccessIsolationRule)[vs[1].(string)]
	}).(PolicyAccessIsolationRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAccessIsolationRuleInput)(nil)).Elem(), &PolicyAccessIsolationRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAccessIsolationRuleArrayInput)(nil)).Elem(), PolicyAccessIsolationRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAccessIsolationRuleMapInput)(nil)).Elem(), PolicyAccessIsolationRuleMap{})
	pulumi.RegisterOutputType(PolicyAccessIsolationRuleOutput{})
	pulumi.RegisterOutputType(PolicyAccessIsolationRuleArrayOutput{})
	pulumi.RegisterOutputType(PolicyAccessIsolationRuleMapOutput{})
}
