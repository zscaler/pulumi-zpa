// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// * [Official documentation](https://help.zscaler.com/zpa/about-privileged-approvals)
// * [API documentation](https://help.zscaler.com/zpa/configuring-privileged-approvals-using-api)
//
// The **zpa_pra_approval_controller** resource creates a privileged remote access approval in the Zscaler Private Access cloud. This resource allows third-party users and contractors to be able to log in to a Privileged Remote Access (PRA) portal.
//
// ## Import
//
// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZPA configurations into Terraform-compliant HashiCorp Configuration Language.
//
// # Visit
//
// **zpa_pra_approval_controller** can be imported by using `<APPROVAL ID>` or `<APPROVAL NAME>` as the import ID.
//
// For example:
//
// ```sh
// $ pulumi import zpa:index/praApprovalController:PraApprovalController this <approval_id>
// ```
//
// or
//
// ```sh
// $ pulumi import zpa:index/praApprovalController:PraApprovalController this <approval_name>
// ```
//
// Deprecated: zpa.index/praapprovalcontroller.PraApprovalController has been deprecated in favor of zpa.index/praapproval.PRAApproval
type PraApprovalController struct {
	pulumi.CustomResourceState

	Applications PraApprovalControllerApplicationArrayOutput `pulumi:"applications"`
	// The email address of the user that you are assigning the privileged approval to
	EmailIds pulumi.StringArrayOutput `pulumi:"emailIds"`
	// The end date that the user no longer has access to the privileged approval
	EndTime pulumi.StringOutput `pulumi:"endTime"`
	// The unique identifier of the Microtenant for the ZPA tenant. If you are within the Default Microtenant, pass
	// microtenantId as 0 when making requests to retrieve data from the Default Microtenant.
	MicrotenantId pulumi.StringOutput `pulumi:"microtenantId"`
	// The start date that the user has access to the privileged approval
	StartTime pulumi.StringOutput `pulumi:"startTime"`
	// The status of the privileged approval
	Status       pulumi.StringOutput                         `pulumi:"status"`
	WorkingHours PraApprovalControllerWorkingHourArrayOutput `pulumi:"workingHours"`
}

// NewPraApprovalController registers a new resource with the given unique name, arguments, and options.
func NewPraApprovalController(ctx *pulumi.Context,
	name string, args *PraApprovalControllerArgs, opts ...pulumi.ResourceOption) (*PraApprovalController, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Applications == nil {
		return nil, errors.New("invalid value for required argument 'Applications'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PraApprovalController
	err := ctx.RegisterResource("zpa:index/praApprovalController:PraApprovalController", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPraApprovalController gets an existing PraApprovalController resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPraApprovalController(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PraApprovalControllerState, opts ...pulumi.ResourceOption) (*PraApprovalController, error) {
	var resource PraApprovalController
	err := ctx.ReadResource("zpa:index/praApprovalController:PraApprovalController", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PraApprovalController resources.
type praApprovalControllerState struct {
	Applications []PraApprovalControllerApplication `pulumi:"applications"`
	// The email address of the user that you are assigning the privileged approval to
	EmailIds []string `pulumi:"emailIds"`
	// The end date that the user no longer has access to the privileged approval
	EndTime *string `pulumi:"endTime"`
	// The unique identifier of the Microtenant for the ZPA tenant. If you are within the Default Microtenant, pass
	// microtenantId as 0 when making requests to retrieve data from the Default Microtenant.
	MicrotenantId *string `pulumi:"microtenantId"`
	// The start date that the user has access to the privileged approval
	StartTime *string `pulumi:"startTime"`
	// The status of the privileged approval
	Status       *string                            `pulumi:"status"`
	WorkingHours []PraApprovalControllerWorkingHour `pulumi:"workingHours"`
}

type PraApprovalControllerState struct {
	Applications PraApprovalControllerApplicationArrayInput
	// The email address of the user that you are assigning the privileged approval to
	EmailIds pulumi.StringArrayInput
	// The end date that the user no longer has access to the privileged approval
	EndTime pulumi.StringPtrInput
	// The unique identifier of the Microtenant for the ZPA tenant. If you are within the Default Microtenant, pass
	// microtenantId as 0 when making requests to retrieve data from the Default Microtenant.
	MicrotenantId pulumi.StringPtrInput
	// The start date that the user has access to the privileged approval
	StartTime pulumi.StringPtrInput
	// The status of the privileged approval
	Status       pulumi.StringPtrInput
	WorkingHours PraApprovalControllerWorkingHourArrayInput
}

func (PraApprovalControllerState) ElementType() reflect.Type {
	return reflect.TypeOf((*praApprovalControllerState)(nil)).Elem()
}

type praApprovalControllerArgs struct {
	Applications []PraApprovalControllerApplication `pulumi:"applications"`
	// The email address of the user that you are assigning the privileged approval to
	EmailIds []string `pulumi:"emailIds"`
	// The end date that the user no longer has access to the privileged approval
	EndTime *string `pulumi:"endTime"`
	// The unique identifier of the Microtenant for the ZPA tenant. If you are within the Default Microtenant, pass
	// microtenantId as 0 when making requests to retrieve data from the Default Microtenant.
	MicrotenantId *string `pulumi:"microtenantId"`
	// The start date that the user has access to the privileged approval
	StartTime *string `pulumi:"startTime"`
	// The status of the privileged approval
	Status       *string                            `pulumi:"status"`
	WorkingHours []PraApprovalControllerWorkingHour `pulumi:"workingHours"`
}

// The set of arguments for constructing a PraApprovalController resource.
type PraApprovalControllerArgs struct {
	Applications PraApprovalControllerApplicationArrayInput
	// The email address of the user that you are assigning the privileged approval to
	EmailIds pulumi.StringArrayInput
	// The end date that the user no longer has access to the privileged approval
	EndTime pulumi.StringPtrInput
	// The unique identifier of the Microtenant for the ZPA tenant. If you are within the Default Microtenant, pass
	// microtenantId as 0 when making requests to retrieve data from the Default Microtenant.
	MicrotenantId pulumi.StringPtrInput
	// The start date that the user has access to the privileged approval
	StartTime pulumi.StringPtrInput
	// The status of the privileged approval
	Status       pulumi.StringPtrInput
	WorkingHours PraApprovalControllerWorkingHourArrayInput
}

func (PraApprovalControllerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*praApprovalControllerArgs)(nil)).Elem()
}

type PraApprovalControllerInput interface {
	pulumi.Input

	ToPraApprovalControllerOutput() PraApprovalControllerOutput
	ToPraApprovalControllerOutputWithContext(ctx context.Context) PraApprovalControllerOutput
}

func (*PraApprovalController) ElementType() reflect.Type {
	return reflect.TypeOf((**PraApprovalController)(nil)).Elem()
}

func (i *PraApprovalController) ToPraApprovalControllerOutput() PraApprovalControllerOutput {
	return i.ToPraApprovalControllerOutputWithContext(context.Background())
}

func (i *PraApprovalController) ToPraApprovalControllerOutputWithContext(ctx context.Context) PraApprovalControllerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PraApprovalControllerOutput)
}

// PraApprovalControllerArrayInput is an input type that accepts PraApprovalControllerArray and PraApprovalControllerArrayOutput values.
// You can construct a concrete instance of `PraApprovalControllerArrayInput` via:
//
//	PraApprovalControllerArray{ PraApprovalControllerArgs{...} }
type PraApprovalControllerArrayInput interface {
	pulumi.Input

	ToPraApprovalControllerArrayOutput() PraApprovalControllerArrayOutput
	ToPraApprovalControllerArrayOutputWithContext(context.Context) PraApprovalControllerArrayOutput
}

type PraApprovalControllerArray []PraApprovalControllerInput

func (PraApprovalControllerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PraApprovalController)(nil)).Elem()
}

func (i PraApprovalControllerArray) ToPraApprovalControllerArrayOutput() PraApprovalControllerArrayOutput {
	return i.ToPraApprovalControllerArrayOutputWithContext(context.Background())
}

func (i PraApprovalControllerArray) ToPraApprovalControllerArrayOutputWithContext(ctx context.Context) PraApprovalControllerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PraApprovalControllerArrayOutput)
}

// PraApprovalControllerMapInput is an input type that accepts PraApprovalControllerMap and PraApprovalControllerMapOutput values.
// You can construct a concrete instance of `PraApprovalControllerMapInput` via:
//
//	PraApprovalControllerMap{ "key": PraApprovalControllerArgs{...} }
type PraApprovalControllerMapInput interface {
	pulumi.Input

	ToPraApprovalControllerMapOutput() PraApprovalControllerMapOutput
	ToPraApprovalControllerMapOutputWithContext(context.Context) PraApprovalControllerMapOutput
}

type PraApprovalControllerMap map[string]PraApprovalControllerInput

func (PraApprovalControllerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PraApprovalController)(nil)).Elem()
}

func (i PraApprovalControllerMap) ToPraApprovalControllerMapOutput() PraApprovalControllerMapOutput {
	return i.ToPraApprovalControllerMapOutputWithContext(context.Background())
}

func (i PraApprovalControllerMap) ToPraApprovalControllerMapOutputWithContext(ctx context.Context) PraApprovalControllerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PraApprovalControllerMapOutput)
}

type PraApprovalControllerOutput struct{ *pulumi.OutputState }

func (PraApprovalControllerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PraApprovalController)(nil)).Elem()
}

func (o PraApprovalControllerOutput) ToPraApprovalControllerOutput() PraApprovalControllerOutput {
	return o
}

func (o PraApprovalControllerOutput) ToPraApprovalControllerOutputWithContext(ctx context.Context) PraApprovalControllerOutput {
	return o
}

func (o PraApprovalControllerOutput) Applications() PraApprovalControllerApplicationArrayOutput {
	return o.ApplyT(func(v *PraApprovalController) PraApprovalControllerApplicationArrayOutput { return v.Applications }).(PraApprovalControllerApplicationArrayOutput)
}

// The email address of the user that you are assigning the privileged approval to
func (o PraApprovalControllerOutput) EmailIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PraApprovalController) pulumi.StringArrayOutput { return v.EmailIds }).(pulumi.StringArrayOutput)
}

// The end date that the user no longer has access to the privileged approval
func (o PraApprovalControllerOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v *PraApprovalController) pulumi.StringOutput { return v.EndTime }).(pulumi.StringOutput)
}

// The unique identifier of the Microtenant for the ZPA tenant. If you are within the Default Microtenant, pass
// microtenantId as 0 when making requests to retrieve data from the Default Microtenant.
func (o PraApprovalControllerOutput) MicrotenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *PraApprovalController) pulumi.StringOutput { return v.MicrotenantId }).(pulumi.StringOutput)
}

// The start date that the user has access to the privileged approval
func (o PraApprovalControllerOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v *PraApprovalController) pulumi.StringOutput { return v.StartTime }).(pulumi.StringOutput)
}

// The status of the privileged approval
func (o PraApprovalControllerOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *PraApprovalController) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o PraApprovalControllerOutput) WorkingHours() PraApprovalControllerWorkingHourArrayOutput {
	return o.ApplyT(func(v *PraApprovalController) PraApprovalControllerWorkingHourArrayOutput { return v.WorkingHours }).(PraApprovalControllerWorkingHourArrayOutput)
}

type PraApprovalControllerArrayOutput struct{ *pulumi.OutputState }

func (PraApprovalControllerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PraApprovalController)(nil)).Elem()
}

func (o PraApprovalControllerArrayOutput) ToPraApprovalControllerArrayOutput() PraApprovalControllerArrayOutput {
	return o
}

func (o PraApprovalControllerArrayOutput) ToPraApprovalControllerArrayOutputWithContext(ctx context.Context) PraApprovalControllerArrayOutput {
	return o
}

func (o PraApprovalControllerArrayOutput) Index(i pulumi.IntInput) PraApprovalControllerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PraApprovalController {
		return vs[0].([]*PraApprovalController)[vs[1].(int)]
	}).(PraApprovalControllerOutput)
}

type PraApprovalControllerMapOutput struct{ *pulumi.OutputState }

func (PraApprovalControllerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PraApprovalController)(nil)).Elem()
}

func (o PraApprovalControllerMapOutput) ToPraApprovalControllerMapOutput() PraApprovalControllerMapOutput {
	return o
}

func (o PraApprovalControllerMapOutput) ToPraApprovalControllerMapOutputWithContext(ctx context.Context) PraApprovalControllerMapOutput {
	return o
}

func (o PraApprovalControllerMapOutput) MapIndex(k pulumi.StringInput) PraApprovalControllerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PraApprovalController {
		return vs[0].(map[string]*PraApprovalController)[vs[1].(string)]
	}).(PraApprovalControllerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PraApprovalControllerInput)(nil)).Elem(), &PraApprovalController{})
	pulumi.RegisterInputType(reflect.TypeOf((*PraApprovalControllerArrayInput)(nil)).Elem(), PraApprovalControllerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PraApprovalControllerMapInput)(nil)).Elem(), PraApprovalControllerMap{})
	pulumi.RegisterOutputType(PraApprovalControllerOutput{})
	pulumi.RegisterOutputType(PraApprovalControllerArrayOutput{})
	pulumi.RegisterOutputType(PraApprovalControllerMapOutput{})
}
