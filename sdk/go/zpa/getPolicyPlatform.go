// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/zscaler/pulumi-zpa/sdk/go/zpa/internal"
)

// Use the **zpa_access_policy_platforms** data source to get information about all platforms for the specified customer in the Zscaler Private Access cloud. This data source can be optionally used when defining the following policy types:
//   - “PolicyAccessRule“
//   - “PolicyAccessTimeOutRule“
//   - “PolicyAccessForwardingRule“
//   - “PolicyAccessIsolationRule“
//   - “PolicyAccessInspectionRule“
//
// The “objectType“ attribute must be defined as "PLATFORM" in the policy operand condition. To learn more see the To learn more see the [Getting Platform Types for a Customer](https://help.zscaler.com/zpa/configuring-access-policies-using-api#getPlatformTypes)
//
// > **NOTE** By Default the ZPA provider will return all platform types
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/zscaler/pulumi-zpa/sdk/go/zpa"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zpa.GetPolicyPlatform(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetPolicyPlatform(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetPolicyPlatformResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPolicyPlatformResult
	err := ctx.Invoke("zpa:index/getPolicyPlatform:getPolicyPlatform", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getPolicyPlatform.
type GetPolicyPlatformResult struct {
	Android string `pulumi:"android"`
	// The provider-assigned unique ID for this managed resource.
	Id      string `pulumi:"id"`
	Ios     string `pulumi:"ios"`
	Linux   string `pulumi:"linux"`
	Mac     string `pulumi:"mac"`
	Windows string `pulumi:"windows"`
}

func GetPolicyPlatformOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetPolicyPlatformResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetPolicyPlatformResult, error) {
		r, err := GetPolicyPlatform(ctx, opts...)
		var s GetPolicyPlatformResult
		if r != nil {
			s = *r
		}
		return s, err
	}).(GetPolicyPlatformResultOutput)
}

// A collection of values returned by getPolicyPlatform.
type GetPolicyPlatformResultOutput struct{ *pulumi.OutputState }

func (GetPolicyPlatformResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyPlatformResult)(nil)).Elem()
}

func (o GetPolicyPlatformResultOutput) ToGetPolicyPlatformResultOutput() GetPolicyPlatformResultOutput {
	return o
}

func (o GetPolicyPlatformResultOutput) ToGetPolicyPlatformResultOutputWithContext(ctx context.Context) GetPolicyPlatformResultOutput {
	return o
}

func (o GetPolicyPlatformResultOutput) Android() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyPlatformResult) string { return v.Android }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPolicyPlatformResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyPlatformResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPolicyPlatformResultOutput) Ios() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyPlatformResult) string { return v.Ios }).(pulumi.StringOutput)
}

func (o GetPolicyPlatformResultOutput) Linux() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyPlatformResult) string { return v.Linux }).(pulumi.StringOutput)
}

func (o GetPolicyPlatformResultOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyPlatformResult) string { return v.Mac }).(pulumi.StringOutput)
}

func (o GetPolicyPlatformResultOutput) Windows() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyPlatformResult) string { return v.Windows }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPolicyPlatformResultOutput{})
}
