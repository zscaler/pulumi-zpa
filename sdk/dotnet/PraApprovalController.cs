// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Zscaler.Zpa
{
    /// <summary>
    /// * [Official documentation](https://help.zscaler.com/zpa/about-privileged-approvals)
    /// * [API documentation](https://help.zscaler.com/zpa/configuring-privileged-approvals-using-api)
    /// 
    /// The **zpa_pra_approval_controller** resource creates a privileged remote access approval in the Zscaler Private Access cloud. This resource allows third-party users and contractors to be able to log in to a Privileged Remote Access (PRA) portal.
    /// 
    /// ## Import
    /// 
    /// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZPA configurations into Terraform-compliant HashiCorp Configuration Language.
    /// 
    /// Visit
    /// 
    /// **zpa_pra_approval_controller** can be imported by using `&lt;APPROVAL ID&gt;` or `&lt;APPROVAL NAME&gt;` as the import ID.
    /// 
    /// For example:
    /// 
    /// ```sh
    /// $ pulumi import zpa:index/praApprovalController:PraApprovalController this &lt;approval_id&gt;
    /// ```
    /// 
    /// or
    /// 
    /// ```sh
    /// $ pulumi import zpa:index/praApprovalController:PraApprovalController this &lt;approval_name&gt;
    /// ```
    /// </summary>
    [Obsolete(@"zpa.index/praapprovalcontroller.PraApprovalController has been deprecated in favor of zpa.index/praapproval.PRAApproval")]
    [ZpaResourceType("zpa:index/praApprovalController:PraApprovalController")]
    public partial class PraApprovalController : global::Pulumi.CustomResource
    {
        [Output("applications")]
        public Output<ImmutableArray<Outputs.PraApprovalControllerApplication>> Applications { get; private set; } = null!;

        /// <summary>
        /// The email address of the user that you are assigning the privileged approval to
        /// </summary>
        [Output("emailIds")]
        public Output<ImmutableArray<string>> EmailIds { get; private set; } = null!;

        /// <summary>
        /// The end date that the user no longer has access to the privileged approval
        /// </summary>
        [Output("endTime")]
        public Output<string> EndTime { get; private set; } = null!;

        /// <summary>
        /// The unique identifier of the Microtenant for the ZPA tenant. If you are within the Default Microtenant, pass
        /// microtenantId as 0 when making requests to retrieve data from the Default Microtenant.
        /// </summary>
        [Output("microtenantId")]
        public Output<string> MicrotenantId { get; private set; } = null!;

        /// <summary>
        /// The start date that the user has access to the privileged approval
        /// </summary>
        [Output("startTime")]
        public Output<string> StartTime { get; private set; } = null!;

        /// <summary>
        /// The status of the privileged approval
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("workingHours")]
        public Output<ImmutableArray<Outputs.PraApprovalControllerWorkingHour>> WorkingHours { get; private set; } = null!;


        /// <summary>
        /// Create a PraApprovalController resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PraApprovalController(string name, PraApprovalControllerArgs args, CustomResourceOptions? options = null)
            : base("zpa:index/praApprovalController:PraApprovalController", name, args ?? new PraApprovalControllerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PraApprovalController(string name, Input<string> id, PraApprovalControllerState? state = null, CustomResourceOptions? options = null)
            : base("zpa:index/praApprovalController:PraApprovalController", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/zscaler",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PraApprovalController resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PraApprovalController Get(string name, Input<string> id, PraApprovalControllerState? state = null, CustomResourceOptions? options = null)
        {
            return new PraApprovalController(name, id, state, options);
        }
    }

    public sealed class PraApprovalControllerArgs : global::Pulumi.ResourceArgs
    {
        [Input("applications", required: true)]
        private InputList<Inputs.PraApprovalControllerApplicationArgs>? _applications;
        public InputList<Inputs.PraApprovalControllerApplicationArgs> Applications
        {
            get => _applications ?? (_applications = new InputList<Inputs.PraApprovalControllerApplicationArgs>());
            set => _applications = value;
        }

        [Input("emailIds")]
        private InputList<string>? _emailIds;

        /// <summary>
        /// The email address of the user that you are assigning the privileged approval to
        /// </summary>
        public InputList<string> EmailIds
        {
            get => _emailIds ?? (_emailIds = new InputList<string>());
            set => _emailIds = value;
        }

        /// <summary>
        /// The end date that the user no longer has access to the privileged approval
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        /// <summary>
        /// The unique identifier of the Microtenant for the ZPA tenant. If you are within the Default Microtenant, pass
        /// microtenantId as 0 when making requests to retrieve data from the Default Microtenant.
        /// </summary>
        [Input("microtenantId")]
        public Input<string>? MicrotenantId { get; set; }

        /// <summary>
        /// The start date that the user has access to the privileged approval
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// The status of the privileged approval
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("workingHours")]
        private InputList<Inputs.PraApprovalControllerWorkingHourArgs>? _workingHours;
        public InputList<Inputs.PraApprovalControllerWorkingHourArgs> WorkingHours
        {
            get => _workingHours ?? (_workingHours = new InputList<Inputs.PraApprovalControllerWorkingHourArgs>());
            set => _workingHours = value;
        }

        public PraApprovalControllerArgs()
        {
        }
        public static new PraApprovalControllerArgs Empty => new PraApprovalControllerArgs();
    }

    public sealed class PraApprovalControllerState : global::Pulumi.ResourceArgs
    {
        [Input("applications")]
        private InputList<Inputs.PraApprovalControllerApplicationGetArgs>? _applications;
        public InputList<Inputs.PraApprovalControllerApplicationGetArgs> Applications
        {
            get => _applications ?? (_applications = new InputList<Inputs.PraApprovalControllerApplicationGetArgs>());
            set => _applications = value;
        }

        [Input("emailIds")]
        private InputList<string>? _emailIds;

        /// <summary>
        /// The email address of the user that you are assigning the privileged approval to
        /// </summary>
        public InputList<string> EmailIds
        {
            get => _emailIds ?? (_emailIds = new InputList<string>());
            set => _emailIds = value;
        }

        /// <summary>
        /// The end date that the user no longer has access to the privileged approval
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        /// <summary>
        /// The unique identifier of the Microtenant for the ZPA tenant. If you are within the Default Microtenant, pass
        /// microtenantId as 0 when making requests to retrieve data from the Default Microtenant.
        /// </summary>
        [Input("microtenantId")]
        public Input<string>? MicrotenantId { get; set; }

        /// <summary>
        /// The start date that the user has access to the privileged approval
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// The status of the privileged approval
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("workingHours")]
        private InputList<Inputs.PraApprovalControllerWorkingHourGetArgs>? _workingHours;
        public InputList<Inputs.PraApprovalControllerWorkingHourGetArgs> WorkingHours
        {
            get => _workingHours ?? (_workingHours = new InputList<Inputs.PraApprovalControllerWorkingHourGetArgs>());
            set => _workingHours = value;
        }

        public PraApprovalControllerState()
        {
        }
        public static new PraApprovalControllerState Empty => new PraApprovalControllerState();
    }
}
