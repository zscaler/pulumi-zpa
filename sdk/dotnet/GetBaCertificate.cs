// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Zscaler.Zpa
{
    public static class GetBaCertificate
    {
        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zpa/about-web-server-certificates)
        /// * [API documentation](https://help.zscaler.com/zpa/configuring-certificates-using-api)
        /// 
        /// Use the **zpa_ba_certificate** data source to get information about a browser access certificate created in the Zscaler Private Access cloud. This data source is required when creating a browser access application segment resource.
        /// 
        /// **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // ZPA Browser Access Data Source
        ///     var foo = Zpa.GetBaCertificate.Invoke(new()
        ///     {
        ///         Name = "example.acme.com",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // ZPA Browser Access Data Source
        ///     var foo = Zpa.GetBaCertificate.Invoke(new()
        ///     {
        ///         Id = "1234567890",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetBaCertificateResult> InvokeAsync(GetBaCertificateArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBaCertificateResult>("zpa:index/getBaCertificate:getBaCertificate", args ?? new GetBaCertificateArgs(), options.WithDefaults());

        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zpa/about-web-server-certificates)
        /// * [API documentation](https://help.zscaler.com/zpa/configuring-certificates-using-api)
        /// 
        /// Use the **zpa_ba_certificate** data source to get information about a browser access certificate created in the Zscaler Private Access cloud. This data source is required when creating a browser access application segment resource.
        /// 
        /// **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // ZPA Browser Access Data Source
        ///     var foo = Zpa.GetBaCertificate.Invoke(new()
        ///     {
        ///         Name = "example.acme.com",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // ZPA Browser Access Data Source
        ///     var foo = Zpa.GetBaCertificate.Invoke(new()
        ///     {
        ///         Id = "1234567890",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBaCertificateResult> Invoke(GetBaCertificateInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBaCertificateResult>("zpa:index/getBaCertificate:getBaCertificate", args ?? new GetBaCertificateInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zpa/about-web-server-certificates)
        /// * [API documentation](https://help.zscaler.com/zpa/configuring-certificates-using-api)
        /// 
        /// Use the **zpa_ba_certificate** data source to get information about a browser access certificate created in the Zscaler Private Access cloud. This data source is required when creating a browser access application segment resource.
        /// 
        /// **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // ZPA Browser Access Data Source
        ///     var foo = Zpa.GetBaCertificate.Invoke(new()
        ///     {
        ///         Name = "example.acme.com",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // ZPA Browser Access Data Source
        ///     var foo = Zpa.GetBaCertificate.Invoke(new()
        ///     {
        ///         Id = "1234567890",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBaCertificateResult> Invoke(GetBaCertificateInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetBaCertificateResult>("zpa:index/getBaCertificate:getBaCertificate", args ?? new GetBaCertificateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBaCertificateArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        public GetBaCertificateArgs()
        {
        }
        public static new GetBaCertificateArgs Empty => new GetBaCertificateArgs();
    }

    public sealed class GetBaCertificateInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetBaCertificateInvokeArgs()
        {
        }
        public static new GetBaCertificateInvokeArgs Empty => new GetBaCertificateInvokeArgs();
    }


    [OutputType]
    public sealed class GetBaCertificateResult
    {
        public readonly string CertChain;
        public readonly string Certificate;
        public readonly string Cname;
        public readonly string CreationTime;
        public readonly string Description;
        public readonly string? Id;
        public readonly string IssuedBy;
        public readonly string IssuedTo;
        public readonly string MicrotenantId;
        public readonly string ModifiedTime;
        public readonly string Modifiedby;
        public readonly string? Name;
        public readonly string PublicKey;
        public readonly ImmutableArray<string> Sans;
        public readonly string SerialNo;
        public readonly string Status;
        public readonly string ValidFromInEpochsec;
        public readonly string ValidToInEpochsec;

        [OutputConstructor]
        private GetBaCertificateResult(
            string certChain,

            string certificate,

            string cname,

            string creationTime,

            string description,

            string? id,

            string issuedBy,

            string issuedTo,

            string microtenantId,

            string modifiedTime,

            string modifiedby,

            string? name,

            string publicKey,

            ImmutableArray<string> sans,

            string serialNo,

            string status,

            string validFromInEpochsec,

            string validToInEpochsec)
        {
            CertChain = certChain;
            Certificate = certificate;
            Cname = cname;
            CreationTime = creationTime;
            Description = description;
            Id = id;
            IssuedBy = issuedBy;
            IssuedTo = issuedTo;
            MicrotenantId = microtenantId;
            ModifiedTime = modifiedTime;
            Modifiedby = modifiedby;
            Name = name;
            PublicKey = publicKey;
            Sans = sans;
            SerialNo = serialNo;
            Status = status;
            ValidFromInEpochsec = validFromInEpochsec;
            ValidToInEpochsec = validToInEpochsec;
        }
    }
}
