// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Zscaler.Zpa
{
    /// <summary>
    /// The **zpa_cloud_browser_isolation_external_profile** resource creates a Cloud Browser Isolation external profile. This resource can then be used in as part of `zpa.PolicyAccessIsolationRule` when the `action` attribute is set to `ISOLATE`.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Zpa = Pulumi.Zpa;
    /// using Zpa = Zscaler.Zpa;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var thisCloudBrowserIsolationBanner = Zpa.GetCloudBrowserIsolationBanner.Invoke(new()
    ///     {
    ///         Name = "Default",
    ///     });
    /// 
    ///     var singapore = Zpa.GetCloudBrowserIsolationRegion.Invoke(new()
    ///     {
    ///         Name = "Singapore",
    ///     });
    /// 
    ///     var frankfurt = Zpa.GetCloudBrowserIsolationRegion.Invoke(new()
    ///     {
    ///         Name = "Frankfurt",
    ///     });
    /// 
    ///     var thisCloudBrowserIsolationCertificate = Zpa.GetCloudBrowserIsolationCertificate.Invoke(new()
    ///     {
    ///         Name = "Zscaler Root Certificate",
    ///     });
    /// 
    ///     var thisCloudBrowserIsolationExternalProfile = new Zpa.CloudBrowserIsolationExternalProfile("thisCloudBrowserIsolationExternalProfile", new()
    ///     {
    ///         Description = "CBI_Profile_Example",
    ///         BannerId = thisCloudBrowserIsolationBanner.Apply(getCloudBrowserIsolationBannerResult =&gt; getCloudBrowserIsolationBannerResult.Id),
    ///         RegionIds = new[]
    ///         {
    ///             singapore.Apply(getCloudBrowserIsolationRegionResult =&gt; getCloudBrowserIsolationRegionResult.Id),
    ///         },
    ///         CertificateIds = new[]
    ///         {
    ///             thisCloudBrowserIsolationCertificate.Apply(getCloudBrowserIsolationCertificateResult =&gt; getCloudBrowserIsolationCertificateResult.Id),
    ///         },
    ///         UserExperiences = new[]
    ///         {
    ///             new Zpa.Inputs.CloudBrowserIsolationExternalProfileUserExperienceArgs
    ///             {
    ///                 SessionPersistence = true,
    ///                 BrowserInBrowser = true,
    ///             },
    ///         },
    ///         SecurityControls = new[]
    ///         {
    ///             new Zpa.Inputs.CloudBrowserIsolationExternalProfileSecurityControlArgs
    ///             {
    ///                 CopyPaste = "all",
    ///                 UploadDownload = "all",
    ///                 DocumentViewer = true,
    ///                 LocalRender = true,
    ///                 AllowPrinting = true,
    ///                 RestrictKeystrokes = false,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// </summary>
    [ZpaResourceType("zpa:index/cloudBrowserIsolationExternalProfile:CloudBrowserIsolationExternalProfile")]
    public partial class CloudBrowserIsolationExternalProfile : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the CBI banner to be exported.
        /// </summary>
        [Output("bannerId")]
        public Output<string> BannerId { get; private set; } = null!;

        /// <summary>
        /// The CBI security controls enabled for the profile
        /// * `id:` - (Optional) The ID of the CBI Certificate to be associated with the profile.
        /// </summary>
        [Output("certificateIds")]
        public Output<ImmutableArray<string>> CertificateIds { get; private set; } = null!;

        /// <summary>
        /// (Optional) - The description of the CBI profile
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the CBI banner to be exported.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The CBI region
        /// * `id:` - (Optional) The ID of CBI region where the profile must be deployed. At least 2 regions are required.
        /// </summary>
        [Output("regionIds")]
        public Output<ImmutableArray<string>> RegionIds { get; private set; } = null!;

        /// <summary>
        /// (Optional) The CBI security controls enabled for the profile
        /// * `copy_paste:` - (Optional) Enable or disable copy &amp; paste for local computer to isolation. Supported values are: `none` or `all`
        /// * `document_viewer:` - (Optional) Enable or disable to view Microsoft Office files in isolation.
        /// * `local_render:` - (Optional) Enables non-isolated hyperlinks to be opened on the user's native browser.
        /// * `upload_download:` - (Optional) Enable or disable file transfer from local computer to isolation. Supported values are: `none` or `all`
        /// * `allow_printing:` - (Optional) Enables the user to print web pages and documents rendered within the isolation browser. Supported values are: `true` or `false`
        /// * `restrict_keystrokes:` - (Optional) Prevents keyboard and text input to isolated web pages. Supported values are: `true` or `false`
        /// </summary>
        [Output("securityControls")]
        public Output<ImmutableArray<Outputs.CloudBrowserIsolationExternalProfileSecurityControl>> SecurityControls { get; private set; } = null!;

        /// <summary>
        /// The CBI security controls enabled for the profile
        /// * `session_persistence:` - (Optional) Save user cookies between sessions. If disabled, all cookies will be discarded when isolation session ends. Supported values are: `true` or `false`
        /// * `browser_in_browser:` - (Optional) Enable or disable browser-in-browser or native browser experience. Supported values are: `true` or `false`
        /// </summary>
        [Output("userExperiences")]
        public Output<ImmutableArray<Outputs.CloudBrowserIsolationExternalProfileUserExperience>> UserExperiences { get; private set; } = null!;


        /// <summary>
        /// Create a CloudBrowserIsolationExternalProfile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudBrowserIsolationExternalProfile(string name, CloudBrowserIsolationExternalProfileArgs args, CustomResourceOptions? options = null)
            : base("zpa:index/cloudBrowserIsolationExternalProfile:CloudBrowserIsolationExternalProfile", name, args ?? new CloudBrowserIsolationExternalProfileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudBrowserIsolationExternalProfile(string name, Input<string> id, CloudBrowserIsolationExternalProfileState? state = null, CustomResourceOptions? options = null)
            : base("zpa:index/cloudBrowserIsolationExternalProfile:CloudBrowserIsolationExternalProfile", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/zscaler",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudBrowserIsolationExternalProfile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudBrowserIsolationExternalProfile Get(string name, Input<string> id, CloudBrowserIsolationExternalProfileState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudBrowserIsolationExternalProfile(name, id, state, options);
        }
    }

    public sealed class CloudBrowserIsolationExternalProfileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the CBI banner to be exported.
        /// </summary>
        [Input("bannerId", required: true)]
        public Input<string> BannerId { get; set; } = null!;

        [Input("certificateIds")]
        private InputList<string>? _certificateIds;

        /// <summary>
        /// The CBI security controls enabled for the profile
        /// * `id:` - (Optional) The ID of the CBI Certificate to be associated with the profile.
        /// </summary>
        public InputList<string> CertificateIds
        {
            get => _certificateIds ?? (_certificateIds = new InputList<string>());
            set => _certificateIds = value;
        }

        /// <summary>
        /// (Optional) - The description of the CBI profile
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the CBI banner to be exported.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("regionIds")]
        private InputList<string>? _regionIds;

        /// <summary>
        /// The CBI region
        /// * `id:` - (Optional) The ID of CBI region where the profile must be deployed. At least 2 regions are required.
        /// </summary>
        public InputList<string> RegionIds
        {
            get => _regionIds ?? (_regionIds = new InputList<string>());
            set => _regionIds = value;
        }

        [Input("securityControls")]
        private InputList<Inputs.CloudBrowserIsolationExternalProfileSecurityControlArgs>? _securityControls;

        /// <summary>
        /// (Optional) The CBI security controls enabled for the profile
        /// * `copy_paste:` - (Optional) Enable or disable copy &amp; paste for local computer to isolation. Supported values are: `none` or `all`
        /// * `document_viewer:` - (Optional) Enable or disable to view Microsoft Office files in isolation.
        /// * `local_render:` - (Optional) Enables non-isolated hyperlinks to be opened on the user's native browser.
        /// * `upload_download:` - (Optional) Enable or disable file transfer from local computer to isolation. Supported values are: `none` or `all`
        /// * `allow_printing:` - (Optional) Enables the user to print web pages and documents rendered within the isolation browser. Supported values are: `true` or `false`
        /// * `restrict_keystrokes:` - (Optional) Prevents keyboard and text input to isolated web pages. Supported values are: `true` or `false`
        /// </summary>
        public InputList<Inputs.CloudBrowserIsolationExternalProfileSecurityControlArgs> SecurityControls
        {
            get => _securityControls ?? (_securityControls = new InputList<Inputs.CloudBrowserIsolationExternalProfileSecurityControlArgs>());
            set => _securityControls = value;
        }

        [Input("userExperiences")]
        private InputList<Inputs.CloudBrowserIsolationExternalProfileUserExperienceArgs>? _userExperiences;

        /// <summary>
        /// The CBI security controls enabled for the profile
        /// * `session_persistence:` - (Optional) Save user cookies between sessions. If disabled, all cookies will be discarded when isolation session ends. Supported values are: `true` or `false`
        /// * `browser_in_browser:` - (Optional) Enable or disable browser-in-browser or native browser experience. Supported values are: `true` or `false`
        /// </summary>
        public InputList<Inputs.CloudBrowserIsolationExternalProfileUserExperienceArgs> UserExperiences
        {
            get => _userExperiences ?? (_userExperiences = new InputList<Inputs.CloudBrowserIsolationExternalProfileUserExperienceArgs>());
            set => _userExperiences = value;
        }

        public CloudBrowserIsolationExternalProfileArgs()
        {
        }
        public static new CloudBrowserIsolationExternalProfileArgs Empty => new CloudBrowserIsolationExternalProfileArgs();
    }

    public sealed class CloudBrowserIsolationExternalProfileState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the CBI banner to be exported.
        /// </summary>
        [Input("bannerId")]
        public Input<string>? BannerId { get; set; }

        [Input("certificateIds")]
        private InputList<string>? _certificateIds;

        /// <summary>
        /// The CBI security controls enabled for the profile
        /// * `id:` - (Optional) The ID of the CBI Certificate to be associated with the profile.
        /// </summary>
        public InputList<string> CertificateIds
        {
            get => _certificateIds ?? (_certificateIds = new InputList<string>());
            set => _certificateIds = value;
        }

        /// <summary>
        /// (Optional) - The description of the CBI profile
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the CBI banner to be exported.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("regionIds")]
        private InputList<string>? _regionIds;

        /// <summary>
        /// The CBI region
        /// * `id:` - (Optional) The ID of CBI region where the profile must be deployed. At least 2 regions are required.
        /// </summary>
        public InputList<string> RegionIds
        {
            get => _regionIds ?? (_regionIds = new InputList<string>());
            set => _regionIds = value;
        }

        [Input("securityControls")]
        private InputList<Inputs.CloudBrowserIsolationExternalProfileSecurityControlGetArgs>? _securityControls;

        /// <summary>
        /// (Optional) The CBI security controls enabled for the profile
        /// * `copy_paste:` - (Optional) Enable or disable copy &amp; paste for local computer to isolation. Supported values are: `none` or `all`
        /// * `document_viewer:` - (Optional) Enable or disable to view Microsoft Office files in isolation.
        /// * `local_render:` - (Optional) Enables non-isolated hyperlinks to be opened on the user's native browser.
        /// * `upload_download:` - (Optional) Enable or disable file transfer from local computer to isolation. Supported values are: `none` or `all`
        /// * `allow_printing:` - (Optional) Enables the user to print web pages and documents rendered within the isolation browser. Supported values are: `true` or `false`
        /// * `restrict_keystrokes:` - (Optional) Prevents keyboard and text input to isolated web pages. Supported values are: `true` or `false`
        /// </summary>
        public InputList<Inputs.CloudBrowserIsolationExternalProfileSecurityControlGetArgs> SecurityControls
        {
            get => _securityControls ?? (_securityControls = new InputList<Inputs.CloudBrowserIsolationExternalProfileSecurityControlGetArgs>());
            set => _securityControls = value;
        }

        [Input("userExperiences")]
        private InputList<Inputs.CloudBrowserIsolationExternalProfileUserExperienceGetArgs>? _userExperiences;

        /// <summary>
        /// The CBI security controls enabled for the profile
        /// * `session_persistence:` - (Optional) Save user cookies between sessions. If disabled, all cookies will be discarded when isolation session ends. Supported values are: `true` or `false`
        /// * `browser_in_browser:` - (Optional) Enable or disable browser-in-browser or native browser experience. Supported values are: `true` or `false`
        /// </summary>
        public InputList<Inputs.CloudBrowserIsolationExternalProfileUserExperienceGetArgs> UserExperiences
        {
            get => _userExperiences ?? (_userExperiences = new InputList<Inputs.CloudBrowserIsolationExternalProfileUserExperienceGetArgs>());
            set => _userExperiences = value;
        }

        public CloudBrowserIsolationExternalProfileState()
        {
        }
        public static new CloudBrowserIsolationExternalProfileState Empty => new CloudBrowserIsolationExternalProfileState();
    }
}
