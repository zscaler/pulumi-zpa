// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Zscaler.Zpa
{
    public static class GetLSSConfigController
    {
        /// <summary>
        /// Use the **zpa_lss_config_controller** data source to get information about a Log Streaming (LSS) configuration resource created in the Zscaler Private Access.
        /// </summary>
        public static Task<GetLSSConfigControllerResult> InvokeAsync(GetLSSConfigControllerArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLSSConfigControllerResult>("zpa:index/getLSSConfigController:getLSSConfigController", args ?? new GetLSSConfigControllerArgs(), options.WithDefaults());

        /// <summary>
        /// Use the **zpa_lss_config_controller** data source to get information about a Log Streaming (LSS) configuration resource created in the Zscaler Private Access.
        /// </summary>
        public static Output<GetLSSConfigControllerResult> Invoke(GetLSSConfigControllerInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLSSConfigControllerResult>("zpa:index/getLSSConfigController:getLSSConfigController", args ?? new GetLSSConfigControllerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLSSConfigControllerArgs : global::Pulumi.InvokeArgs
    {
        [Input("configs")]
        private List<Inputs.GetLSSConfigControllerConfigArgs>? _configs;

        /// <summary>
        /// (Computed)
        /// </summary>
        public List<Inputs.GetLSSConfigControllerConfigArgs> Configs
        {
            get => _configs ?? (_configs = new List<Inputs.GetLSSConfigControllerConfigArgs>());
            set => _configs = value;
        }

        /// <summary>
        /// This field defines the name of the log streaming resource.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        public GetLSSConfigControllerArgs()
        {
        }
        public static new GetLSSConfigControllerArgs Empty => new GetLSSConfigControllerArgs();
    }

    public sealed class GetLSSConfigControllerInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("configs")]
        private InputList<Inputs.GetLSSConfigControllerConfigInputArgs>? _configs;

        /// <summary>
        /// (Computed)
        /// </summary>
        public InputList<Inputs.GetLSSConfigControllerConfigInputArgs> Configs
        {
            get => _configs ?? (_configs = new InputList<Inputs.GetLSSConfigControllerConfigInputArgs>());
            set => _configs = value;
        }

        /// <summary>
        /// This field defines the name of the log streaming resource.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        public GetLSSConfigControllerInvokeArgs()
        {
        }
        public static new GetLSSConfigControllerInvokeArgs Empty => new GetLSSConfigControllerInvokeArgs();
    }


    [OutputType]
    public sealed class GetLSSConfigControllerResult
    {
        /// <summary>
        /// (Computed)
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLSSConfigControllerConfigResult> Configs;
        /// <summary>
        /// (Computed)
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLSSConfigControllerConnectorGroupResult> ConnectorGroups;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? Id;
        public readonly ImmutableArray<Outputs.GetLSSConfigControllerPolicyRuleResult> PolicyRules;

        [OutputConstructor]
        private GetLSSConfigControllerResult(
            ImmutableArray<Outputs.GetLSSConfigControllerConfigResult> configs,

            ImmutableArray<Outputs.GetLSSConfigControllerConnectorGroupResult> connectorGroups,

            string? id,

            ImmutableArray<Outputs.GetLSSConfigControllerPolicyRuleResult> policyRules)
        {
            Configs = configs;
            ConnectorGroups = connectorGroups;
            Id = id;
            PolicyRules = policyRules;
        }
    }
}
