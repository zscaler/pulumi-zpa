// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Zscaler.Zpa
{
    public static class GetSCIMAttributeHeader
    {
        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zpa/about-scim)
        /// * [API documentation](https://help.zscaler.com/zpa/obtaining-scim-attribute-details-using-api)
        /// 
        /// Use the **zpa_scim_attribute_header** data source to get information about a SCIM attribute from an Identity Provider (IdP). This data source can then be referenced in an Access Policy, Timeout policy, Forwarding Policy, Inspection Policy or Inspection Policy.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var givenName = Zpa.GetSCIMAttributeHeader.Invoke(new()
        ///     {
        ///         IdpName = "IdP_Name",
        ///         Name = "name.givenName",
        ///     });
        /// 
        ///     var familyName = Zpa.GetSCIMAttributeHeader.Invoke(new()
        ///     {
        ///         IdpName = "IdP_Name",
        ///         Name = "name.familyName",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetSCIMAttributeHeaderResult> InvokeAsync(GetSCIMAttributeHeaderArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSCIMAttributeHeaderResult>("zpa:index/getSCIMAttributeHeader:getSCIMAttributeHeader", args ?? new GetSCIMAttributeHeaderArgs(), options.WithDefaults());

        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zpa/about-scim)
        /// * [API documentation](https://help.zscaler.com/zpa/obtaining-scim-attribute-details-using-api)
        /// 
        /// Use the **zpa_scim_attribute_header** data source to get information about a SCIM attribute from an Identity Provider (IdP). This data source can then be referenced in an Access Policy, Timeout policy, Forwarding Policy, Inspection Policy or Inspection Policy.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var givenName = Zpa.GetSCIMAttributeHeader.Invoke(new()
        ///     {
        ///         IdpName = "IdP_Name",
        ///         Name = "name.givenName",
        ///     });
        /// 
        ///     var familyName = Zpa.GetSCIMAttributeHeader.Invoke(new()
        ///     {
        ///         IdpName = "IdP_Name",
        ///         Name = "name.familyName",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetSCIMAttributeHeaderResult> Invoke(GetSCIMAttributeHeaderInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSCIMAttributeHeaderResult>("zpa:index/getSCIMAttributeHeader:getSCIMAttributeHeader", args ?? new GetSCIMAttributeHeaderInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSCIMAttributeHeaderArgs : global::Pulumi.InvokeArgs
    {
        [Input("idpId")]
        public string? IdpId { get; set; }

        [Input("idpName")]
        public string? IdpName { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        public GetSCIMAttributeHeaderArgs()
        {
        }
        public static new GetSCIMAttributeHeaderArgs Empty => new GetSCIMAttributeHeaderArgs();
    }

    public sealed class GetSCIMAttributeHeaderInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("idpId")]
        public Input<string>? IdpId { get; set; }

        [Input("idpName")]
        public Input<string>? IdpName { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetSCIMAttributeHeaderInvokeArgs()
        {
        }
        public static new GetSCIMAttributeHeaderInvokeArgs Empty => new GetSCIMAttributeHeaderInvokeArgs();
    }


    [OutputType]
    public sealed class GetSCIMAttributeHeaderResult
    {
        public readonly ImmutableArray<string> CanonicalValues;
        public readonly bool CaseSensitive;
        public readonly string CreationTime;
        public readonly string DataType;
        public readonly string Description;
        public readonly string Id;
        public readonly string? IdpId;
        public readonly string? IdpName;
        public readonly string ModifiedTime;
        public readonly string Modifiedby;
        public readonly bool Multivalued;
        public readonly string Mutability;
        public readonly string? Name;
        public readonly bool Required;
        public readonly string Returned;
        public readonly string SchemaUri;
        public readonly bool Uniqueness;
        public readonly ImmutableArray<string> Values;

        [OutputConstructor]
        private GetSCIMAttributeHeaderResult(
            ImmutableArray<string> canonicalValues,

            bool caseSensitive,

            string creationTime,

            string dataType,

            string description,

            string id,

            string? idpId,

            string? idpName,

            string modifiedTime,

            string modifiedby,

            bool multivalued,

            string mutability,

            string? name,

            bool required,

            string returned,

            string schemaUri,

            bool uniqueness,

            ImmutableArray<string> values)
        {
            CanonicalValues = canonicalValues;
            CaseSensitive = caseSensitive;
            CreationTime = creationTime;
            DataType = dataType;
            Description = description;
            Id = id;
            IdpId = idpId;
            IdpName = idpName;
            ModifiedTime = modifiedTime;
            Modifiedby = modifiedby;
            Multivalued = multivalued;
            Mutability = mutability;
            Name = name;
            Required = required;
            Returned = returned;
            SchemaUri = schemaUri;
            Uniqueness = uniqueness;
            Values = values;
        }
    }
}
