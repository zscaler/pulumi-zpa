// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Zscaler.Zpa
{
    public static class GetInspectionProfile
    {
        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zpa/about-browser-protection-profiles)
        /// * [API documentation](https://help.zscaler.com/zpa/configuring-appprotection-profiles-using-api)
        /// 
        /// Use the **zpa_inspection_profile** data source to get information about an inspection profile in the Zscaler Private Access cloud. This resource can then be referenced in an inspection custom control resource.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Zpa.GetInspectionProfile.Invoke(new()
        ///     {
        ///         Name = "Example",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetInspectionProfileResult> InvokeAsync(GetInspectionProfileArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInspectionProfileResult>("zpa:index/getInspectionProfile:getInspectionProfile", args ?? new GetInspectionProfileArgs(), options.WithDefaults());

        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zpa/about-browser-protection-profiles)
        /// * [API documentation](https://help.zscaler.com/zpa/configuring-appprotection-profiles-using-api)
        /// 
        /// Use the **zpa_inspection_profile** data source to get information about an inspection profile in the Zscaler Private Access cloud. This resource can then be referenced in an inspection custom control resource.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Zpa.GetInspectionProfile.Invoke(new()
        ///     {
        ///         Name = "Example",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetInspectionProfileResult> Invoke(GetInspectionProfileInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInspectionProfileResult>("zpa:index/getInspectionProfile:getInspectionProfile", args ?? new GetInspectionProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInspectionProfileArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// - (String) This field defines the name of the inspection profile.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetInspectionProfileArgs()
        {
        }
        public static new GetInspectionProfileArgs Empty => new GetInspectionProfileArgs();
    }

    public sealed class GetInspectionProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// - (String) This field defines the name of the inspection profile.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetInspectionProfileInvokeArgs()
        {
        }
        public static new GetInspectionProfileInvokeArgs Empty => new GetInspectionProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetInspectionProfileResult
    {
        public readonly ImmutableDictionary<string, string> CommonGlobalOverrideActionsConfig;
        public readonly ImmutableArray<Outputs.GetInspectionProfileControlsInfoResult> ControlsInfos;
        public readonly string CreationTime;
        public readonly ImmutableArray<Outputs.GetInspectionProfileCustomControlResult> CustomControls;
        public readonly string Description;
        public readonly ImmutableArray<string> GlobalControlActions;
        public readonly string Id;
        public readonly string IncarnationNumber;
        public readonly string ModifiedBy;
        public readonly string ModifiedTime;
        /// <summary>
        /// - (String) This field defines the name of the inspection profile.
        /// </summary>
        public readonly string Name;
        public readonly string ParanoiaLevel;
        public readonly ImmutableArray<Outputs.GetInspectionProfilePredefinedControlResult> PredefinedControls;
        public readonly string PredefinedControlsVersion;
        public readonly ImmutableArray<Outputs.GetInspectionProfileWebSocketControlResult> WebSocketControls;

        [OutputConstructor]
        private GetInspectionProfileResult(
            ImmutableDictionary<string, string> commonGlobalOverrideActionsConfig,

            ImmutableArray<Outputs.GetInspectionProfileControlsInfoResult> controlsInfos,

            string creationTime,

            ImmutableArray<Outputs.GetInspectionProfileCustomControlResult> customControls,

            string description,

            ImmutableArray<string> globalControlActions,

            string id,

            string incarnationNumber,

            string modifiedBy,

            string modifiedTime,

            string name,

            string paranoiaLevel,

            ImmutableArray<Outputs.GetInspectionProfilePredefinedControlResult> predefinedControls,

            string predefinedControlsVersion,

            ImmutableArray<Outputs.GetInspectionProfileWebSocketControlResult> webSocketControls)
        {
            CommonGlobalOverrideActionsConfig = commonGlobalOverrideActionsConfig;
            ControlsInfos = controlsInfos;
            CreationTime = creationTime;
            CustomControls = customControls;
            Description = description;
            GlobalControlActions = globalControlActions;
            Id = id;
            IncarnationNumber = incarnationNumber;
            ModifiedBy = modifiedBy;
            ModifiedTime = modifiedTime;
            Name = name;
            ParanoiaLevel = paranoiaLevel;
            PredefinedControls = predefinedControls;
            PredefinedControlsVersion = predefinedControlsVersion;
            WebSocketControls = webSocketControls;
        }
    }
}
