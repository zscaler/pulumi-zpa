// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Zscaler.Zpa
{
    public static class GetCloudBrowserIsolationRegion
    {
        /// <summary>
        /// Use the **zpa_cloud_browser_isolation_region** data source to get information about Cloud Browser Isolation regions such as ID and Name. This data source information is required as part of the attribute `region_ids` when creating an Cloud Browser Isolation External Profile ``zpa.CloudBrowserIsolationExternalProfile``
        /// 
        /// **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Retrieve CBI Region ID and Name
        ///     var @this = Zpa.GetCloudBrowserIsolationRegion.Invoke(new()
        ///     {
        ///         Name = "Singapore",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCloudBrowserIsolationRegionResult> InvokeAsync(GetCloudBrowserIsolationRegionArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCloudBrowserIsolationRegionResult>("zpa:index/getCloudBrowserIsolationRegion:getCloudBrowserIsolationRegion", args ?? new GetCloudBrowserIsolationRegionArgs(), options.WithDefaults());

        /// <summary>
        /// Use the **zpa_cloud_browser_isolation_region** data source to get information about Cloud Browser Isolation regions such as ID and Name. This data source information is required as part of the attribute `region_ids` when creating an Cloud Browser Isolation External Profile ``zpa.CloudBrowserIsolationExternalProfile``
        /// 
        /// **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Retrieve CBI Region ID and Name
        ///     var @this = Zpa.GetCloudBrowserIsolationRegion.Invoke(new()
        ///     {
        ///         Name = "Singapore",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCloudBrowserIsolationRegionResult> Invoke(GetCloudBrowserIsolationRegionInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudBrowserIsolationRegionResult>("zpa:index/getCloudBrowserIsolationRegion:getCloudBrowserIsolationRegion", args ?? new GetCloudBrowserIsolationRegionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use the **zpa_cloud_browser_isolation_region** data source to get information about Cloud Browser Isolation regions such as ID and Name. This data source information is required as part of the attribute `region_ids` when creating an Cloud Browser Isolation External Profile ``zpa.CloudBrowserIsolationExternalProfile``
        /// 
        /// **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Retrieve CBI Region ID and Name
        ///     var @this = Zpa.GetCloudBrowserIsolationRegion.Invoke(new()
        ///     {
        ///         Name = "Singapore",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCloudBrowserIsolationRegionResult> Invoke(GetCloudBrowserIsolationRegionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudBrowserIsolationRegionResult>("zpa:index/getCloudBrowserIsolationRegion:getCloudBrowserIsolationRegion", args ?? new GetCloudBrowserIsolationRegionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudBrowserIsolationRegionArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        public GetCloudBrowserIsolationRegionArgs()
        {
        }
        public static new GetCloudBrowserIsolationRegionArgs Empty => new GetCloudBrowserIsolationRegionArgs();
    }

    public sealed class GetCloudBrowserIsolationRegionInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetCloudBrowserIsolationRegionInvokeArgs()
        {
        }
        public static new GetCloudBrowserIsolationRegionInvokeArgs Empty => new GetCloudBrowserIsolationRegionInvokeArgs();
    }


    [OutputType]
    public sealed class GetCloudBrowserIsolationRegionResult
    {
        public readonly string Id;
        public readonly string Name;

        [OutputConstructor]
        private GetCloudBrowserIsolationRegionResult(
            string id,

            string name)
        {
            Id = id;
            Name = name;
        }
    }
}
