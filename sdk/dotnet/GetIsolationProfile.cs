// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Zscaler.Zpa
{
    public static class GetIsolationProfile
    {
        /// <summary>
        /// Use the **zpa_isolation_profile** data source to get information about an isolation profile in the Zscaler Private Access cloud. This data source is required when configuring an isolation policy rule resource
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var isolationProfile = Zpa.GetIsolationProfile.Invoke(new()
        ///     {
        ///         Name = "zpa_isolation_profile",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetIsolationProfileResult> InvokeAsync(GetIsolationProfileArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIsolationProfileResult>("zpa:index/getIsolationProfile:getIsolationProfile", args ?? new GetIsolationProfileArgs(), options.WithDefaults());

        /// <summary>
        /// Use the **zpa_isolation_profile** data source to get information about an isolation profile in the Zscaler Private Access cloud. This data source is required when configuring an isolation policy rule resource
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var isolationProfile = Zpa.GetIsolationProfile.Invoke(new()
        ///     {
        ///         Name = "zpa_isolation_profile",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetIsolationProfileResult> Invoke(GetIsolationProfileInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIsolationProfileResult>("zpa:index/getIsolationProfile:getIsolationProfile", args ?? new GetIsolationProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIsolationProfileArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// This field defines the name of the isolation profile.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetIsolationProfileArgs()
        {
        }
        public static new GetIsolationProfileArgs Empty => new GetIsolationProfileArgs();
    }

    public sealed class GetIsolationProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// This field defines the name of the isolation profile.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetIsolationProfileInvokeArgs()
        {
        }
        public static new GetIsolationProfileInvokeArgs Empty => new GetIsolationProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetIsolationProfileResult
    {
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly bool Enabled;
        public readonly string Id;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string IsolationProfileId;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string IsolationTenantId;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string IsolationUrl;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string ModifiedTime;
        public readonly string Modifiedby;
        public readonly string? Name;

        [OutputConstructor]
        private GetIsolationProfileResult(
            string creationTime,

            string description,

            bool enabled,

            string id,

            string isolationProfileId,

            string isolationTenantId,

            string isolationUrl,

            string modifiedTime,

            string modifiedby,

            string? name)
        {
            CreationTime = creationTime;
            Description = description;
            Enabled = enabled;
            Id = id;
            IsolationProfileId = isolationProfileId;
            IsolationTenantId = isolationTenantId;
            IsolationUrl = isolationUrl;
            ModifiedTime = modifiedTime;
            Modifiedby = modifiedby;
            Name = name;
        }
    }
}
