// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Zscaler.Zpa
{
    public static class GetSCIMGroups
    {
        /// <summary>
        /// Use the **zpa_scim_groups** data source to get information about a SCIM Group from an Identity Provider (IdP). This data source can then be referenced in an Access Policy, Timeout policy, Forwarding Policy, Inspection Policy or Isolation Policy.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var engineering = Zpa.GetSCIMGroups.Invoke(new()
        ///     {
        ///         IdpName = "idp_name",
        ///         Name = "Engineering",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetSCIMGroupsResult> InvokeAsync(GetSCIMGroupsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSCIMGroupsResult>("zpa:index/getSCIMGroups:getSCIMGroups", args ?? new GetSCIMGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// Use the **zpa_scim_groups** data source to get information about a SCIM Group from an Identity Provider (IdP). This data source can then be referenced in an Access Policy, Timeout policy, Forwarding Policy, Inspection Policy or Isolation Policy.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var engineering = Zpa.GetSCIMGroups.Invoke(new()
        ///     {
        ///         IdpName = "idp_name",
        ///         Name = "Engineering",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetSCIMGroupsResult> Invoke(GetSCIMGroupsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSCIMGroupsResult>("zpa:index/getSCIMGroups:getSCIMGroups", args ?? new GetSCIMGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSCIMGroupsArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// (string) The ID of the IdP corresponding to the SAML attribute.
        /// </summary>
        [Input("idpId")]
        public int? IdpId { get; set; }

        /// <summary>
        /// Name. The name of the IdP where the scim group must be exported from.
        /// </summary>
        [Input("idpName")]
        public string? IdpName { get; set; }

        /// <summary>
        /// Name. The name of the scim group to be exported.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetSCIMGroupsArgs()
        {
        }
        public static new GetSCIMGroupsArgs Empty => new GetSCIMGroupsArgs();
    }

    public sealed class GetSCIMGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// (string) The ID of the IdP corresponding to the SAML attribute.
        /// </summary>
        [Input("idpId")]
        public Input<int>? IdpId { get; set; }

        /// <summary>
        /// Name. The name of the IdP where the scim group must be exported from.
        /// </summary>
        [Input("idpName")]
        public Input<string>? IdpName { get; set; }

        /// <summary>
        /// Name. The name of the scim group to be exported.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetSCIMGroupsInvokeArgs()
        {
        }
        public static new GetSCIMGroupsInvokeArgs Empty => new GetSCIMGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSCIMGroupsResult
    {
        /// <summary>
        /// (string)
        /// </summary>
        public readonly int CreationTime;
        public readonly string? Id;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string IdpGroupId;
        /// <summary>
        /// (string) The ID of the IdP corresponding to the SAML attribute.
        /// </summary>
        public readonly int? IdpId;
        public readonly string? IdpName;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly int ModifiedTime;
        public readonly string? Name;

        [OutputConstructor]
        private GetSCIMGroupsResult(
            int creationTime,

            string? id,

            string idpGroupId,

            int? idpId,

            string? idpName,

            int modifiedTime,

            string? name)
        {
            CreationTime = creationTime;
            Id = id;
            IdpGroupId = idpGroupId;
            IdpId = idpId;
            IdpName = idpName;
            ModifiedTime = modifiedTime;
            Name = name;
        }
    }
}
