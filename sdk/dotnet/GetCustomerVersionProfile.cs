// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Zscaler.Zpa
{
    public static class GetCustomerVersionProfile
    {
        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zpa/about-connectors)
        /// * [API documentation](https://help.zscaler.com/zpa/obtaining-version-profile-details-using-api)
        /// 
        /// Use the **zpa_customer_version_profile** data source to get information about all customer version profiles from the Zscaler Private Access cloud. This data source can be associated with an App Connector Group within the parameter `version_profile_id` or `version_profile_name`
        /// 
        /// The customer version profile IDs are:
        /// 
        /// * `Default` = `0`
        /// * `Previous Default` = `1`
        /// * `New Release` = `2`
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Retrieve "Default" customer version profile
        ///     var @default = Zpa.GetCustomerVersionProfile.Invoke(new()
        ///     {
        ///         Name = "Default",
        ///     });
        /// 
        ///     // Retrieve "Previous Default" customer version profile
        ///     var previousDefault = Zpa.GetCustomerVersionProfile.Invoke(new()
        ///     {
        ///         Name = "Previous Default",
        ///     });
        /// 
        ///     // Retrieve "New Release" customer version profile
        ///     var newRelease = Zpa.GetCustomerVersionProfile.Invoke(new()
        ///     {
        ///         Name = "New Release",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCustomerVersionProfileResult> InvokeAsync(GetCustomerVersionProfileArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCustomerVersionProfileResult>("zpa:index/getCustomerVersionProfile:getCustomerVersionProfile", args ?? new GetCustomerVersionProfileArgs(), options.WithDefaults());

        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zpa/about-connectors)
        /// * [API documentation](https://help.zscaler.com/zpa/obtaining-version-profile-details-using-api)
        /// 
        /// Use the **zpa_customer_version_profile** data source to get information about all customer version profiles from the Zscaler Private Access cloud. This data source can be associated with an App Connector Group within the parameter `version_profile_id` or `version_profile_name`
        /// 
        /// The customer version profile IDs are:
        /// 
        /// * `Default` = `0`
        /// * `Previous Default` = `1`
        /// * `New Release` = `2`
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Retrieve "Default" customer version profile
        ///     var @default = Zpa.GetCustomerVersionProfile.Invoke(new()
        ///     {
        ///         Name = "Default",
        ///     });
        /// 
        ///     // Retrieve "Previous Default" customer version profile
        ///     var previousDefault = Zpa.GetCustomerVersionProfile.Invoke(new()
        ///     {
        ///         Name = "Previous Default",
        ///     });
        /// 
        ///     // Retrieve "New Release" customer version profile
        ///     var newRelease = Zpa.GetCustomerVersionProfile.Invoke(new()
        ///     {
        ///         Name = "New Release",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCustomerVersionProfileResult> Invoke(GetCustomerVersionProfileInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCustomerVersionProfileResult>("zpa:index/getCustomerVersionProfile:getCustomerVersionProfile", args ?? new GetCustomerVersionProfileInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zpa/about-connectors)
        /// * [API documentation](https://help.zscaler.com/zpa/obtaining-version-profile-details-using-api)
        /// 
        /// Use the **zpa_customer_version_profile** data source to get information about all customer version profiles from the Zscaler Private Access cloud. This data source can be associated with an App Connector Group within the parameter `version_profile_id` or `version_profile_name`
        /// 
        /// The customer version profile IDs are:
        /// 
        /// * `Default` = `0`
        /// * `Previous Default` = `1`
        /// * `New Release` = `2`
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Retrieve "Default" customer version profile
        ///     var @default = Zpa.GetCustomerVersionProfile.Invoke(new()
        ///     {
        ///         Name = "Default",
        ///     });
        /// 
        ///     // Retrieve "Previous Default" customer version profile
        ///     var previousDefault = Zpa.GetCustomerVersionProfile.Invoke(new()
        ///     {
        ///         Name = "Previous Default",
        ///     });
        /// 
        ///     // Retrieve "New Release" customer version profile
        ///     var newRelease = Zpa.GetCustomerVersionProfile.Invoke(new()
        ///     {
        ///         Name = "New Release",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCustomerVersionProfileResult> Invoke(GetCustomerVersionProfileInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCustomerVersionProfileResult>("zpa:index/getCustomerVersionProfile:getCustomerVersionProfile", args ?? new GetCustomerVersionProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCustomerVersionProfileArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetCustomerVersionProfileArgs()
        {
        }
        public static new GetCustomerVersionProfileArgs Empty => new GetCustomerVersionProfileArgs();
    }

    public sealed class GetCustomerVersionProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetCustomerVersionProfileInvokeArgs()
        {
        }
        public static new GetCustomerVersionProfileInvokeArgs Empty => new GetCustomerVersionProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetCustomerVersionProfileResult
    {
        public readonly string CreationTime;
        public readonly ImmutableArray<Outputs.GetCustomerVersionProfileCustomScopeCustomerIdResult> CustomScopeCustomerIds;
        public readonly ImmutableArray<Outputs.GetCustomerVersionProfileCustomScopeRequestCustomerIdResult> CustomScopeRequestCustomerIds;
        public readonly string CustomerId;
        public readonly string Description;
        public readonly string Id;
        public readonly string ModifiedBy;
        public readonly string ModifiedTime;
        public readonly string Name;
        public readonly string NumberOfAssistants;
        public readonly string NumberOfCustomers;
        public readonly string NumberOfPrivateBrokers;
        public readonly string NumberOfSiteControllers;
        public readonly string NumberOfUpdatedAssistants;
        public readonly string NumberOfUpdatedPrivateBrokers;
        public readonly string NumberOfUpdatedSiteControllers;
        public readonly string UpgradePriority;
        public readonly ImmutableArray<Outputs.GetCustomerVersionProfileVersionResult> Versions;
        public readonly string VisibilityScope;

        [OutputConstructor]
        private GetCustomerVersionProfileResult(
            string creationTime,

            ImmutableArray<Outputs.GetCustomerVersionProfileCustomScopeCustomerIdResult> customScopeCustomerIds,

            ImmutableArray<Outputs.GetCustomerVersionProfileCustomScopeRequestCustomerIdResult> customScopeRequestCustomerIds,

            string customerId,

            string description,

            string id,

            string modifiedBy,

            string modifiedTime,

            string name,

            string numberOfAssistants,

            string numberOfCustomers,

            string numberOfPrivateBrokers,

            string numberOfSiteControllers,

            string numberOfUpdatedAssistants,

            string numberOfUpdatedPrivateBrokers,

            string numberOfUpdatedSiteControllers,

            string upgradePriority,

            ImmutableArray<Outputs.GetCustomerVersionProfileVersionResult> versions,

            string visibilityScope)
        {
            CreationTime = creationTime;
            CustomScopeCustomerIds = customScopeCustomerIds;
            CustomScopeRequestCustomerIds = customScopeRequestCustomerIds;
            CustomerId = customerId;
            Description = description;
            Id = id;
            ModifiedBy = modifiedBy;
            ModifiedTime = modifiedTime;
            Name = name;
            NumberOfAssistants = numberOfAssistants;
            NumberOfCustomers = numberOfCustomers;
            NumberOfPrivateBrokers = numberOfPrivateBrokers;
            NumberOfSiteControllers = numberOfSiteControllers;
            NumberOfUpdatedAssistants = numberOfUpdatedAssistants;
            NumberOfUpdatedPrivateBrokers = numberOfUpdatedPrivateBrokers;
            NumberOfUpdatedSiteControllers = numberOfUpdatedSiteControllers;
            UpgradePriority = upgradePriority;
            Versions = versions;
            VisibilityScope = visibilityScope;
        }
    }
}
