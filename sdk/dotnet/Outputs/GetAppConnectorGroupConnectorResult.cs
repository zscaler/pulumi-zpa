// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Zscaler.Zpa.Outputs
{

    [OutputType]
    public sealed class GetAppConnectorGroupConnectorResult
    {
        public readonly string AppconnectorGroupId;
        public readonly string AppconnectorGroupName;
        public readonly string ApplicationStartTime;
        public readonly string ControlChannelStatus;
        public readonly string CreationTime;
        public readonly string CtrlBrokerName;
        public readonly string CurrentVersion;
        public readonly string Description;
        public readonly bool Enabled;
        public readonly ImmutableDictionary<string, string> EnrollmentCert;
        public readonly string ExpectedUpgradeTime;
        public readonly string ExpectedVersion;
        public readonly string Fingerprint;
        public readonly string Id;
        public readonly string Ipacl;
        public readonly string IssuedCertId;
        public readonly string LastBrokerConnectTime;
        public readonly string LastBrokerConnectTimeDuration;
        public readonly string LastBrokerDisconnectTime;
        public readonly string LastBrokerDisconnectTimeDuration;
        public readonly string LastUpgradeTime;
        public readonly string Latitude;
        public readonly string Location;
        public readonly string Longitude;
        public readonly string ModifiedTime;
        public readonly string Modifiedby;
        public readonly string Name;
        public readonly string Platform;
        public readonly string PreviousVersion;
        public readonly string PrivateIp;
        public readonly string ProvisioningKeyId;
        public readonly string ProvisioningKeyName;
        public readonly string PublicIp;
        public readonly string SargeVersion;
        public readonly string UpgradeAttempt;
        public readonly string UpgradeStatus;

        [OutputConstructor]
        private GetAppConnectorGroupConnectorResult(
            string appconnectorGroupId,

            string appconnectorGroupName,

            string applicationStartTime,

            string controlChannelStatus,

            string creationTime,

            string ctrlBrokerName,

            string currentVersion,

            string description,

            bool enabled,

            ImmutableDictionary<string, string> enrollmentCert,

            string expectedUpgradeTime,

            string expectedVersion,

            string fingerprint,

            string id,

            string ipacl,

            string issuedCertId,

            string lastBrokerConnectTime,

            string lastBrokerConnectTimeDuration,

            string lastBrokerDisconnectTime,

            string lastBrokerDisconnectTimeDuration,

            string lastUpgradeTime,

            string latitude,

            string location,

            string longitude,

            string modifiedTime,

            string modifiedby,

            string name,

            string platform,

            string previousVersion,

            string privateIp,

            string provisioningKeyId,

            string provisioningKeyName,

            string publicIp,

            string sargeVersion,

            string upgradeAttempt,

            string upgradeStatus)
        {
            AppconnectorGroupId = appconnectorGroupId;
            AppconnectorGroupName = appconnectorGroupName;
            ApplicationStartTime = applicationStartTime;
            ControlChannelStatus = controlChannelStatus;
            CreationTime = creationTime;
            CtrlBrokerName = ctrlBrokerName;
            CurrentVersion = currentVersion;
            Description = description;
            Enabled = enabled;
            EnrollmentCert = enrollmentCert;
            ExpectedUpgradeTime = expectedUpgradeTime;
            ExpectedVersion = expectedVersion;
            Fingerprint = fingerprint;
            Id = id;
            Ipacl = ipacl;
            IssuedCertId = issuedCertId;
            LastBrokerConnectTime = lastBrokerConnectTime;
            LastBrokerConnectTimeDuration = lastBrokerConnectTimeDuration;
            LastBrokerDisconnectTime = lastBrokerDisconnectTime;
            LastBrokerDisconnectTimeDuration = lastBrokerDisconnectTimeDuration;
            LastUpgradeTime = lastUpgradeTime;
            Latitude = latitude;
            Location = location;
            Longitude = longitude;
            ModifiedTime = modifiedTime;
            Modifiedby = modifiedby;
            Name = name;
            Platform = platform;
            PreviousVersion = previousVersion;
            PrivateIp = privateIp;
            ProvisioningKeyId = provisioningKeyId;
            ProvisioningKeyName = provisioningKeyName;
            PublicIp = publicIp;
            SargeVersion = sargeVersion;
            UpgradeAttempt = upgradeAttempt;
            UpgradeStatus = upgradeStatus;
        }
    }
}
