// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Zscaler.Zpa.Outputs
{

    [OutputType]
    public sealed class GetAppConnectorControllerAssistantVersionResult
    {
        public readonly string AppConnectorGroupId;
        public readonly string ApplicationStartTime;
        public readonly string BrokerId;
        public readonly string CreationTime;
        public readonly string CtrlChannelStatus;
        public readonly string CurrentVersion;
        public readonly bool DisableAutoUpdate;
        public readonly string ExpectedVersion;
        public readonly string Id;
        public readonly string LastBrokerConnectTime;
        public readonly string LastBrokerDisconnectTime;
        public readonly string LastUpgradedTime;
        public readonly string Latitude;
        public readonly bool LoneWarrior;
        public readonly string Longitude;
        public readonly string ModifiedBy;
        public readonly string ModifiedTime;
        public readonly string MtunnelId;
        public readonly string Platform;
        public readonly string PlatformDetail;
        public readonly string PreviousVersion;
        public readonly string PrivateIp;
        public readonly string PublicIp;
        public readonly string RestartTimeInSec;
        public readonly string RuntimeOs;
        public readonly string SargeVersion;
        public readonly string SystemStartTime;
        public readonly string UpgradeAttempt;
        public readonly bool UpgradeNowOnce;
        public readonly string UpgradeStatus;

        [OutputConstructor]
        private GetAppConnectorControllerAssistantVersionResult(
            string appConnectorGroupId,

            string applicationStartTime,

            string brokerId,

            string creationTime,

            string ctrlChannelStatus,

            string currentVersion,

            bool disableAutoUpdate,

            string expectedVersion,

            string id,

            string lastBrokerConnectTime,

            string lastBrokerDisconnectTime,

            string lastUpgradedTime,

            string latitude,

            bool loneWarrior,

            string longitude,

            string modifiedBy,

            string modifiedTime,

            string mtunnelId,

            string platform,

            string platformDetail,

            string previousVersion,

            string privateIp,

            string publicIp,

            string restartTimeInSec,

            string runtimeOs,

            string sargeVersion,

            string systemStartTime,

            string upgradeAttempt,

            bool upgradeNowOnce,

            string upgradeStatus)
        {
            AppConnectorGroupId = appConnectorGroupId;
            ApplicationStartTime = applicationStartTime;
            BrokerId = brokerId;
            CreationTime = creationTime;
            CtrlChannelStatus = ctrlChannelStatus;
            CurrentVersion = currentVersion;
            DisableAutoUpdate = disableAutoUpdate;
            ExpectedVersion = expectedVersion;
            Id = id;
            LastBrokerConnectTime = lastBrokerConnectTime;
            LastBrokerDisconnectTime = lastBrokerDisconnectTime;
            LastUpgradedTime = lastUpgradedTime;
            Latitude = latitude;
            LoneWarrior = loneWarrior;
            Longitude = longitude;
            ModifiedBy = modifiedBy;
            ModifiedTime = modifiedTime;
            MtunnelId = mtunnelId;
            Platform = platform;
            PlatformDetail = platformDetail;
            PreviousVersion = previousVersion;
            PrivateIp = privateIp;
            PublicIp = publicIp;
            RestartTimeInSec = restartTimeInSec;
            RuntimeOs = runtimeOs;
            SargeVersion = sargeVersion;
            SystemStartTime = systemStartTime;
            UpgradeAttempt = upgradeAttempt;
            UpgradeNowOnce = upgradeNowOnce;
            UpgradeStatus = upgradeStatus;
        }
    }
}
