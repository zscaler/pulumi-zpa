// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Zscaler.Zpa.Outputs
{

    [OutputType]
    public sealed class ApplicationSegmentPRACommonAppsDtoAppsConfig
    {
        public readonly string? AppId;
        /// <summary>
        /// Indicates the type of application as Privileged Remote Access. Supported value: `SECURE_REMOTE_ACCESS`
        /// </summary>
        public readonly ImmutableArray<string> AppTypes;
        /// <summary>
        /// Port for the Privileged Remote Access
        /// </summary>
        public readonly string? ApplicationPort;
        /// <summary>
        /// Protocol for the Privileged Remote Access. Supported values: `RDP` and `SSH`
        /// </summary>
        public readonly string? ApplicationProtocol;
        /// <summary>
        /// Parameter required when `application_protocol` is of type `RDP`
        /// </summary>
        public readonly string? ConnectionSecurity;
        /// <summary>
        /// (Optional) Description of the application.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Domain name of the Privileged Remote Access
        /// </summary>
        public readonly string? Domain;
        /// <summary>
        /// Whether this application is enabled or not
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Name of the Privileged Remote Access
        /// </summary>
        public readonly string? Name;

        [OutputConstructor]
        private ApplicationSegmentPRACommonAppsDtoAppsConfig(
            string? appId,

            ImmutableArray<string> appTypes,

            string? applicationPort,

            string? applicationProtocol,

            string? connectionSecurity,

            string? description,

            string? domain,

            bool? enabled,

            string? name)
        {
            AppId = appId;
            AppTypes = appTypes;
            ApplicationPort = applicationPort;
            ApplicationProtocol = applicationProtocol;
            ConnectionSecurity = connectionSecurity;
            Description = description;
            Domain = domain;
            Enabled = enabled;
            Name = name;
        }
    }
}
