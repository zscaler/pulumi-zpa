// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Zscaler.Zpa.Outputs
{

    [OutputType]
    public sealed class LSSConfigControllerPolicyRuleResource
    {
        /// <summary>
        /// This is for providing the rule action.
        /// </summary>
        public readonly string? Action;
        /// <summary>
        /// This field defines the description of the server.
        /// </summary>
        public readonly string? ActionId;
        public readonly bool? BypassDefaultRule;
        /// <summary>
        /// This is for proviidng the set of conditions for the policy.
        /// </summary>
        public readonly ImmutableArray<Outputs.LSSConfigControllerPolicyRuleResourceCondition> Conditions;
        /// <summary>
        /// This is for providing a customer message for the user.
        /// </summary>
        public readonly string? CustomMsg;
        /// <summary>
        /// This is for providing a customer message for the user.
        /// </summary>
        public readonly bool? DefaultRule;
        /// <summary>
        /// This is the description of the access policy.
        /// </summary>
        public readonly string? Description;
        public readonly string? Id;
        public readonly bool? LssDefaultRule;
        public readonly string? MicrotenantId;
        /// <summary>
        /// This is the name of the policy.
        /// </summary>
        public readonly string Name;
        public readonly string? Operator;
        public readonly string? PolicySetId;
        public readonly string? PolicyType;
        public readonly string? Priority;
        public readonly bool? ReauthDefaultRule;
        public readonly string? ReauthIdleTimeout;
        public readonly string? ReauthTimeout;
        public readonly string? RuleOrder;
        public readonly string? ZpnCbiProfileId;
        public readonly string? ZpnInspectionProfileId;
        public readonly string? ZpnIsolationProfileId;

        [OutputConstructor]
        private LSSConfigControllerPolicyRuleResource(
            string? action,

            string? actionId,

            bool? bypassDefaultRule,

            ImmutableArray<Outputs.LSSConfigControllerPolicyRuleResourceCondition> conditions,

            string? customMsg,

            bool? defaultRule,

            string? description,

            string? id,

            bool? lssDefaultRule,

            string? microtenantId,

            string name,

            string? @operator,

            string? policySetId,

            string? policyType,

            string? priority,

            bool? reauthDefaultRule,

            string? reauthIdleTimeout,

            string? reauthTimeout,

            string? ruleOrder,

            string? zpnCbiProfileId,

            string? zpnInspectionProfileId,

            string? zpnIsolationProfileId)
        {
            Action = action;
            ActionId = actionId;
            BypassDefaultRule = bypassDefaultRule;
            Conditions = conditions;
            CustomMsg = customMsg;
            DefaultRule = defaultRule;
            Description = description;
            Id = id;
            LssDefaultRule = lssDefaultRule;
            MicrotenantId = microtenantId;
            Name = name;
            Operator = @operator;
            PolicySetId = policySetId;
            PolicyType = policyType;
            Priority = priority;
            ReauthDefaultRule = reauthDefaultRule;
            ReauthIdleTimeout = reauthIdleTimeout;
            ReauthTimeout = reauthTimeout;
            RuleOrder = ruleOrder;
            ZpnCbiProfileId = zpnCbiProfileId;
            ZpnInspectionProfileId = zpnInspectionProfileId;
            ZpnIsolationProfileId = zpnIsolationProfileId;
        }
    }
}
