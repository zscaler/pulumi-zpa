// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Zscaler.Zpa
{
    public static class GetSAMLAttribute
    {
        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zpa/about-saml-attributes)
        /// * [API documentation](https://help.zscaler.com/zpa/obtaining-saml-attribute-details-using-api)
        /// 
        /// Use the **zpa_saml_attribute** data source to get information about a SAML Attributes from an Identity Provider (IdP). This data source can then be referenced in an Access Policy, Timeout policy, Forwarding Policy, Inspection Policy or Isolation Policy.
        /// 
        /// **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // ZPA SAML Attribute Data Source
        ///     var emailUserSso = Zpa.GetSAMLAttribute.Invoke(new()
        ///     {
        ///         Name = "Email_User SSO",
        ///         IdpName = "idp_name",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // ZPA SAML Attribute Data Source
        ///     var department = Zpa.GetSAMLAttribute.Invoke(new()
        ///     {
        ///         Name = "DepartmentName_IdP_Name_Users",
        ///         IdpName = "idp_name",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSAMLAttributeResult> InvokeAsync(GetSAMLAttributeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSAMLAttributeResult>("zpa:index/getSAMLAttribute:getSAMLAttribute", args ?? new GetSAMLAttributeArgs(), options.WithDefaults());

        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zpa/about-saml-attributes)
        /// * [API documentation](https://help.zscaler.com/zpa/obtaining-saml-attribute-details-using-api)
        /// 
        /// Use the **zpa_saml_attribute** data source to get information about a SAML Attributes from an Identity Provider (IdP). This data source can then be referenced in an Access Policy, Timeout policy, Forwarding Policy, Inspection Policy or Isolation Policy.
        /// 
        /// **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // ZPA SAML Attribute Data Source
        ///     var emailUserSso = Zpa.GetSAMLAttribute.Invoke(new()
        ///     {
        ///         Name = "Email_User SSO",
        ///         IdpName = "idp_name",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // ZPA SAML Attribute Data Source
        ///     var department = Zpa.GetSAMLAttribute.Invoke(new()
        ///     {
        ///         Name = "DepartmentName_IdP_Name_Users",
        ///         IdpName = "idp_name",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSAMLAttributeResult> Invoke(GetSAMLAttributeInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSAMLAttributeResult>("zpa:index/getSAMLAttribute:getSAMLAttribute", args ?? new GetSAMLAttributeInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zpa/about-saml-attributes)
        /// * [API documentation](https://help.zscaler.com/zpa/obtaining-saml-attribute-details-using-api)
        /// 
        /// Use the **zpa_saml_attribute** data source to get information about a SAML Attributes from an Identity Provider (IdP). This data source can then be referenced in an Access Policy, Timeout policy, Forwarding Policy, Inspection Policy or Isolation Policy.
        /// 
        /// **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // ZPA SAML Attribute Data Source
        ///     var emailUserSso = Zpa.GetSAMLAttribute.Invoke(new()
        ///     {
        ///         Name = "Email_User SSO",
        ///         IdpName = "idp_name",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // ZPA SAML Attribute Data Source
        ///     var department = Zpa.GetSAMLAttribute.Invoke(new()
        ///     {
        ///         Name = "DepartmentName_IdP_Name_Users",
        ///         IdpName = "idp_name",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSAMLAttributeResult> Invoke(GetSAMLAttributeInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSAMLAttributeResult>("zpa:index/getSAMLAttribute:getSAMLAttribute", args ?? new GetSAMLAttributeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSAMLAttributeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        [Input("idpName")]
        public string? IdpName { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        public GetSAMLAttributeArgs()
        {
        }
        public static new GetSAMLAttributeArgs Empty => new GetSAMLAttributeArgs();
    }

    public sealed class GetSAMLAttributeInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("idpName")]
        public Input<string>? IdpName { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetSAMLAttributeInvokeArgs()
        {
        }
        public static new GetSAMLAttributeInvokeArgs Empty => new GetSAMLAttributeInvokeArgs();
    }


    [OutputType]
    public sealed class GetSAMLAttributeResult
    {
        public readonly string CreationTime;
        public readonly string Id;
        public readonly string IdpId;
        public readonly string? IdpName;
        public readonly string ModifiedTime;
        public readonly string Modifiedby;
        public readonly string Name;
        public readonly string SamlName;
        public readonly bool UserAttribute;

        [OutputConstructor]
        private GetSAMLAttributeResult(
            string creationTime,

            string id,

            string idpId,

            string? idpName,

            string modifiedTime,

            string modifiedby,

            string name,

            string samlName,

            bool userAttribute)
        {
            CreationTime = creationTime;
            Id = id;
            IdpId = idpId;
            IdpName = idpName;
            ModifiedTime = modifiedTime;
            Modifiedby = modifiedby;
            Name = name;
            SamlName = samlName;
            UserAttribute = userAttribute;
        }
    }
}
