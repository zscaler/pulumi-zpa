// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Zscaler.Zpa
{
    [Obsolete(@"zpa.index/getpracredentialpool.getPraCredentialPool has been deprecated in favor of zpa.index/getcredentialpool.getCredentialPool")]
    public static class GetPraCredentialPool
    {
        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zpa/about-privileged-credential-pools)
        /// * [API documentation](https://help.zscaler.com/zpa/configuring-privileged-credentials-using-api)
        /// 
        /// The **zpa_pra_credential_pool** data source to get information about a privileged remote access credential pool created in the Zscaler Private Access cloud.
        /// 
        /// **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
        /// 
        /// ## Example Usage
        /// 
        /// # Retrieves PRA Credential Pool By Name
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Zpa.GetCredentialPool.Invoke(new()
        ///     {
        ///         Name = "PRACredentialPool01",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// # Retrieves PRA Credential Pool By ID
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Zpa.GetCredentialPool.Invoke(new()
        ///     {
        ///         Id = "5458",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetPraCredentialPoolResult> InvokeAsync(GetPraCredentialPoolArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPraCredentialPoolResult>("zpa:index/getPraCredentialPool:getPraCredentialPool", args ?? new GetPraCredentialPoolArgs(), options.WithDefaults());

        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zpa/about-privileged-credential-pools)
        /// * [API documentation](https://help.zscaler.com/zpa/configuring-privileged-credentials-using-api)
        /// 
        /// The **zpa_pra_credential_pool** data source to get information about a privileged remote access credential pool created in the Zscaler Private Access cloud.
        /// 
        /// **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
        /// 
        /// ## Example Usage
        /// 
        /// # Retrieves PRA Credential Pool By Name
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Zpa.GetCredentialPool.Invoke(new()
        ///     {
        ///         Name = "PRACredentialPool01",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// # Retrieves PRA Credential Pool By ID
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Zpa.GetCredentialPool.Invoke(new()
        ///     {
        ///         Id = "5458",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPraCredentialPoolResult> Invoke(GetPraCredentialPoolInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPraCredentialPoolResult>("zpa:index/getPraCredentialPool:getPraCredentialPool", args ?? new GetPraCredentialPoolInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// * [Official documentation](https://help.zscaler.com/zpa/about-privileged-credential-pools)
        /// * [API documentation](https://help.zscaler.com/zpa/configuring-privileged-credentials-using-api)
        /// 
        /// The **zpa_pra_credential_pool** data source to get information about a privileged remote access credential pool created in the Zscaler Private Access cloud.
        /// 
        /// **NOTE:** To ensure consistent search results across data sources, please avoid using multiple spaces or special characters in your search queries.
        /// 
        /// ## Example Usage
        /// 
        /// # Retrieves PRA Credential Pool By Name
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Zpa.GetCredentialPool.Invoke(new()
        ///     {
        ///         Name = "PRACredentialPool01",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// # Retrieves PRA Credential Pool By ID
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zpa = Pulumi.Zpa;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Zpa.GetCredentialPool.Invoke(new()
        ///     {
        ///         Id = "5458",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPraCredentialPoolResult> Invoke(GetPraCredentialPoolInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPraCredentialPoolResult>("zpa:index/getPraCredentialPool:getPraCredentialPool", args ?? new GetPraCredentialPoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPraCredentialPoolArgs : global::Pulumi.InvokeArgs
    {
        [Input("credentials")]
        private List<Inputs.GetPraCredentialPoolCredentialArgs>? _credentials;
        public List<Inputs.GetPraCredentialPoolCredentialArgs> Credentials
        {
            get => _credentials ?? (_credentials = new List<Inputs.GetPraCredentialPoolCredentialArgs>());
            set => _credentials = value;
        }

        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// - (String) The name of the privileged credential.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetPraCredentialPoolArgs()
        {
        }
        public static new GetPraCredentialPoolArgs Empty => new GetPraCredentialPoolArgs();
    }

    public sealed class GetPraCredentialPoolInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("credentials")]
        private InputList<Inputs.GetPraCredentialPoolCredentialInputArgs>? _credentials;
        public InputList<Inputs.GetPraCredentialPoolCredentialInputArgs> Credentials
        {
            get => _credentials ?? (_credentials = new InputList<Inputs.GetPraCredentialPoolCredentialInputArgs>());
            set => _credentials = value;
        }

        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// - (String) The name of the privileged credential.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetPraCredentialPoolInvokeArgs()
        {
        }
        public static new GetPraCredentialPoolInvokeArgs Empty => new GetPraCredentialPoolInvokeArgs();
    }


    [OutputType]
    public sealed class GetPraCredentialPoolResult
    {
        public readonly string CreationTime;
        public readonly string CredentialMappingCount;
        public readonly string CredentialType;
        public readonly ImmutableArray<Outputs.GetPraCredentialPoolCredentialResult> Credentials;
        public readonly string? Id;
        public readonly string MicrotenantId;
        public readonly string MicrotenantName;
        public readonly string ModifiedBy;
        public readonly string ModifiedTime;
        /// <summary>
        /// - (String) The name of the privileged credential.
        /// </summary>
        public readonly string? Name;

        [OutputConstructor]
        private GetPraCredentialPoolResult(
            string creationTime,

            string credentialMappingCount,

            string credentialType,

            ImmutableArray<Outputs.GetPraCredentialPoolCredentialResult> credentials,

            string? id,

            string microtenantId,

            string microtenantName,

            string modifiedBy,

            string modifiedTime,

            string? name)
        {
            CreationTime = creationTime;
            CredentialMappingCount = credentialMappingCount;
            CredentialType = credentialType;
            Credentials = credentials;
            Id = id;
            MicrotenantId = microtenantId;
            MicrotenantName = microtenantName;
            ModifiedBy = modifiedBy;
            ModifiedTime = modifiedTime;
            Name = name;
        }
    }
}
