// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Zscaler.Zpa
{
    /// <summary>
    /// * [Official documentation](https://help.zscaler.com/zpa/configuring-emergency-access)
    /// * [API documentation](https://help.zscaler.com/zpa/configuring-emergency-access-users-using-api)
    /// 
    /// The **zpa_emergency_access_user** Create emergency access users with permissions limited to privileged approvals in the specified IdP that is enabled for emergency access.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Zpa = Zscaler.Zpa;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @this = new Zpa.EmergencyAccessUser("this", new()
    ///     {
    ///         EmailId = "usertest@example.com",
    ///         FirstName = "User",
    ///         LastName = "Test",
    ///         UserId = "usertest",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// The `zpa_emergency_access_user` do not support resource import.
    /// </summary>
    [ZpaResourceType("zpa:index/emergencyAccessUser:EmergencyAccessUser")]
    public partial class EmergencyAccessUser : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The email address of the emergency access user, as provided by the admin
        /// </summary>
        [Output("emailId")]
        public Output<string?> EmailId { get; private set; } = null!;

        /// <summary>
        /// The first name of the emergency access user
        /// </summary>
        [Output("firstName")]
        public Output<string> FirstName { get; private set; } = null!;

        /// <summary>
        /// The last name of the emergency access user, as provided by the admin
        /// </summary>
        [Output("lastName")]
        public Output<string> LastName { get; private set; } = null!;

        /// <summary>
        /// The unique identifier of the emergency access user
        /// </summary>
        [Output("userId")]
        public Output<string> UserId { get; private set; } = null!;


        /// <summary>
        /// Create a EmergencyAccessUser resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EmergencyAccessUser(string name, EmergencyAccessUserArgs? args = null, CustomResourceOptions? options = null)
            : base("zpa:index/emergencyAccessUser:EmergencyAccessUser", name, args ?? new EmergencyAccessUserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EmergencyAccessUser(string name, Input<string> id, EmergencyAccessUserState? state = null, CustomResourceOptions? options = null)
            : base("zpa:index/emergencyAccessUser:EmergencyAccessUser", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/zscaler",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EmergencyAccessUser resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EmergencyAccessUser Get(string name, Input<string> id, EmergencyAccessUserState? state = null, CustomResourceOptions? options = null)
        {
            return new EmergencyAccessUser(name, id, state, options);
        }
    }

    public sealed class EmergencyAccessUserArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The email address of the emergency access user, as provided by the admin
        /// </summary>
        [Input("emailId")]
        public Input<string>? EmailId { get; set; }

        /// <summary>
        /// The first name of the emergency access user
        /// </summary>
        [Input("firstName")]
        public Input<string>? FirstName { get; set; }

        /// <summary>
        /// The last name of the emergency access user, as provided by the admin
        /// </summary>
        [Input("lastName")]
        public Input<string>? LastName { get; set; }

        /// <summary>
        /// The unique identifier of the emergency access user
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        public EmergencyAccessUserArgs()
        {
        }
        public static new EmergencyAccessUserArgs Empty => new EmergencyAccessUserArgs();
    }

    public sealed class EmergencyAccessUserState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The email address of the emergency access user, as provided by the admin
        /// </summary>
        [Input("emailId")]
        public Input<string>? EmailId { get; set; }

        /// <summary>
        /// The first name of the emergency access user
        /// </summary>
        [Input("firstName")]
        public Input<string>? FirstName { get; set; }

        /// <summary>
        /// The last name of the emergency access user, as provided by the admin
        /// </summary>
        [Input("lastName")]
        public Input<string>? LastName { get; set; }

        /// <summary>
        /// The unique identifier of the emergency access user
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        public EmergencyAccessUserState()
        {
        }
        public static new EmergencyAccessUserState Empty => new EmergencyAccessUserState();
    }
}
