// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zpa
{
    /// <summary>
    /// * [Official documentation](https://help.zscaler.com/isolation/about-custom-root-certificates-cloud-browser-isolation)
    /// 
    /// The **zpa_cloud_browser_isolation_external_profile** resource creates a Cloud Browser Isolation external profile. This resource can then be used in as part of `zpa.PolicyAccessIsolationRule` when the `action` attribute is set to `ISOLATE`.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Zpa = Pulumi.Zpa;
    /// using Zpa = zscaler.PulumiPackage.Zpa;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var thisCloudBrowserIsolationBanner = Zpa.GetCloudBrowserIsolationBanner.Invoke(new()
    ///     {
    ///         Name = "Default",
    ///     });
    /// 
    ///     var singapore = Zpa.GetCloudBrowserIsolationRegion.Invoke(new()
    ///     {
    ///         Name = "Singapore",
    ///     });
    /// 
    ///     var frankfurt = Zpa.GetCloudBrowserIsolationRegion.Invoke(new()
    ///     {
    ///         Name = "Frankfurt",
    ///     });
    /// 
    ///     var thisCloudBrowserIsolationCertificate = Zpa.GetCloudBrowserIsolationCertificate.Invoke(new()
    ///     {
    ///         Name = "Zscaler Root Certificate",
    ///     });
    /// 
    ///     var thisCloudBrowserIsolationExternalProfile = new Zpa.CloudBrowserIsolationExternalProfile("thisCloudBrowserIsolationExternalProfile", new()
    ///     {
    ///         Description = "CBI_Profile_Example",
    ///         BannerId = thisCloudBrowserIsolationBanner.Apply(getCloudBrowserIsolationBannerResult =&gt; getCloudBrowserIsolationBannerResult.Id),
    ///         RegionIds = new[]
    ///         {
    ///             singapore.Apply(getCloudBrowserIsolationRegionResult =&gt; getCloudBrowserIsolationRegionResult.Id),
    ///         },
    ///         CertificateIds = new[]
    ///         {
    ///             thisCloudBrowserIsolationCertificate.Apply(getCloudBrowserIsolationCertificateResult =&gt; getCloudBrowserIsolationCertificateResult.Id),
    ///         },
    ///         UserExperience = new Zpa.Inputs.CloudBrowserIsolationExternalProfileUserExperienceArgs
    ///         {
    ///             ForwardToZia = new Zpa.Inputs.CloudBrowserIsolationExternalProfileUserExperienceForwardToZiaArgs
    ///             {
    ///                 Enabled = true,
    ///                 OrganizationId = "***********",
    ///                 CloudName = "&lt;cloud_name&gt;",
    ///                 PacFileUrl = "https://pac.&lt;cloud_name&gt;/&lt;cloud_name&gt;/proxy.pac",
    ///             },
    ///             BrowserInBrowser = true,
    ///             PersistIsolationBar = true,
    ///             Translate = true,
    ///             SessionPersistence = true,
    ///         },
    ///         SecurityControls = new Zpa.Inputs.CloudBrowserIsolationExternalProfileSecurityControlsArgs
    ///         {
    ///             CopyPaste = "all",
    ///             UploadDownload = "upstream",
    ///             DocumentViewer = true,
    ///             LocalRender = true,
    ///             AllowPrinting = true,
    ///             RestrictKeystrokes = true,
    ///             FlattenedPdf = true,
    ///             DeepLink = new Zpa.Inputs.CloudBrowserIsolationExternalProfileSecurityControlsDeepLinkArgs
    ///             {
    ///                 Enabled = true,
    ///                 Applications = new[]
    ///                 {
    ///                     "test1",
    ///                     "test",
    ///                 },
    ///             },
    ///             Watermark = new Zpa.Inputs.CloudBrowserIsolationExternalProfileSecurityControlsWatermarkArgs
    ///             {
    ///                 Enabled = true,
    ///                 ShowUserId = true,
    ///                 ShowTimestamp = true,
    ///                 ShowMessage = true,
    ///                 Message = "Zscaler CBI",
    ///             },
    ///         },
    ///         DebugMode = new Zpa.Inputs.CloudBrowserIsolationExternalProfileDebugModeArgs
    ///         {
    ///             Allowed = true,
    ///             FilePassword = "***********",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [ZpaResourceType("zpa:index/cloudBrowserIsolationExternalProfile:CloudBrowserIsolationExternalProfile")]
    public partial class CloudBrowserIsolationExternalProfile : global::Pulumi.CustomResource
    {
        [Output("bannerId")]
        public Output<string> BannerId { get; private set; } = null!;

        /// <summary>
        /// This field defines the list of certificate IDs.
        /// </summary>
        [Output("certificateIds")]
        public Output<ImmutableArray<string>> CertificateIds { get; private set; } = null!;

        [Output("debugMode")]
        public Output<Outputs.CloudBrowserIsolationExternalProfileDebugMode?> DebugMode { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// This field defines the list of region IDs.
        /// </summary>
        [Output("regionIds")]
        public Output<ImmutableArray<string>> RegionIds { get; private set; } = null!;

        [Output("securityControls")]
        public Output<Outputs.CloudBrowserIsolationExternalProfileSecurityControls?> SecurityControls { get; private set; } = null!;

        [Output("userExperience")]
        public Output<Outputs.CloudBrowserIsolationExternalProfileUserExperience> UserExperience { get; private set; } = null!;


        /// <summary>
        /// Create a CloudBrowserIsolationExternalProfile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudBrowserIsolationExternalProfile(string name, CloudBrowserIsolationExternalProfileArgs args, CustomResourceOptions? options = null)
            : base("zpa:index/cloudBrowserIsolationExternalProfile:CloudBrowserIsolationExternalProfile", name, args ?? new CloudBrowserIsolationExternalProfileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudBrowserIsolationExternalProfile(string name, Input<string> id, CloudBrowserIsolationExternalProfileState? state = null, CustomResourceOptions? options = null)
            : base("zpa:index/cloudBrowserIsolationExternalProfile:CloudBrowserIsolationExternalProfile", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/zscaler",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudBrowserIsolationExternalProfile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudBrowserIsolationExternalProfile Get(string name, Input<string> id, CloudBrowserIsolationExternalProfileState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudBrowserIsolationExternalProfile(name, id, state, options);
        }
    }

    public sealed class CloudBrowserIsolationExternalProfileArgs : global::Pulumi.ResourceArgs
    {
        [Input("bannerId", required: true)]
        public Input<string> BannerId { get; set; } = null!;

        [Input("certificateIds")]
        private InputList<string>? _certificateIds;

        /// <summary>
        /// This field defines the list of certificate IDs.
        /// </summary>
        public InputList<string> CertificateIds
        {
            get => _certificateIds ?? (_certificateIds = new InputList<string>());
            set => _certificateIds = value;
        }

        [Input("debugMode")]
        public Input<Inputs.CloudBrowserIsolationExternalProfileDebugModeArgs>? DebugMode { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("regionIds")]
        private InputList<string>? _regionIds;

        /// <summary>
        /// This field defines the list of region IDs.
        /// </summary>
        public InputList<string> RegionIds
        {
            get => _regionIds ?? (_regionIds = new InputList<string>());
            set => _regionIds = value;
        }

        [Input("securityControls")]
        public Input<Inputs.CloudBrowserIsolationExternalProfileSecurityControlsArgs>? SecurityControls { get; set; }

        [Input("userExperience")]
        public Input<Inputs.CloudBrowserIsolationExternalProfileUserExperienceArgs>? UserExperience { get; set; }

        public CloudBrowserIsolationExternalProfileArgs()
        {
        }
        public static new CloudBrowserIsolationExternalProfileArgs Empty => new CloudBrowserIsolationExternalProfileArgs();
    }

    public sealed class CloudBrowserIsolationExternalProfileState : global::Pulumi.ResourceArgs
    {
        [Input("bannerId")]
        public Input<string>? BannerId { get; set; }

        [Input("certificateIds")]
        private InputList<string>? _certificateIds;

        /// <summary>
        /// This field defines the list of certificate IDs.
        /// </summary>
        public InputList<string> CertificateIds
        {
            get => _certificateIds ?? (_certificateIds = new InputList<string>());
            set => _certificateIds = value;
        }

        [Input("debugMode")]
        public Input<Inputs.CloudBrowserIsolationExternalProfileDebugModeGetArgs>? DebugMode { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("regionIds")]
        private InputList<string>? _regionIds;

        /// <summary>
        /// This field defines the list of region IDs.
        /// </summary>
        public InputList<string> RegionIds
        {
            get => _regionIds ?? (_regionIds = new InputList<string>());
            set => _regionIds = value;
        }

        [Input("securityControls")]
        public Input<Inputs.CloudBrowserIsolationExternalProfileSecurityControlsGetArgs>? SecurityControls { get; set; }

        [Input("userExperience")]
        public Input<Inputs.CloudBrowserIsolationExternalProfileUserExperienceGetArgs>? UserExperience { get; set; }

        public CloudBrowserIsolationExternalProfileState()
        {
        }
        public static new CloudBrowserIsolationExternalProfileState Empty => new CloudBrowserIsolationExternalProfileState();
    }
}
