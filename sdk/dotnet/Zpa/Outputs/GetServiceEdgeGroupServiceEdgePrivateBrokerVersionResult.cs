// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zpa.Outputs
{

    [OutputType]
    public sealed class GetServiceEdgeGroupServiceEdgePrivateBrokerVersionResult
    {
        public readonly string ApplicationStartTime;
        public readonly string BrokerId;
        public readonly string CreationTime;
        public readonly string CurrentVersion;
        public readonly bool DisableAutoUpdate;
        public readonly string Id;
        public readonly string LastConnectTime;
        public readonly string LastDisconnectTime;
        public readonly string LastUpgradedTime;
        public readonly bool LoneWarrior;
        public readonly string ModifiedBy;
        public readonly string ModifiedTime;
        public readonly string Platform;
        public readonly string PlatformDetail;
        public readonly string PreviousVersion;
        public readonly string PrivateIp;
        public readonly string PublicIp;
        public readonly string RestartInstructions;
        public readonly string RestartTimeInSec;
        public readonly string RuntimeOs;
        public readonly string SargeVersion;
        public readonly string ServiceEdgeGroupId;
        public readonly string SystemStartTime;
        public readonly string TunnelId;
        public readonly string UpgradeAttempt;
        public readonly bool UpgradeNowOnce;
        public readonly string UpgradeStatus;
        public readonly ImmutableArray<Outputs.GetServiceEdgeGroupServiceEdgePrivateBrokerVersionZpnSubModuleUpgradeResult> ZpnSubModuleUpgrades;

        [OutputConstructor]
        private GetServiceEdgeGroupServiceEdgePrivateBrokerVersionResult(
            string applicationStartTime,

            string brokerId,

            string creationTime,

            string currentVersion,

            bool disableAutoUpdate,

            string id,

            string lastConnectTime,

            string lastDisconnectTime,

            string lastUpgradedTime,

            bool loneWarrior,

            string modifiedBy,

            string modifiedTime,

            string platform,

            string platformDetail,

            string previousVersion,

            string privateIp,

            string publicIp,

            string restartInstructions,

            string restartTimeInSec,

            string runtimeOs,

            string sargeVersion,

            string serviceEdgeGroupId,

            string systemStartTime,

            string tunnelId,

            string upgradeAttempt,

            bool upgradeNowOnce,

            string upgradeStatus,

            ImmutableArray<Outputs.GetServiceEdgeGroupServiceEdgePrivateBrokerVersionZpnSubModuleUpgradeResult> zpnSubModuleUpgrades)
        {
            ApplicationStartTime = applicationStartTime;
            BrokerId = brokerId;
            CreationTime = creationTime;
            CurrentVersion = currentVersion;
            DisableAutoUpdate = disableAutoUpdate;
            Id = id;
            LastConnectTime = lastConnectTime;
            LastDisconnectTime = lastDisconnectTime;
            LastUpgradedTime = lastUpgradedTime;
            LoneWarrior = loneWarrior;
            ModifiedBy = modifiedBy;
            ModifiedTime = modifiedTime;
            Platform = platform;
            PlatformDetail = platformDetail;
            PreviousVersion = previousVersion;
            PrivateIp = privateIp;
            PublicIp = publicIp;
            RestartInstructions = restartInstructions;
            RestartTimeInSec = restartTimeInSec;
            RuntimeOs = runtimeOs;
            SargeVersion = sargeVersion;
            ServiceEdgeGroupId = serviceEdgeGroupId;
            SystemStartTime = systemStartTime;
            TunnelId = tunnelId;
            UpgradeAttempt = upgradeAttempt;
            UpgradeNowOnce = upgradeNowOnce;
            UpgradeStatus = upgradeStatus;
            ZpnSubModuleUpgrades = zpnSubModuleUpgrades;
        }
    }
}
