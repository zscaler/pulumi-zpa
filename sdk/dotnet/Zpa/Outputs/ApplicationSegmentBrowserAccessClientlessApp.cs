// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zpa.Outputs
{

    [OutputType]
    public sealed class ApplicationSegmentBrowserAccessClientlessApp
    {
        /// <summary>
        /// If you want ZPA to forward unauthenticated HTTP preflight OPTIONS requests from the browser to the app.
        /// </summary>
        public readonly bool? AllowOptions;
        public readonly string? AppId;
        /// <summary>
        /// Port for the BA app.
        /// </summary>
        public readonly string ApplicationPort;
        /// <summary>
        /// Protocol for the BA app.
        /// </summary>
        public readonly string ApplicationProtocol;
        /// <summary>
        /// ID of the BA certificate.
        /// </summary>
        public readonly string? CertificateId;
        /// <summary>
        /// ID of the BA certificate.
        /// </summary>
        public readonly string? Cname;
        public readonly string? Description;
        /// <summary>
        /// Domain name or IP address of the BA app.
        /// </summary>
        public readonly string? Domain;
        public readonly bool? Enabled;
        /// <summary>
        /// The external domain name prefix of the Browser Access application that is used for Zscaler-managed certificates when creating a privileged portal.
        /// </summary>
        public readonly string? ExtDomain;
        /// <summary>
        /// The domain prefix for the privileged portal URL. The supported string can include numbers, lower case characters, and only supports a hyphen (-).
        /// </summary>
        public readonly string? ExtLabel;
        public readonly string? Id;
        public readonly string? MicrotenantId;
        public readonly string Name;
        /// <summary>
        /// Indicates whether Use Untrusted Certificates is enabled or disabled for a BA app.
        /// </summary>
        public readonly bool? TrustUntrustedCert;

        [OutputConstructor]
        private ApplicationSegmentBrowserAccessClientlessApp(
            bool? allowOptions,

            string? appId,

            string applicationPort,

            string applicationProtocol,

            string? certificateId,

            string? cname,

            string? description,

            string? domain,

            bool? enabled,

            string? extDomain,

            string? extLabel,

            string? id,

            string? microtenantId,

            string name,

            bool? trustUntrustedCert)
        {
            AllowOptions = allowOptions;
            AppId = appId;
            ApplicationPort = applicationPort;
            ApplicationProtocol = applicationProtocol;
            CertificateId = certificateId;
            Cname = cname;
            Description = description;
            Domain = domain;
            Enabled = enabled;
            ExtDomain = extDomain;
            ExtLabel = extLabel;
            Id = id;
            MicrotenantId = microtenantId;
            Name = name;
            TrustUntrustedCert = trustUntrustedCert;
        }
    }
}
