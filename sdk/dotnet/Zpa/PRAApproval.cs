// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace zscaler.PulumiPackage.Zpa
{
    /// <summary>
    /// * [Official documentation](https://help.zscaler.com/zpa/about-privileged-approvals)
    /// * [API documentation](https://help.zscaler.com/zpa/configuring-privileged-approvals-using-api)
    /// 
    /// The **zpa_pra_approval_controller** resource creates a privileged remote access approval in the Zscaler Private Access cloud. This resource allows third-party users and contractors to be able to log in to a Privileged Remote Access (PRA) portal.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Zpa = zscaler.PulumiPackage.Zpa;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // ZPA Segment Group resource
    ///     var thisSegmentGroup = new Zpa.SegmentGroup("thisSegmentGroup", new()
    ///     {
    ///         Description = "Example",
    ///         Enabled = true,
    ///     });
    /// 
    ///     // ZPA App Connector Group resource
    ///     var thisConnectorGroup = new Zpa.ConnectorGroup("thisConnectorGroup", new()
    ///     {
    ///         Description = "Example",
    ///         Enabled = true,
    ///         CityCountry = "San Jose, CA",
    ///         CountryCode = "US",
    ///         Latitude = "37.338",
    ///         Longitude = "-121.8863",
    ///         Location = "San Jose, CA, US",
    ///         UpgradeDay = "SUNDAY",
    ///         UpgradeTimeInSecs = "66600",
    ///         OverrideVersionProfile = true,
    ///         VersionProfileId = "0",
    ///         DnsQueryType = "IPV4",
    ///     });
    /// 
    ///     // ZPA Server Group resource
    ///     var thisServerGroup = new Zpa.ServerGroup("thisServerGroup", new()
    ///     {
    ///         Description = "Example",
    ///         Enabled = true,
    ///         DynamicDiscovery = false,
    ///         AppConnectorGroups = new[]
    ///         {
    ///             new Zpa.Inputs.ServerGroupAppConnectorGroupArgs
    ///             {
    ///                 Ids = new[]
    ///                 {
    ///                     thisConnectorGroup.Id,
    ///                 },
    ///             },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             thisConnectorGroup,
    ///         },
    ///     });
    /// 
    ///     // ZPA Application Segment resource
    ///     var thisApplicationSegment = new Zpa.ApplicationSegment("thisApplicationSegment", new()
    ///     {
    ///         Description = "Example",
    ///         Enabled = true,
    ///         HealthReporting = "ON_ACCESS",
    ///         BypassType = "NEVER",
    ///         IsCnameEnabled = true,
    ///         TcpPortRanges = new[]
    ///         {
    ///             "8080",
    ///             "8080",
    ///         },
    ///         DomainNames = new[]
    ///         {
    ///             "server.acme.com",
    ///         },
    ///         SegmentGroupId = thisSegmentGroup.Id,
    ///         ServerGroups = new[]
    ///         {
    ///             new Zpa.Inputs.ApplicationSegmentServerGroupArgs
    ///             {
    ///                 Ids = new[]
    ///                 {
    ///                     thisServerGroup.Id,
    ///                 },
    ///             },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             thisServerGroup,
    ///             thisSegmentGroup,
    ///         },
    ///     });
    /// 
    ///     // Create PRA Approval Controller
    ///     var thisPRAApproval = new Zpa.PRAApproval("thisPRAApproval", new()
    ///     {
    ///         EmailIds = new[]
    ///         {
    ///             "jdoe@acme.com",
    ///         },
    ///         StartTime = "Tue, 07 Mar 2024 11:05:30 PST",
    ///         EndTime = "Tue, 07 Jun 2024 11:05:30 PST",
    ///         Status = "FUTURE",
    ///         Applications = new[]
    ///         {
    ///             new Zpa.Inputs.PRAApprovalApplicationArgs
    ///             {
    ///                 Ids = new[]
    ///                 {
    ///                     thisApplicationSegment.Id,
    ///                 },
    ///             },
    ///         },
    ///         WorkingHours = new[]
    ///         {
    ///             new Zpa.Inputs.PRAApprovalWorkingHourArgs
    ///             {
    ///                 Days = new[]
    ///                 {
    ///                     "FRI",
    ///                     "MON",
    ///                     "SAT",
    ///                     "SUN",
    ///                     "THU",
    ///                     "TUE",
    ///                     "WED",
    ///                 },
    ///                 StartTime = "00:10",
    ///                 StartTimeCron = "0 0 8 ? * MON,TUE,WED,THU,FRI,SAT",
    ///                 EndTime = "09:15",
    ///                 EndTimeCron = "0 15 17 ? * MON,TUE,WED,THU,FRI,SAT",
    ///                 Timezone = "America/Vancouver",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Zscaler offers a dedicated tool called Zscaler-Terraformer to allow the automated import of ZPA configurations into Terraform-compliant HashiCorp Configuration Language.
    /// 
    /// Visit
    /// 
    /// **zpa_pra_approval_controller** can be imported by using `&lt;APPROVAL ID&gt;` or `&lt;APPROVAL NAME&gt;` as the import ID.
    /// 
    /// For example:
    /// 
    /// ```sh
    /// $ pulumi import zpa:index/pRAApproval:PRAApproval this &lt;approval_id&gt;
    /// ```
    /// 
    /// or
    /// 
    /// ```sh
    /// $ pulumi import zpa:index/pRAApproval:PRAApproval this &lt;approval_name&gt;
    /// ```
    /// </summary>
    [ZpaResourceType("zpa:index/pRAApproval:PRAApproval")]
    public partial class PRAApproval : global::Pulumi.CustomResource
    {
        [Output("applications")]
        public Output<ImmutableArray<Outputs.PRAApprovalApplication>> Applications { get; private set; } = null!;

        /// <summary>
        /// The email address of the user that you are assigning the privileged approval to
        /// </summary>
        [Output("emailIds")]
        public Output<ImmutableArray<string>> EmailIds { get; private set; } = null!;

        /// <summary>
        /// The end date that the user no longer has access to the privileged approval
        /// </summary>
        [Output("endTime")]
        public Output<string> EndTime { get; private set; } = null!;

        /// <summary>
        /// The unique identifier of the Microtenant for the ZPA tenant. If you are within the Default Microtenant, pass
        /// microtenantId as 0 when making requests to retrieve data from the Default Microtenant.
        /// </summary>
        [Output("microtenantId")]
        public Output<string> MicrotenantId { get; private set; } = null!;

        /// <summary>
        /// The start date that the user has access to the privileged approval
        /// </summary>
        [Output("startTime")]
        public Output<string> StartTime { get; private set; } = null!;

        /// <summary>
        /// The status of the privileged approval
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("workingHours")]
        public Output<ImmutableArray<Outputs.PRAApprovalWorkingHour>> WorkingHours { get; private set; } = null!;


        /// <summary>
        /// Create a PRAApproval resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PRAApproval(string name, PRAApprovalArgs args, CustomResourceOptions? options = null)
            : base("zpa:index/pRAApproval:PRAApproval", name, args ?? new PRAApprovalArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PRAApproval(string name, Input<string> id, PRAApprovalState? state = null, CustomResourceOptions? options = null)
            : base("zpa:index/pRAApproval:PRAApproval", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/zscaler",
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "zpa:index/praApprovalController:PraApprovalController" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PRAApproval resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PRAApproval Get(string name, Input<string> id, PRAApprovalState? state = null, CustomResourceOptions? options = null)
        {
            return new PRAApproval(name, id, state, options);
        }
    }

    public sealed class PRAApprovalArgs : global::Pulumi.ResourceArgs
    {
        [Input("applications", required: true)]
        private InputList<Inputs.PRAApprovalApplicationArgs>? _applications;
        public InputList<Inputs.PRAApprovalApplicationArgs> Applications
        {
            get => _applications ?? (_applications = new InputList<Inputs.PRAApprovalApplicationArgs>());
            set => _applications = value;
        }

        [Input("emailIds")]
        private InputList<string>? _emailIds;

        /// <summary>
        /// The email address of the user that you are assigning the privileged approval to
        /// </summary>
        public InputList<string> EmailIds
        {
            get => _emailIds ?? (_emailIds = new InputList<string>());
            set => _emailIds = value;
        }

        /// <summary>
        /// The end date that the user no longer has access to the privileged approval
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        /// <summary>
        /// The unique identifier of the Microtenant for the ZPA tenant. If you are within the Default Microtenant, pass
        /// microtenantId as 0 when making requests to retrieve data from the Default Microtenant.
        /// </summary>
        [Input("microtenantId")]
        public Input<string>? MicrotenantId { get; set; }

        /// <summary>
        /// The start date that the user has access to the privileged approval
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// The status of the privileged approval
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("workingHours")]
        private InputList<Inputs.PRAApprovalWorkingHourArgs>? _workingHours;
        public InputList<Inputs.PRAApprovalWorkingHourArgs> WorkingHours
        {
            get => _workingHours ?? (_workingHours = new InputList<Inputs.PRAApprovalWorkingHourArgs>());
            set => _workingHours = value;
        }

        public PRAApprovalArgs()
        {
        }
        public static new PRAApprovalArgs Empty => new PRAApprovalArgs();
    }

    public sealed class PRAApprovalState : global::Pulumi.ResourceArgs
    {
        [Input("applications")]
        private InputList<Inputs.PRAApprovalApplicationGetArgs>? _applications;
        public InputList<Inputs.PRAApprovalApplicationGetArgs> Applications
        {
            get => _applications ?? (_applications = new InputList<Inputs.PRAApprovalApplicationGetArgs>());
            set => _applications = value;
        }

        [Input("emailIds")]
        private InputList<string>? _emailIds;

        /// <summary>
        /// The email address of the user that you are assigning the privileged approval to
        /// </summary>
        public InputList<string> EmailIds
        {
            get => _emailIds ?? (_emailIds = new InputList<string>());
            set => _emailIds = value;
        }

        /// <summary>
        /// The end date that the user no longer has access to the privileged approval
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        /// <summary>
        /// The unique identifier of the Microtenant for the ZPA tenant. If you are within the Default Microtenant, pass
        /// microtenantId as 0 when making requests to retrieve data from the Default Microtenant.
        /// </summary>
        [Input("microtenantId")]
        public Input<string>? MicrotenantId { get; set; }

        /// <summary>
        /// The start date that the user has access to the privileged approval
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// The status of the privileged approval
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("workingHours")]
        private InputList<Inputs.PRAApprovalWorkingHourGetArgs>? _workingHours;
        public InputList<Inputs.PRAApprovalWorkingHourGetArgs> WorkingHours
        {
            get => _workingHours ?? (_workingHours = new InputList<Inputs.PRAApprovalWorkingHourGetArgs>());
            set => _workingHours = value;
        }

        public PRAApprovalState()
        {
        }
        public static new PRAApprovalState Empty => new PRAApprovalState();
    }
}
