// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Zscaler.Zpa
{
    [ZpaResourceType("zpa:index/policyAccessCredentialRule:PolicyAccessCredentialRule")]
    public partial class PolicyAccessCredentialRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// This is for providing the rule action.
        /// </summary>
        [Output("action")]
        public Output<string?> Action { get; private set; } = null!;

        /// <summary>
        /// This is for proviidng the set of conditions for the policy.
        /// </summary>
        [Output("conditions")]
        public Output<ImmutableArray<Outputs.PolicyAccessCredentialRuleCondition>> Conditions { get; private set; } = null!;

        [Output("credentialPools")]
        public Output<ImmutableArray<Outputs.PolicyAccessCredentialRuleCredentialPool>> CredentialPools { get; private set; } = null!;

        [Output("credentials")]
        public Output<ImmutableArray<Outputs.PolicyAccessCredentialRuleCredential>> Credentials { get; private set; } = null!;

        /// <summary>
        /// This is the description of the access policy.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("microtenantId")]
        public Output<string> MicrotenantId { get; private set; } = null!;

        /// <summary>
        /// This is the name of the policy.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("policySetId")]
        public Output<string> PolicySetId { get; private set; } = null!;


        /// <summary>
        /// Create a PolicyAccessCredentialRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PolicyAccessCredentialRule(string name, PolicyAccessCredentialRuleArgs? args = null, CustomResourceOptions? options = null)
            : base("zpa:index/policyAccessCredentialRule:PolicyAccessCredentialRule", name, args ?? new PolicyAccessCredentialRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PolicyAccessCredentialRule(string name, Input<string> id, PolicyAccessCredentialRuleState? state = null, CustomResourceOptions? options = null)
            : base("zpa:index/policyAccessCredentialRule:PolicyAccessCredentialRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/zscaler",
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "zpa:index/policyCredentialRule:PolicyCredentialRule" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PolicyAccessCredentialRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PolicyAccessCredentialRule Get(string name, Input<string> id, PolicyAccessCredentialRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new PolicyAccessCredentialRule(name, id, state, options);
        }
    }

    public sealed class PolicyAccessCredentialRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// This is for providing the rule action.
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        [Input("conditions")]
        private InputList<Inputs.PolicyAccessCredentialRuleConditionArgs>? _conditions;

        /// <summary>
        /// This is for proviidng the set of conditions for the policy.
        /// </summary>
        public InputList<Inputs.PolicyAccessCredentialRuleConditionArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Inputs.PolicyAccessCredentialRuleConditionArgs>());
            set => _conditions = value;
        }

        [Input("credentialPools")]
        private InputList<Inputs.PolicyAccessCredentialRuleCredentialPoolArgs>? _credentialPools;
        public InputList<Inputs.PolicyAccessCredentialRuleCredentialPoolArgs> CredentialPools
        {
            get => _credentialPools ?? (_credentialPools = new InputList<Inputs.PolicyAccessCredentialRuleCredentialPoolArgs>());
            set => _credentialPools = value;
        }

        [Input("credentials")]
        private InputList<Inputs.PolicyAccessCredentialRuleCredentialArgs>? _credentials;
        public InputList<Inputs.PolicyAccessCredentialRuleCredentialArgs> Credentials
        {
            get => _credentials ?? (_credentials = new InputList<Inputs.PolicyAccessCredentialRuleCredentialArgs>());
            set => _credentials = value;
        }

        /// <summary>
        /// This is the description of the access policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("microtenantId")]
        public Input<string>? MicrotenantId { get; set; }

        /// <summary>
        /// This is the name of the policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public PolicyAccessCredentialRuleArgs()
        {
        }
        public static new PolicyAccessCredentialRuleArgs Empty => new PolicyAccessCredentialRuleArgs();
    }

    public sealed class PolicyAccessCredentialRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// This is for providing the rule action.
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        [Input("conditions")]
        private InputList<Inputs.PolicyAccessCredentialRuleConditionGetArgs>? _conditions;

        /// <summary>
        /// This is for proviidng the set of conditions for the policy.
        /// </summary>
        public InputList<Inputs.PolicyAccessCredentialRuleConditionGetArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Inputs.PolicyAccessCredentialRuleConditionGetArgs>());
            set => _conditions = value;
        }

        [Input("credentialPools")]
        private InputList<Inputs.PolicyAccessCredentialRuleCredentialPoolGetArgs>? _credentialPools;
        public InputList<Inputs.PolicyAccessCredentialRuleCredentialPoolGetArgs> CredentialPools
        {
            get => _credentialPools ?? (_credentialPools = new InputList<Inputs.PolicyAccessCredentialRuleCredentialPoolGetArgs>());
            set => _credentialPools = value;
        }

        [Input("credentials")]
        private InputList<Inputs.PolicyAccessCredentialRuleCredentialGetArgs>? _credentials;
        public InputList<Inputs.PolicyAccessCredentialRuleCredentialGetArgs> Credentials
        {
            get => _credentials ?? (_credentials = new InputList<Inputs.PolicyAccessCredentialRuleCredentialGetArgs>());
            set => _credentials = value;
        }

        /// <summary>
        /// This is the description of the access policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("microtenantId")]
        public Input<string>? MicrotenantId { get; set; }

        /// <summary>
        /// This is the name of the policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("policySetId")]
        public Input<string>? PolicySetId { get; set; }

        public PolicyAccessCredentialRuleState()
        {
        }
        public static new PolicyAccessCredentialRuleState Empty => new PolicyAccessCredentialRuleState();
    }
}
